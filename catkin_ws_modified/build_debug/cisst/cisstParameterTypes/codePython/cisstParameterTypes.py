# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_cisstParameterTypesPython', [dirname(__file__)])
        except ImportError:
            import _cisstParameterTypesPython
            return _cisstParameterTypesPython
        if fp is not None:
            try:
                _mod = imp.load_module('_cisstParameterTypesPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _cisstParameterTypesPython = swig_import_helper()
    del swig_import_helper
else:
    import _cisstParameterTypesPython
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class SwigPyIterator(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_SwigPyIterator
    __del__ = lambda self : None;
    def value(self): return _cisstParameterTypesPython.SwigPyIterator_value(self)
    def incr(self, n=1): return _cisstParameterTypesPython.SwigPyIterator_incr(self, n)
    def decr(self, n=1): return _cisstParameterTypesPython.SwigPyIterator_decr(self, n)
    def distance(self, *args): return _cisstParameterTypesPython.SwigPyIterator_distance(self, *args)
    def equal(self, *args): return _cisstParameterTypesPython.SwigPyIterator_equal(self, *args)
    def copy(self): return _cisstParameterTypesPython.SwigPyIterator_copy(self)
    def next(self): return _cisstParameterTypesPython.SwigPyIterator_next(self)
    def __next__(self): return _cisstParameterTypesPython.SwigPyIterator___next__(self)
    def previous(self): return _cisstParameterTypesPython.SwigPyIterator_previous(self)
    def advance(self, *args): return _cisstParameterTypesPython.SwigPyIterator_advance(self, *args)
    def __eq__(self, *args): return _cisstParameterTypesPython.SwigPyIterator___eq__(self, *args)
    def __ne__(self, *args): return _cisstParameterTypesPython.SwigPyIterator___ne__(self, *args)
    def __iadd__(self, *args): return _cisstParameterTypesPython.SwigPyIterator___iadd__(self, *args)
    def __isub__(self, *args): return _cisstParameterTypesPython.SwigPyIterator___isub__(self, *args)
    def __add__(self, *args): return _cisstParameterTypesPython.SwigPyIterator___add__(self, *args)
    def __sub__(self, *args): return _cisstParameterTypesPython.SwigPyIterator___sub__(self, *args)
    def __iter__(self): return self
SwigPyIterator_swigregister = _cisstParameterTypesPython.SwigPyIterator_swigregister
SwigPyIterator_swigregister(SwigPyIterator)

class ios_base(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    erase_event = _cisstParameterTypesPython.ios_base_erase_event
    imbue_event = _cisstParameterTypesPython.ios_base_imbue_event
    copyfmt_event = _cisstParameterTypesPython.ios_base_copyfmt_event
    def register_callback(self, *args): return _cisstParameterTypesPython.ios_base_register_callback(self, *args)
    def flags(self, *args): return _cisstParameterTypesPython.ios_base_flags(self, *args)
    def setf(self, *args): return _cisstParameterTypesPython.ios_base_setf(self, *args)
    def unsetf(self, *args): return _cisstParameterTypesPython.ios_base_unsetf(self, *args)
    def precision(self, *args): return _cisstParameterTypesPython.ios_base_precision(self, *args)
    def width(self, *args): return _cisstParameterTypesPython.ios_base_width(self, *args)
    sync_with_stdio = staticmethod(_cisstParameterTypesPython.ios_base_sync_with_stdio)
    def imbue(self, *args): return _cisstParameterTypesPython.ios_base_imbue(self, *args)
    def getloc(self): return _cisstParameterTypesPython.ios_base_getloc(self)
    xalloc = staticmethod(_cisstParameterTypesPython.ios_base_xalloc)
    def iword(self, *args): return _cisstParameterTypesPython.ios_base_iword(self, *args)
    def pword(self, *args): return _cisstParameterTypesPython.ios_base_pword(self, *args)
    __swig_destroy__ = _cisstParameterTypesPython.delete_ios_base
    __del__ = lambda self : None;
ios_base_swigregister = _cisstParameterTypesPython.ios_base_swigregister
ios_base_swigregister(ios_base)
cvar = _cisstParameterTypesPython.cvar
ios_base.boolalpha = _cisstParameterTypesPython.cvar.ios_base_boolalpha
ios_base.dec = _cisstParameterTypesPython.cvar.ios_base_dec
ios_base.fixed = _cisstParameterTypesPython.cvar.ios_base_fixed
ios_base.hex = _cisstParameterTypesPython.cvar.ios_base_hex
ios_base.internal = _cisstParameterTypesPython.cvar.ios_base_internal
ios_base.left = _cisstParameterTypesPython.cvar.ios_base_left
ios_base.oct = _cisstParameterTypesPython.cvar.ios_base_oct
ios_base.right = _cisstParameterTypesPython.cvar.ios_base_right
ios_base.scientific = _cisstParameterTypesPython.cvar.ios_base_scientific
ios_base.showbase = _cisstParameterTypesPython.cvar.ios_base_showbase
ios_base.showpoint = _cisstParameterTypesPython.cvar.ios_base_showpoint
ios_base.showpos = _cisstParameterTypesPython.cvar.ios_base_showpos
ios_base.skipws = _cisstParameterTypesPython.cvar.ios_base_skipws
ios_base.unitbuf = _cisstParameterTypesPython.cvar.ios_base_unitbuf
ios_base.uppercase = _cisstParameterTypesPython.cvar.ios_base_uppercase
ios_base.adjustfield = _cisstParameterTypesPython.cvar.ios_base_adjustfield
ios_base.basefield = _cisstParameterTypesPython.cvar.ios_base_basefield
ios_base.floatfield = _cisstParameterTypesPython.cvar.ios_base_floatfield
ios_base.badbit = _cisstParameterTypesPython.cvar.ios_base_badbit
ios_base.eofbit = _cisstParameterTypesPython.cvar.ios_base_eofbit
ios_base.failbit = _cisstParameterTypesPython.cvar.ios_base_failbit
ios_base.goodbit = _cisstParameterTypesPython.cvar.ios_base_goodbit
ios_base.app = _cisstParameterTypesPython.cvar.ios_base_app
ios_base.ate = _cisstParameterTypesPython.cvar.ios_base_ate
ios_base.binary = _cisstParameterTypesPython.cvar.ios_base_binary
ios_base.ios_base_in = _cisstParameterTypesPython.cvar.ios_base_ios_base_in
ios_base.out = _cisstParameterTypesPython.cvar.ios_base_out
ios_base.trunc = _cisstParameterTypesPython.cvar.ios_base_trunc
ios_base.beg = _cisstParameterTypesPython.cvar.ios_base_beg
ios_base.cur = _cisstParameterTypesPython.cvar.ios_base_cur
ios_base.end = _cisstParameterTypesPython.cvar.ios_base_end

def ios_base_sync_with_stdio(__sync=True):
  return _cisstParameterTypesPython.ios_base_sync_with_stdio(__sync)
ios_base_sync_with_stdio = _cisstParameterTypesPython.ios_base_sync_with_stdio

def ios_base_xalloc():
  return _cisstParameterTypesPython.ios_base_xalloc()
ios_base_xalloc = _cisstParameterTypesPython.ios_base_xalloc

class ios(ios_base):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def rdstate(self): return _cisstParameterTypesPython.ios_rdstate(self)
    def clear(self, *args): return _cisstParameterTypesPython.ios_clear(self, *args)
    def setstate(self, *args): return _cisstParameterTypesPython.ios_setstate(self, *args)
    def good(self): return _cisstParameterTypesPython.ios_good(self)
    def eof(self): return _cisstParameterTypesPython.ios_eof(self)
    def fail(self): return _cisstParameterTypesPython.ios_fail(self)
    def bad(self): return _cisstParameterTypesPython.ios_bad(self)
    def exceptions(self, *args): return _cisstParameterTypesPython.ios_exceptions(self, *args)
    def __init__(self, *args): 
        this = _cisstParameterTypesPython.new_ios(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_ios
    __del__ = lambda self : None;
    def tie(self, *args): return _cisstParameterTypesPython.ios_tie(self, *args)
    def rdbuf(self, *args): return _cisstParameterTypesPython.ios_rdbuf(self, *args)
    def copyfmt(self, *args): return _cisstParameterTypesPython.ios_copyfmt(self, *args)
    def fill(self, *args): return _cisstParameterTypesPython.ios_fill(self, *args)
    def imbue(self, *args): return _cisstParameterTypesPython.ios_imbue(self, *args)
    def narrow(self, *args): return _cisstParameterTypesPython.ios_narrow(self, *args)
    def widen(self, *args): return _cisstParameterTypesPython.ios_widen(self, *args)
ios_swigregister = _cisstParameterTypesPython.ios_swigregister
ios_swigregister(ios)

class streambuf(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_streambuf
    __del__ = lambda self : None;
    def pubimbue(self, *args): return _cisstParameterTypesPython.streambuf_pubimbue(self, *args)
    def getloc(self): return _cisstParameterTypesPython.streambuf_getloc(self)
    def pubsetbuf(self, *args): return _cisstParameterTypesPython.streambuf_pubsetbuf(self, *args)
    def pubseekoff(self, *args): return _cisstParameterTypesPython.streambuf_pubseekoff(self, *args)
    def pubseekpos(self, *args): return _cisstParameterTypesPython.streambuf_pubseekpos(self, *args)
    def pubsync(self): return _cisstParameterTypesPython.streambuf_pubsync(self)
    def in_avail(self): return _cisstParameterTypesPython.streambuf_in_avail(self)
    def snextc(self): return _cisstParameterTypesPython.streambuf_snextc(self)
    def sbumpc(self): return _cisstParameterTypesPython.streambuf_sbumpc(self)
    def sgetc(self): return _cisstParameterTypesPython.streambuf_sgetc(self)
    def sgetn(self, *args): return _cisstParameterTypesPython.streambuf_sgetn(self, *args)
    def sputbackc(self, *args): return _cisstParameterTypesPython.streambuf_sputbackc(self, *args)
    def sungetc(self): return _cisstParameterTypesPython.streambuf_sungetc(self)
    def sputc(self, *args): return _cisstParameterTypesPython.streambuf_sputc(self, *args)
    def sputn(self, *args): return _cisstParameterTypesPython.streambuf_sputn(self, *args)
streambuf_swigregister = _cisstParameterTypesPython.streambuf_swigregister
streambuf_swigregister(streambuf)

class ostream(ios):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _cisstParameterTypesPython.new_ostream(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_ostream
    __del__ = lambda self : None;
    def __lshift__(self, *args): return _cisstParameterTypesPython.ostream___lshift__(self, *args)
    def put(self, *args): return _cisstParameterTypesPython.ostream_put(self, *args)
    def write(self, *args): return _cisstParameterTypesPython.ostream_write(self, *args)
    def flush(self): return _cisstParameterTypesPython.ostream_flush(self)
    def tellp(self): return _cisstParameterTypesPython.ostream_tellp(self)
    def seekp(self, *args): return _cisstParameterTypesPython.ostream_seekp(self, *args)
ostream_swigregister = _cisstParameterTypesPython.ostream_swigregister
ostream_swigregister(ostream)
cin = cvar.cin
cout = cvar.cout
cerr = cvar.cerr
clog = cvar.clog

class istream(ios):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _cisstParameterTypesPython.new_istream(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_istream
    __del__ = lambda self : None;
    def __rshift__(self, *args): return _cisstParameterTypesPython.istream___rshift__(self, *args)
    def gcount(self): return _cisstParameterTypesPython.istream_gcount(self)
    def get(self, *args): return _cisstParameterTypesPython.istream_get(self, *args)
    def getline(self, *args): return _cisstParameterTypesPython.istream_getline(self, *args)
    def ignore(self, *args): return _cisstParameterTypesPython.istream_ignore(self, *args)
    def peek(self): return _cisstParameterTypesPython.istream_peek(self)
    def read(self, *args): return _cisstParameterTypesPython.istream_read(self, *args)
    def readsome(self, *args): return _cisstParameterTypesPython.istream_readsome(self, *args)
    def putback(self, *args): return _cisstParameterTypesPython.istream_putback(self, *args)
    def unget(self): return _cisstParameterTypesPython.istream_unget(self)
    def sync(self): return _cisstParameterTypesPython.istream_sync(self)
    def tellg(self): return _cisstParameterTypesPython.istream_tellg(self)
    def seekg(self, *args): return _cisstParameterTypesPython.istream_seekg(self, *args)
istream_swigregister = _cisstParameterTypesPython.istream_swigregister
istream_swigregister(istream)

class iostream(istream,ostream):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _cisstParameterTypesPython.new_iostream(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_iostream
    __del__ = lambda self : None;
iostream_swigregister = _cisstParameterTypesPython.iostream_swigregister
iostream_swigregister(iostream)

endl_cb_ptr = _cisstParameterTypesPython.endl_cb_ptr

def endl(*args):
  return _cisstParameterTypesPython.endl(*args)
endl = _cisstParameterTypesPython.endl
ends_cb_ptr = _cisstParameterTypesPython.ends_cb_ptr

def ends(*args):
  return _cisstParameterTypesPython.ends(*args)
ends = _cisstParameterTypesPython.ends
flush_cb_ptr = _cisstParameterTypesPython.flush_cb_ptr

def flush(*args):
  return _cisstParameterTypesPython.flush(*args)
flush = _cisstParameterTypesPython.flush
import cisstCommonPython
import cisstVectorPython
import cisstMultiTaskPython
import cisstOSAbstractionPython
class prmMotionBase(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmMotionBase class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmMotionBase
    __del__ = lambda self : None;
    def SetBaseParameter(self, *args):
        """
        SetBaseParameter(prmMotionBase self, prmBlocking const & blockingFlag, bool const & blendingFactor, double const & timeLimit, 
            bool const & isPreemptable, bool const & isCoordinated, bool const & isGoalOnly)
        """
        return _cisstParameterTypesPython.prmMotionBase_SetBaseParameter(self, *args)

    def SetBlockingFlag(self, *args):
        """SetBlockingFlag(prmMotionBase self, prmBlocking const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetBlockingFlag(self, *args)

    def BlockingFlag(self, *args):
        """
        BlockingFlag(prmMotionBase self) -> prmBlocking const
        BlockingFlag(prmMotionBase self) -> prmBlocking &
        """
        return _cisstParameterTypesPython.prmMotionBase_BlockingFlag(self, *args)

    def GetBlockingFlag(self, *args):
        """
        GetBlockingFlag(prmMotionBase self, prmBlocking & placeHolder)
        GetBlockingFlag(prmMotionBase self) -> prmBlocking const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetBlockingFlag(self, *args)

    def SetBlendingFactor(self, *args):
        """SetBlendingFactor(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetBlendingFactor(self, *args)

    def BlendingFactor(self, *args):
        """
        BlendingFactor(prmMotionBase self) -> bool const
        BlendingFactor(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_BlendingFactor(self, *args)

    def GetBlendingFactor(self, *args):
        """
        GetBlendingFactor(prmMotionBase self, bool & placeHolder)
        GetBlendingFactor(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetBlendingFactor(self, *args)

    def SetTimeLimit(self, *args):
        """SetTimeLimit(prmMotionBase self, double const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetTimeLimit(self, *args)

    def TimeLimit(self, *args):
        """
        TimeLimit(prmMotionBase self) -> double const
        TimeLimit(prmMotionBase self) -> double &
        """
        return _cisstParameterTypesPython.prmMotionBase_TimeLimit(self, *args)

    def GetTimeLimit(self, *args):
        """
        GetTimeLimit(prmMotionBase self, double & placeHolder)
        GetTimeLimit(prmMotionBase self) -> double const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetTimeLimit(self, *args)

    def SetIsPreemptable(self, *args):
        """SetIsPreemptable(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetIsPreemptable(self, *args)

    def IsPreemptable(self, *args):
        """
        IsPreemptable(prmMotionBase self) -> bool const
        IsPreemptable(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_IsPreemptable(self, *args)

    def GetIsPreemptable(self, *args):
        """
        GetIsPreemptable(prmMotionBase self, bool & placeHolder)
        GetIsPreemptable(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetIsPreemptable(self, *args)

    def SetIsCoordinated(self, *args):
        """SetIsCoordinated(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetIsCoordinated(self, *args)

    def IsCoordinated(self, *args):
        """
        IsCoordinated(prmMotionBase self) -> bool const
        IsCoordinated(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_IsCoordinated(self, *args)

    def GetIsCoordinated(self, *args):
        """
        GetIsCoordinated(prmMotionBase self, bool & placeHolder)
        GetIsCoordinated(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetIsCoordinated(self, *args)

    def SetIsGoalOnly(self, *args):
        """SetIsGoalOnly(prmMotionBase self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmMotionBase_SetIsGoalOnly(self, *args)

    def IsGoalOnly(self, *args):
        """
        IsGoalOnly(prmMotionBase self) -> bool const
        IsGoalOnly(prmMotionBase self) -> bool &
        """
        return _cisstParameterTypesPython.prmMotionBase_IsGoalOnly(self, *args)

    def GetIsGoalOnly(self, *args):
        """
        GetIsGoalOnly(prmMotionBase self, bool & placeHolder)
        GetIsGoalOnly(prmMotionBase self) -> bool const &
        """
        return _cisstParameterTypesPython.prmMotionBase_GetIsGoalOnly(self, *args)

prmMotionBase_swigregister = _cisstParameterTypesPython.prmMotionBase_swigregister
prmMotionBase_swigregister(prmMotionBase)

class prmEventButton(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmEventButton class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmEventButton_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmEventButton_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmEventButton_ClassServices()

    ClassServices = staticmethod(ClassServices)
    PRESSED = _cisstParameterTypesPython.prmEventButton_PRESSED
    RELEASED = _cisstParameterTypesPython.prmEventButton_RELEASED
    CLICKED = _cisstParameterTypesPython.prmEventButton_CLICKED
    DOUBLE_CLICKED = _cisstParameterTypesPython.prmEventButton_DOUBLE_CLICKED
    def __init__(self, *args): 
        """
        __init__(prmEventButton self) -> prmEventButton
        __init__(prmEventButton self, prmEventButton::EventType const & type) -> prmEventButton
        __init__(prmEventButton self, prmEventButton other) -> prmEventButton
        """
        this = _cisstParameterTypesPython.new_prmEventButton(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmEventButton
    __del__ = lambda self : None;
    def SetType(self, *args):
        """SetType(prmEventButton self, prmEventButton::EventType const & newValue)"""
        return _cisstParameterTypesPython.prmEventButton_SetType(self, *args)

    def Type(self, *args):
        """
        Type(prmEventButton self) -> prmEventButton::EventType const
        Type(prmEventButton self) -> prmEventButton::EventType &
        """
        return _cisstParameterTypesPython.prmEventButton_Type(self, *args)

    def GetType(self, *args):
        """
        GetType(prmEventButton self, prmEventButton::EventType & placeHolder)
        GetType(prmEventButton self) -> prmEventButton::EventType const &
        """
        return _cisstParameterTypesPython.prmEventButton_GetType(self, *args)

prmEventButton_swigregister = _cisstParameterTypesPython.prmEventButton_swigregister
prmEventButton_swigregister(prmEventButton)

def prmEventButton_ClassServices():
  """prmEventButton_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmEventButton_ClassServices()

class prmPositionCartesianGet(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmPositionCartesianGet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """
        __init__(prmPositionCartesianGet self) -> prmPositionCartesianGet
        __init__(prmPositionCartesianGet self, prmPositionCartesianGet other) -> prmPositionCartesianGet
        """
        this = _cisstParameterTypesPython.new_prmPositionCartesianGet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionCartesianGet
    __del__ = lambda self : None;
    def GetMovingFrame(self, *args):
        """GetMovingFrame(prmPositionCartesianGet self, prmTransformationBasePtr & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_GetMovingFrame(self, *args)

    def SetMovingFrame(self, *args):
        """SetMovingFrame(prmPositionCartesianGet self, prmTransformationBase newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SetMovingFrame(self, *args)

    def MovingFrame(self, *args):
        """
        MovingFrame(prmPositionCartesianGet self) -> prmTransformationBase
        MovingFrame(prmPositionCartesianGet self) -> prmTransformationBasePtr &
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_MovingFrame(self, *args)

    def GetReferenceFrame(self, *args):
        """GetReferenceFrame(prmPositionCartesianGet self, prmTransformationBasePtr & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_GetReferenceFrame(self, *args)

    def SetReferenceFrame(self, *args):
        """SetReferenceFrame(prmPositionCartesianGet self, prmTransformationBase newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SetReferenceFrame(self, *args)

    def ReferenceFrame(self, *args):
        """
        ReferenceFrame(prmPositionCartesianGet self) -> prmTransformationBase
        ReferenceFrame(prmPositionCartesianGet self) -> prmTransformationBasePtr &
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_ReferenceFrame(self, *args)

    def GetPosition(self, *args):
        """GetPosition(prmPositionCartesianGet self, vctFrm3 placeHolder)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_GetPosition(self, *args)

    def SetPosition(self, *args):
        """SetPosition(prmPositionCartesianGet self, vctFrm3 newValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SetPosition(self, *args)

    def Position(self, *args):
        """
        Position(prmPositionCartesianGet self) -> vctFrm3
        Position(prmPositionCartesianGet self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_Position(self, *args)

    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionCartesianGet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmPositionCartesianGet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def Copy(self, *args):
        """Copy(prmPositionCartesianGet self, prmPositionCartesianGet source)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_Copy(self, *args)

    def SerializeBinary(self, *args):
        """SerializeBinary(prmPositionCartesianGet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeBinary(self, *args)

    def DeSerializeBinary(self, *args):
        """DeSerializeBinary(prmPositionCartesianGet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_DeSerializeBinary(self, *args)

    def SerializeText(self, *args):
        """
        SerializeText(prmPositionCartesianGet self, ostream outputStream, char const delimiter=',')
        SerializeText(prmPositionCartesianGet self, ostream outputStream)
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeText(self, *args)

    def SerializeDescription(self, delimiter=',', userDescription=""):
        """
        SerializeDescription(prmPositionCartesianGet self, char const delimiter=',', std::string const & userDescription="") -> std::string
        SerializeDescription(prmPositionCartesianGet self, char const delimiter=',') -> std::string
        SerializeDescription(prmPositionCartesianGet self) -> std::string
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeDescription(self, delimiter, userDescription)

    def DeSerializeText(self, *args):
        """
        DeSerializeText(prmPositionCartesianGet self, istream inputStream, char const delimiter=',')
        DeSerializeText(prmPositionCartesianGet self, istream inputStream)
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_DeSerializeText(self, *args)

    def __str__(self):
        """__str__(prmPositionCartesianGet self) -> std::string"""
        return _cisstParameterTypesPython.prmPositionCartesianGet___str__(self)

    def ScalarDescription(self, *args):
        """
        ScalarDescription(prmPositionCartesianGet self, size_t const index, std::string const & userDescription="") -> std::string
        ScalarDescription(prmPositionCartesianGet self, size_t const index) -> std::string
        """
        return _cisstParameterTypesPython.prmPositionCartesianGet_ScalarDescription(self, *args)

    def SerializeTextJSON(self, *args):
        """SerializeTextJSON(prmPositionCartesianGet self, Json::Value & jsonValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_SerializeTextJSON(self, *args)

    def DeSerializeTextJSON(self, *args):
        """DeSerializeTextJSON(prmPositionCartesianGet self, Json::Value const & jsonValue)"""
        return _cisstParameterTypesPython.prmPositionCartesianGet_DeSerializeTextJSON(self, *args)

prmPositionCartesianGet_swigregister = _cisstParameterTypesPython.prmPositionCartesianGet_swigregister
prmPositionCartesianGet_swigregister(prmPositionCartesianGet)

def prmPositionCartesianGet_ClassServices():
  """prmPositionCartesianGet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmPositionCartesianGet_ClassServices()

class prmPositionCartesianSet(prmMotionBase):
    """Proxy of C++ prmPositionCartesianSet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionCartesianSet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmPositionCartesianSet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmPositionCartesianSet self) -> prmPositionCartesianSet
        __init__(prmPositionCartesianSet self, vctFrm3 goal, vctDouble3 const & velocity, vctDouble3 const & velocityAngular, vctDouble3 const & acceleration, 
            vctDouble3 const & accelerationAngular, vctBool2 const & mask) -> prmPositionCartesianSet
        """
        this = _cisstParameterTypesPython.new_prmPositionCartesianSet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionCartesianSet
    __del__ = lambda self : None;
    def Goal(self, *args):
        """
        Goal(prmPositionCartesianSet self) -> vctFrm3
        Goal(prmPositionCartesianSet self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_Goal(self, *args)

    def SetGoal(self, *args):
        """
        SetGoal(prmPositionCartesianSet self, vctFrm3 goal, vctBool2 const & mask)
        SetGoal(prmPositionCartesianSet self, vctFrm3 goal)
        SetGoal(prmPositionCartesianSet self, vctDouble3 const & position)
        SetGoal(prmPositionCartesianSet self, vctDoubleRot3 const & orientation)
        """
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetGoal(self, *args)

    def GetGoal(self):
        """GetGoal(prmPositionCartesianSet self) -> vctFrm3"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetGoal(self)

    def SetVelocity(self, *args):
        """SetVelocity(prmPositionCartesianSet self, vctDouble3 const & velocity)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetVelocity(self, *args)

    def GetVelocity(self):
        """GetVelocity(prmPositionCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetVelocity(self)

    def SetAngularVelocity(self, *args):
        """SetAngularVelocity(prmPositionCartesianSet self, vctDouble3 const & velocityAngular)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetAngularVelocity(self, *args)

    def GetAngularVelocity(self):
        """GetAngularVelocity(prmPositionCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetAngularVelocity(self)

    def SetAcceleration(self, *args):
        """SetAcceleration(prmPositionCartesianSet self, vctDouble3 const & acceleration)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetAcceleration(self, *args)

    def GetAcceleration(self):
        """GetAcceleration(prmPositionCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetAcceleration(self)

    def SetAngularAcceleration(self, *args):
        """SetAngularAcceleration(prmPositionCartesianSet self, vctDouble3 const & accelerationAngular)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetAngularAcceleration(self, *args)

    def GetAngularAcceleration(self):
        """GetAngularAcceleration(prmPositionCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetAngularAcceleration(self)

    def SetMask(self, *args):
        """SetMask(prmPositionCartesianSet self, vctBool2 const & mask)"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_SetMask(self, *args)

    def GetMask(self):
        """GetMask(prmPositionCartesianSet self) -> vctBool2"""
        return _cisstParameterTypesPython.prmPositionCartesianSet_GetMask(self)

prmPositionCartesianSet_swigregister = _cisstParameterTypesPython.prmPositionCartesianSet_swigregister
prmPositionCartesianSet_swigregister(prmPositionCartesianSet)

def prmPositionCartesianSet_ClassServices():
  """prmPositionCartesianSet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmPositionCartesianSet_ClassServices()

class prmVelocityCartesianGet(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmVelocityCartesianGet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityCartesianGet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmVelocityCartesianGet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmVelocityCartesianGet self) -> prmVelocityCartesianGet
        __init__(prmVelocityCartesianGet self, vctDouble3 const & velocityLinear, vctDouble3 const & velocityAngular) -> prmVelocityCartesianGet
        """
        this = _cisstParameterTypesPython.new_prmVelocityCartesianGet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityCartesianGet
    __del__ = lambda self : None;
    def SetVelocityLinear(self, *args):
        """SetVelocityLinear(prmVelocityCartesianGet self, vctDouble3 const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetVelocityLinear(self, *args)

    def VelocityLinear(self, *args):
        """
        VelocityLinear(prmVelocityCartesianGet self) -> vctDouble3 const
        VelocityLinear(prmVelocityCartesianGet self) -> vctDouble3 &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_VelocityLinear(self, *args)

    def GetVelocityLinear(self, *args):
        """
        GetVelocityLinear(prmVelocityCartesianGet self, vctDouble3 & placeHolder)
        GetVelocityLinear(prmVelocityCartesianGet self) -> vctDouble3 const &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetVelocityLinear(self, *args)

    def SetVelocityAngular(self, *args):
        """SetVelocityAngular(prmVelocityCartesianGet self, vctDouble3 const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetVelocityAngular(self, *args)

    def VelocityAngular(self, *args):
        """
        VelocityAngular(prmVelocityCartesianGet self) -> vctDouble3 const
        VelocityAngular(prmVelocityCartesianGet self) -> vctDouble3 &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_VelocityAngular(self, *args)

    def GetVelocityAngular(self, *args):
        """
        GetVelocityAngular(prmVelocityCartesianGet self, vctDouble3 & placeHolder)
        GetVelocityAngular(prmVelocityCartesianGet self) -> vctDouble3 const &
        """
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetVelocityAngular(self, *args)

    def SetVelocity(self, *args):
        """SetVelocity(prmVelocityCartesianGet self, vct6 const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_SetVelocity(self, *args)

    def GetVelocity(self, *args):
        """GetVelocity(prmVelocityCartesianGet self, vct6 & placeHolder)"""
        return _cisstParameterTypesPython.prmVelocityCartesianGet_GetVelocity(self, *args)

prmVelocityCartesianGet_swigregister = _cisstParameterTypesPython.prmVelocityCartesianGet_swigregister
prmVelocityCartesianGet_swigregister(prmVelocityCartesianGet)

def prmVelocityCartesianGet_ClassServices():
  """prmVelocityCartesianGet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmVelocityCartesianGet_ClassServices()

class prmVelocityCartesianSet(prmMotionBase):
    """Proxy of C++ prmVelocityCartesianSet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityCartesianSet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmVelocityCartesianSet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmVelocityCartesianSet self) -> prmVelocityCartesianSet
        __init__(prmVelocityCartesianSet self, vctDouble3 const & velocity, vctDouble3 const & velocityAngular, vctDouble3 const & acceleration, 
            vctDouble3 const & accelerationAngular, vctBool6 const & mask) -> prmVelocityCartesianSet
        """
        this = _cisstParameterTypesPython.new_prmVelocityCartesianSet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityCartesianSet
    __del__ = lambda self : None;
    def SetGoal(self, *args):
        """SetGoal(prmVelocityCartesianSet self, vctDouble6 const & velocities)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetGoal(self, *args)

    def SetTranslationGoal(self, *args):
        """SetTranslationGoal(prmVelocityCartesianSet self, vctDouble3 const & velocity)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetTranslationGoal(self, *args)

    def SetRotationGoal(self, *args):
        """SetRotationGoal(prmVelocityCartesianSet self, vctDouble3 const & velocityAngular)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetRotationGoal(self, *args)

    def GetGoal(self):
        """GetGoal(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetGoal(self)

    def SetVelocity(self, *args):
        """SetVelocity(prmVelocityCartesianSet self, vctDouble3 const & velocity)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetVelocity(self, *args)

    def GetVelocity(self):
        """GetVelocity(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetVelocity(self)

    def SetAngularVelocity(self, *args):
        """SetAngularVelocity(prmVelocityCartesianSet self, vctDouble3 const & velocityAngular)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetAngularVelocity(self, *args)

    def GetAngularVelocity(self):
        """GetAngularVelocity(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetAngularVelocity(self)

    def SetAcceleration(self, *args):
        """SetAcceleration(prmVelocityCartesianSet self, vctDouble3 const & acceleration)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetAcceleration(self, *args)

    def GetAcceleration(self):
        """GetAcceleration(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetAcceleration(self)

    def SetAngularAcceleration(self, *args):
        """SetAngularAcceleration(prmVelocityCartesianSet self, vctDouble3 const & accelerationAngular)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetAngularAcceleration(self, *args)

    def GetAngularAcceleration(self):
        """GetAngularAcceleration(prmVelocityCartesianSet self) -> vctDouble3"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetAngularAcceleration(self)

    def SetMask(self, *args):
        """SetMask(prmVelocityCartesianSet self, vctBool6 const & mask)"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_SetMask(self, *args)

    def GetMask(self):
        """GetMask(prmVelocityCartesianSet self) -> vctBool6"""
        return _cisstParameterTypesPython.prmVelocityCartesianSet_GetMask(self)

prmVelocityCartesianSet_swigregister = _cisstParameterTypesPython.prmVelocityCartesianSet_swigregister
prmVelocityCartesianSet_swigregister(prmVelocityCartesianSet)

def prmVelocityCartesianSet_ClassServices():
  """prmVelocityCartesianSet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmVelocityCartesianSet_ClassServices()

class prmForceCartesianGet(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmForceCartesianGet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmForceCartesianGet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmForceCartesianGet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmForceCartesianGet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmForceCartesianGet self) -> prmForceCartesianGet
        __init__(prmForceCartesianGet self, vctDouble6 const & force) -> prmForceCartesianGet
        """
        this = _cisstParameterTypesPython.new_prmForceCartesianGet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmForceCartesianGet
    __del__ = lambda self : None;
    def SetForce(self, *args):
        """SetForce(prmForceCartesianGet self, vctDouble6 const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianGet_SetForce(self, *args)

    def Force(self, *args):
        """
        Force(prmForceCartesianGet self) -> vctDouble6 const
        Force(prmForceCartesianGet self) -> vctDouble6 &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_Force(self, *args)

    def GetForce(self, *args):
        """
        GetForce(prmForceCartesianGet self, vctDouble6 & placeHolder)
        GetForce(prmForceCartesianGet self) -> vctDouble6 const &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_GetForce(self, *args)

    def SetMask(self, *args):
        """SetMask(prmForceCartesianGet self, vctBool6 const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianGet_SetMask(self, *args)

    def Mask(self, *args):
        """
        Mask(prmForceCartesianGet self) -> vctBool6 const
        Mask(prmForceCartesianGet self) -> vctBool6 &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_Mask(self, *args)

    def GetMask(self, *args):
        """
        GetMask(prmForceCartesianGet self, vctBool6 & placeHolder)
        GetMask(prmForceCartesianGet self) -> vctBool6 const &
        """
        return _cisstParameterTypesPython.prmForceCartesianGet_GetMask(self, *args)

prmForceCartesianGet_swigregister = _cisstParameterTypesPython.prmForceCartesianGet_swigregister
prmForceCartesianGet_swigregister(prmForceCartesianGet)

def prmForceCartesianGet_ClassServices():
  """prmForceCartesianGet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmForceCartesianGet_ClassServices()

class prmForceCartesianSet(prmMotionBase):
    """Proxy of C++ prmForceCartesianSet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmForceCartesianSet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmForceCartesianSet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmForceCartesianSet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def SetForce(self, *args):
        """SetForce(prmForceCartesianSet self, prmForceCartesianSet::ForceType const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianSet_SetForce(self, *args)

    def Force(self, *args):
        """
        Force(prmForceCartesianSet self) -> prmForceCartesianSet::ForceType const
        Force(prmForceCartesianSet self) -> prmForceCartesianSet::ForceType &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_Force(self, *args)

    def GetForce(self, *args):
        """
        GetForce(prmForceCartesianSet self, prmForceCartesianSet::ForceType & placeHolder)
        GetForce(prmForceCartesianSet self) -> prmForceCartesianSet::ForceType const &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_GetForce(self, *args)

    def SetMask(self, *args):
        """SetMask(prmForceCartesianSet self, prmForceCartesianSet::MaskType const & newValue)"""
        return _cisstParameterTypesPython.prmForceCartesianSet_SetMask(self, *args)

    def Mask(self, *args):
        """
        Mask(prmForceCartesianSet self) -> prmForceCartesianSet::MaskType const
        Mask(prmForceCartesianSet self) -> prmForceCartesianSet::MaskType &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_Mask(self, *args)

    def GetMask(self, *args):
        """
        GetMask(prmForceCartesianSet self, prmForceCartesianSet::MaskType & placeHolder)
        GetMask(prmForceCartesianSet self) -> prmForceCartesianSet::MaskType const &
        """
        return _cisstParameterTypesPython.prmForceCartesianSet_GetMask(self, *args)

    def __init__(self, *args): 
        """
        __init__(prmForceCartesianSet self) -> prmForceCartesianSet
        __init__(prmForceCartesianSet self, prmForceCartesianSet::ForceType const & force, prmForceCartesianSet::MaskType const & mask) -> prmForceCartesianSet
        """
        this = _cisstParameterTypesPython.new_prmForceCartesianSet(*args)
        try: self.this.append(this)
        except: self.this = this
    def SetAll(self, *args):
        """SetAll(prmForceCartesianSet self, double forceSet, bool mask)"""
        return _cisstParameterTypesPython.prmForceCartesianSet_SetAll(self, *args)

    __swig_destroy__ = _cisstParameterTypesPython.delete_prmForceCartesianSet
    __del__ = lambda self : None;
prmForceCartesianSet_swigregister = _cisstParameterTypesPython.prmForceCartesianSet_swigregister
prmForceCartesianSet_swigregister(prmForceCartesianSet)

def prmForceCartesianSet_ClassServices():
  """prmForceCartesianSet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmForceCartesianSet_ClassServices()

class prmPositionJointGet(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmPositionJointGet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionJointGet
    __del__ = lambda self : None;
    def GetPosition(self, *args):
        """GetPosition(prmPositionJointGet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointGet_GetPosition(self, *args)

    def SetPosition(self, *args):
        """SetPosition(prmPositionJointGet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SetPosition(self, *args)

    def Position(self, *args):
        """
        Position(prmPositionJointGet self) -> vctDynamicVector< double > const
        Position(prmPositionJointGet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointGet_Position(self, *args)

    def GetTimestamps(self, *args):
        """GetTimestamps(prmPositionJointGet self, vctDynamicVector< double > & placeHolder)"""
        return _cisstParameterTypesPython.prmPositionJointGet_GetTimestamps(self, *args)

    def SetTimestamps(self, *args):
        """SetTimestamps(prmPositionJointGet self, vctDynamicVector< double > const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SetTimestamps(self, *args)

    def Timestamps(self, *args):
        """
        Timestamps(prmPositionJointGet self) -> vctDynamicVector< double > const
        Timestamps(prmPositionJointGet self) -> vctDynamicVector< double > &
        """
        return _cisstParameterTypesPython.prmPositionJointGet_Timestamps(self, *args)

    def __init__(self, *args): 
        """
        __init__(prmPositionJointGet self) -> prmPositionJointGet
        __init__(prmPositionJointGet self, prmPositionJointGet other) -> prmPositionJointGet
        __init__(prmPositionJointGet self, size_t size) -> prmPositionJointGet
        """
        this = _cisstParameterTypesPython.new_prmPositionJointGet(*args)
        try: self.this.append(this)
        except: self.this = this
    def SetSize(self, *args):
        """SetSize(prmPositionJointGet self, size_t size)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SetSize(self, *args)

    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionJointGet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmPositionJointGet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionJointGet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def Copy(self, *args):
        """Copy(prmPositionJointGet self, prmPositionJointGet source)"""
        return _cisstParameterTypesPython.prmPositionJointGet_Copy(self, *args)

    def SerializeBinary(self, *args):
        """SerializeBinary(prmPositionJointGet self, ostream outputStream)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeBinary(self, *args)

    def DeSerializeBinary(self, *args):
        """DeSerializeBinary(prmPositionJointGet self, istream inputStream, cmnDataFormat const & localFormat, cmnDataFormat const & remoteFormat)"""
        return _cisstParameterTypesPython.prmPositionJointGet_DeSerializeBinary(self, *args)

    def SerializeText(self, *args):
        """
        SerializeText(prmPositionJointGet self, ostream outputStream, char const delimiter=',')
        SerializeText(prmPositionJointGet self, ostream outputStream)
        """
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeText(self, *args)

    def SerializeDescription(self, delimiter=',', userDescription=""):
        """
        SerializeDescription(prmPositionJointGet self, char const delimiter=',', std::string const & userDescription="") -> std::string
        SerializeDescription(prmPositionJointGet self, char const delimiter=',') -> std::string
        SerializeDescription(prmPositionJointGet self) -> std::string
        """
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeDescription(self, delimiter, userDescription)

    def DeSerializeText(self, *args):
        """
        DeSerializeText(prmPositionJointGet self, istream inputStream, char const delimiter=',')
        DeSerializeText(prmPositionJointGet self, istream inputStream)
        """
        return _cisstParameterTypesPython.prmPositionJointGet_DeSerializeText(self, *args)

    def __str__(self):
        """__str__(prmPositionJointGet self) -> std::string"""
        return _cisstParameterTypesPython.prmPositionJointGet___str__(self)

    def ScalarDescription(self, *args):
        """
        ScalarDescription(prmPositionJointGet self, size_t const index, std::string const & userDescription="") -> std::string
        ScalarDescription(prmPositionJointGet self, size_t const index) -> std::string
        """
        return _cisstParameterTypesPython.prmPositionJointGet_ScalarDescription(self, *args)

    def SerializeTextJSON(self, *args):
        """SerializeTextJSON(prmPositionJointGet self, Json::Value & jsonValue)"""
        return _cisstParameterTypesPython.prmPositionJointGet_SerializeTextJSON(self, *args)

    def DeSerializeTextJSON(self, *args):
        """DeSerializeTextJSON(prmPositionJointGet self, Json::Value const & jsonValue)"""
        return _cisstParameterTypesPython.prmPositionJointGet_DeSerializeTextJSON(self, *args)

prmPositionJointGet_swigregister = _cisstParameterTypesPython.prmPositionJointGet_swigregister
prmPositionJointGet_swigregister(prmPositionJointGet)

def prmPositionJointGet_ClassServices():
  """prmPositionJointGet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmPositionJointGet_ClassServices()


def cmnSerializeRaw(*args):
  """
    cmnSerializeRaw(ostream outputStream, mtsExecutionResult object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionComponent object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionComponentClass object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionInterface object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionIntefaceFullName object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionConnection object)
    cmnSerializeRaw(ostream outputStream, mtsComponentStatusControl object)
    cmnSerializeRaw(ostream outputStream, mtsComponentStateChange object)
    cmnSerializeRaw(ostream outputStream, mtsDescriptionLoadLibrary object)
    cmnSerializeRaw(ostream outputStream, mtsEndUserInterfaceArg object)
    cmnSerializeRaw(ostream outputStream, mtsComponentState object)
    cmnSerializeRaw(ostream outputStream, mtsCommandVoidDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandWriteDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandReadDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandQualifiedReadDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandVoidReturnDescription object)
    cmnSerializeRaw(ostream outputStream, mtsCommandWriteReturnDescription object)
    cmnSerializeRaw(ostream outputStream, mtsEventVoidDescription object)
    cmnSerializeRaw(ostream outputStream, mtsEventWriteDescription object)
    cmnSerializeRaw(ostream outputStream, mtsInterfaceProvidedDescription object)
    cmnSerializeRaw(ostream outputStream, mtsInterfaceRequiredDescription object)
    cmnSerializeRaw(ostream outputStream, prmPositionCartesianGet object)
    cmnSerializeRaw(ostream outputStream, prmPositionJointGet object)
    """
  return _cisstParameterTypesPython.cmnSerializeRaw(*args)

def cmnDeSerializeRaw(*args):
  """
    cmnDeSerializeRaw(istream inputStream, mtsExecutionResult placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionComponent placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionComponentClass placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionInterface placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionIntefaceFullName placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionConnection placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentStatusControl placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentStateChange placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsDescriptionLoadLibrary placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsEndUserInterfaceArg placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsComponentState placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandVoidDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandWriteDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandReadDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandQualifiedReadDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandVoidReturnDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsCommandWriteReturnDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsEventVoidDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsEventWriteDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsInterfaceProvidedDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, mtsInterfaceRequiredDescription placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmPositionCartesianGet placeHolder)
    cmnDeSerializeRaw(istream inputStream, prmPositionJointGet placeHolder)
    """
  return _cisstParameterTypesPython.cmnDeSerializeRaw(*args)
class prmPositionJointSet(prmMotionBase):
    """Proxy of C++ prmPositionJointSet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmPositionJointSet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmPositionJointSet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmPositionJointSet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def SetMask(self, *args):
        """SetMask(prmPositionJointSet self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetMask(self, *args)

    def Mask(self, *args):
        """
        Mask(prmPositionJointSet self) -> vctBoolVec const
        Mask(prmPositionJointSet self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Mask(self, *args)

    def GetMask(self, *args):
        """
        GetMask(prmPositionJointSet self, vctBoolVec & placeHolder)
        GetMask(prmPositionJointSet self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_GetMask(self, *args)

    def SetGoal(self, *args):
        """SetGoal(prmPositionJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetGoal(self, *args)

    def Goal(self, *args):
        """
        Goal(prmPositionJointSet self) -> vctDoubleVec const
        Goal(prmPositionJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Goal(self, *args)

    def GetGoal(self, *args):
        """
        GetGoal(prmPositionJointSet self, vctDoubleVec & placeHolder)
        GetGoal(prmPositionJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_GetGoal(self, *args)

    def SetVelocity(self, *args):
        """SetVelocity(prmPositionJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetVelocity(self, *args)

    def Velocity(self, *args):
        """
        Velocity(prmPositionJointSet self) -> vctDoubleVec const
        Velocity(prmPositionJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Velocity(self, *args)

    def GetVelocity(self, *args):
        """
        GetVelocity(prmPositionJointSet self, vctDoubleVec & placeHolder)
        GetVelocity(prmPositionJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_GetVelocity(self, *args)

    def SetAcceleration(self, *args):
        """SetAcceleration(prmPositionJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetAcceleration(self, *args)

    def Acceleration(self, *args):
        """
        Acceleration(prmPositionJointSet self) -> vctDoubleVec const
        Acceleration(prmPositionJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Acceleration(self, *args)

    def GetAcceleration(self, *args):
        """
        GetAcceleration(prmPositionJointSet self, vctDoubleVec & placeHolder)
        GetAcceleration(prmPositionJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_GetAcceleration(self, *args)

    def SetDeceleration(self, *args):
        """SetDeceleration(prmPositionJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetDeceleration(self, *args)

    def Deceleration(self, *args):
        """
        Deceleration(prmPositionJointSet self) -> vctDoubleVec const
        Deceleration(prmPositionJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_Deceleration(self, *args)

    def GetDeceleration(self, *args):
        """
        GetDeceleration(prmPositionJointSet self, vctDoubleVec & placeHolder)
        GetDeceleration(prmPositionJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmPositionJointSet_GetDeceleration(self, *args)

    def SetSize(self, *args):
        """SetSize(prmPositionJointSet self, prmPositionJointSet::size_type size)"""
        return _cisstParameterTypesPython.prmPositionJointSet_SetSize(self, *args)

    def __init__(self, *args): 
        """
        __init__(prmPositionJointSet self) -> prmPositionJointSet
        __init__(prmPositionJointSet self, prmPositionJointSet::size_type size) -> prmPositionJointSet
        __init__(prmPositionJointSet self, vctBoolVec const & mask, vctDoubleVec const & goal, vctDoubleVec const & velocity, 
            vctDoubleVec const & acceleration, vctDoubleVec const & deceleration) -> prmPositionJointSet
        """
        this = _cisstParameterTypesPython.new_prmPositionJointSet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmPositionJointSet
    __del__ = lambda self : None;
prmPositionJointSet_swigregister = _cisstParameterTypesPython.prmPositionJointSet_swigregister
prmPositionJointSet_swigregister(prmPositionJointSet)

def prmPositionJointSet_ClassServices():
  """prmPositionJointSet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmPositionJointSet_ClassServices()

class prmVelocityJointGet(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmVelocityJointGet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityJointGet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmVelocityJointGet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityJointGet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def SetSize(self, *args):
        """SetSize(prmVelocityJointGet self, prmVelocityJointGet::size_type size)"""
        return _cisstParameterTypesPython.prmVelocityJointGet_SetSize(self, *args)

    def __init__(self, *args): 
        """
        __init__(prmVelocityJointGet self) -> prmVelocityJointGet
        __init__(prmVelocityJointGet self, prmVelocityJointGet::size_type size) -> prmVelocityJointGet
        __init__(prmVelocityJointGet self, vctDoubleVec const & velocity) -> prmVelocityJointGet
        """
        this = _cisstParameterTypesPython.new_prmVelocityJointGet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityJointGet
    __del__ = lambda self : None;
    def SetVelocity(self, *args):
        """SetVelocity(prmVelocityJointGet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointGet_SetVelocity(self, *args)

    def Velocity(self, *args):
        """
        Velocity(prmVelocityJointGet self) -> vctDoubleVec const
        Velocity(prmVelocityJointGet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointGet_Velocity(self, *args)

    def GetVelocity(self, *args):
        """
        GetVelocity(prmVelocityJointGet self, vctDoubleVec & placeHolder)
        GetVelocity(prmVelocityJointGet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointGet_GetVelocity(self, *args)

prmVelocityJointGet_swigregister = _cisstParameterTypesPython.prmVelocityJointGet_swigregister
prmVelocityJointGet_swigregister(prmVelocityJointGet)

def prmVelocityJointGet_ClassServices():
  """prmVelocityJointGet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmVelocityJointGet_ClassServices()

class prmVelocityJointSet(prmMotionBase):
    """Proxy of C++ prmVelocityJointSet class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmVelocityJointSet_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmVelocityJointSet_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmVelocityJointSet_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def SetMask(self, *args):
        """SetMask(prmVelocityJointSet self, vctBoolVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetMask(self, *args)

    def Mask(self, *args):
        """
        Mask(prmVelocityJointSet self) -> vctBoolVec const
        Mask(prmVelocityJointSet self) -> vctBoolVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Mask(self, *args)

    def GetMask(self, *args):
        """
        GetMask(prmVelocityJointSet self, vctBoolVec & placeHolder)
        GetMask(prmVelocityJointSet self) -> vctBoolVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetMask(self, *args)

    def SetGuard(self, *args):
        """SetGuard(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetGuard(self, *args)

    def Guard(self, *args):
        """
        Guard(prmVelocityJointSet self) -> vctDoubleVec const
        Guard(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Guard(self, *args)

    def GetGuard(self, *args):
        """
        GetGuard(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetGuard(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetGuard(self, *args)

    def SetGoal(self, *args):
        """SetGoal(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetGoal(self, *args)

    def Goal(self, *args):
        """
        Goal(prmVelocityJointSet self) -> vctDoubleVec const
        Goal(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Goal(self, *args)

    def GetGoal(self, *args):
        """
        GetGoal(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetGoal(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetGoal(self, *args)

    def SetAcceleration(self, *args):
        """SetAcceleration(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetAcceleration(self, *args)

    def Acceleration(self, *args):
        """
        Acceleration(prmVelocityJointSet self) -> vctDoubleVec const
        Acceleration(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Acceleration(self, *args)

    def GetAcceleration(self, *args):
        """
        GetAcceleration(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetAcceleration(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetAcceleration(self, *args)

    def SetDeceleration(self, *args):
        """SetDeceleration(prmVelocityJointSet self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetDeceleration(self, *args)

    def Deceleration(self, *args):
        """
        Deceleration(prmVelocityJointSet self) -> vctDoubleVec const
        Deceleration(prmVelocityJointSet self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_Deceleration(self, *args)

    def GetDeceleration(self, *args):
        """
        GetDeceleration(prmVelocityJointSet self, vctDoubleVec & placeHolder)
        GetDeceleration(prmVelocityJointSet self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetDeceleration(self, *args)

    def SetIsPositionGuarded(self, *args):
        """SetIsPositionGuarded(prmVelocityJointSet self, bool const & newValue)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetIsPositionGuarded(self, *args)

    def IsPositionGuarded(self, *args):
        """
        IsPositionGuarded(prmVelocityJointSet self) -> bool const
        IsPositionGuarded(prmVelocityJointSet self) -> bool &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_IsPositionGuarded(self, *args)

    def GetIsPositionGuarded(self, *args):
        """
        GetIsPositionGuarded(prmVelocityJointSet self, bool & placeHolder)
        GetIsPositionGuarded(prmVelocityJointSet self) -> bool const &
        """
        return _cisstParameterTypesPython.prmVelocityJointSet_GetIsPositionGuarded(self, *args)

    def SetSize(self, *args):
        """SetSize(prmVelocityJointSet self, prmVelocityJointSet::size_type size)"""
        return _cisstParameterTypesPython.prmVelocityJointSet_SetSize(self, *args)

    def __init__(self, *args): 
        """
        __init__(prmVelocityJointSet self) -> prmVelocityJointSet
        __init__(prmVelocityJointSet self, prmVelocityJointSet::size_type size) -> prmVelocityJointSet
        __init__(prmVelocityJointSet self, vctBoolVec const & mask, vctDoubleVec const & guard, vctDoubleVec const & velocity, 
            vctDoubleVec const & acceleration, vctDoubleVec const & deceleration, bool const & isPositionGuarded) -> prmVelocityJointSet
        """
        this = _cisstParameterTypesPython.new_prmVelocityJointSet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmVelocityJointSet
    __del__ = lambda self : None;
prmVelocityJointSet_swigregister = _cisstParameterTypesPython.prmVelocityJointSet_swigregister
prmVelocityJointSet_swigregister(prmVelocityJointSet)

def prmVelocityJointSet_ClassServices():
  """prmVelocityJointSet_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmVelocityJointSet_ClassServices()

class prmTransformationBase(object):
    """Proxy of C++ prmTransformationBase class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmTransformationBase_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmTransformationBase_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmTransformationBase_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def Services(self):
        """Services(prmTransformationBase self) -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmTransformationBase_Services(self)

    __swig_destroy__ = _cisstParameterTypesPython.delete_prmTransformationBase
    __del__ = lambda self : None;
    def WorldFrame(self):
        """WorldFrame(prmTransformationBase self) -> prmTransformationBase"""
        return _cisstParameterTypesPython.prmTransformationBase_WorldFrame(self)

    def SetReferenceFrame(self, *args):
        """
        SetReferenceFrame(prmTransformationBase self, prmTransformationBase newReference) -> bool
        SetReferenceFrame(prmTransformationBase self, std::string const & parentName) -> bool
        """
        return _cisstParameterTypesPython.prmTransformationBase_SetReferenceFrame(self, *args)

    def GetReferenceFrame(self):
        """GetReferenceFrame(prmTransformationBase self) -> prmTransformationBase"""
        return _cisstParameterTypesPython.prmTransformationBase_GetReferenceFrame(self)

    def GetName(self):
        """GetName(prmTransformationBase self) -> std::string const &"""
        return _cisstParameterTypesPython.prmTransformationBase_GetName(self)

    def SetName(self, *args):
        """SetName(prmTransformationBase self, std::string const & name)"""
        return _cisstParameterTypesPython.prmTransformationBase_SetName(self, *args)

    def WRTReference(self):
        """WRTReference(prmTransformationBase self) -> vctFrm3"""
        return _cisstParameterTypesPython.prmTransformationBase_WRTReference(self)

prmTransformationBase_swigregister = _cisstParameterTypesPython.prmTransformationBase_swigregister
prmTransformationBase_swigregister(prmTransformationBase)

def prmTransformationBase_ClassServices():
  """prmTransformationBase_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmTransformationBase_ClassServices()

class prmTransformationManager(object):
    """Proxy of C++ prmTransformationManager class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmTransformationManager_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmTransformationManager_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmTransformationManager_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def Services(self):
        """Services(prmTransformationManager self) -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmTransformationManager_Services(self)

    TheWorld = _swig_property(_cisstParameterTypesPython.prmTransformationManager_TheWorld_get, _cisstParameterTypesPython.prmTransformationManager_TheWorld_set)
    def Clear():
        """Clear()"""
        return _cisstParameterTypesPython.prmTransformationManager_Clear()

    Clear = staticmethod(Clear)
    def NodeCreatesCycle(*args):
        """
        NodeCreatesCycle(prmTransformationBase attachPoint, prmTransformationBase newFrame) -> bool
        NodeCreatesCycle(std::string const & pName, prmTransformationBase newFrame) -> bool
        """
        return _cisstParameterTypesPython.prmTransformationManager_NodeCreatesCycle(*args)

    NodeCreatesCycle = staticmethod(NodeCreatesCycle)
    def WRTReference(*args):
        """WRTReference(prmTransformationBase tipFrame, prmTransformationBase refFrame) -> vctFrm3"""
        return _cisstParameterTypesPython.prmTransformationManager_WRTReference(*args)

    WRTReference = staticmethod(WRTReference)
    def ReplaceReference(*args):
        """
        ReplaceReference(prmTransformationBase nodePtr, prmTransformationBase newReference) -> unsigned int
        ReplaceReference(prmTransformationBase nodePtr, std::string const & parentName) -> unsigned int
        """
        return _cisstParameterTypesPython.prmTransformationManager_ReplaceReference(*args)

    ReplaceReference = staticmethod(ReplaceReference)
    def ToStreamDot(*args):
        """ToStreamDot(ostream outputStream)"""
        return _cisstParameterTypesPython.prmTransformationManager_ToStreamDot(*args)

    ToStreamDot = staticmethod(ToStreamDot)
    def ToStreamDotHelper(*args):
        """ToStreamDotHelper(ostream outputStream, prmTransformationBase parent)"""
        return _cisstParameterTypesPython.prmTransformationManager_ToStreamDotHelper(*args)

    ToStreamDotHelper = staticmethod(ToStreamDotHelper)
    def FindPath(*args):
        """FindPath(prmTransformationBase target, prmTransformationBase reference) -> bool"""
        return _cisstParameterTypesPython.prmTransformationManager_FindPath(*args)

    FindPath = staticmethod(FindPath)
    def FindPathConnectedTree(*args):
        """FindPathConnectedTree(prmTransformationBase target, prmTransformationBase reference) -> bool"""
        return _cisstParameterTypesPython.prmTransformationManager_FindPathConnectedTree(*args)

    FindPathConnectedTree = staticmethod(FindPathConnectedTree)
    def GetTransformationNodePtr(*args):
        """GetTransformationNodePtr(std::string const pName) -> prmTransformationBase"""
        return _cisstParameterTypesPython.prmTransformationManager_GetTransformationNodePtr(*args)

    GetTransformationNodePtr = staticmethod(GetTransformationNodePtr)
    def PathToStreamDot(*args):
        """PathToStreamDot(ostream outputStream)"""
        return _cisstParameterTypesPython.prmTransformationManager_PathToStreamDot(*args)

    PathToStreamDot = staticmethod(PathToStreamDot)
    def __init__(self): 
        """__init__(prmTransformationManager self) -> prmTransformationManager"""
        this = _cisstParameterTypesPython.new_prmTransformationManager()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmTransformationManager
    __del__ = lambda self : None;
prmTransformationManager_swigregister = _cisstParameterTypesPython.prmTransformationManager_swigregister
prmTransformationManager_swigregister(prmTransformationManager)

def prmTransformationManager_ClassServices():
  """prmTransformationManager_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmTransformationManager_ClassServices()

def prmTransformationManager_Clear():
  """prmTransformationManager_Clear()"""
  return _cisstParameterTypesPython.prmTransformationManager_Clear()

def prmTransformationManager_NodeCreatesCycle(*args):
  """
    NodeCreatesCycle(prmTransformationBase attachPoint, prmTransformationBase newFrame) -> bool
    prmTransformationManager_NodeCreatesCycle(std::string const & pName, prmTransformationBase newFrame) -> bool
    """
  return _cisstParameterTypesPython.prmTransformationManager_NodeCreatesCycle(*args)

def prmTransformationManager_WRTReference(*args):
  """prmTransformationManager_WRTReference(prmTransformationBase tipFrame, prmTransformationBase refFrame) -> vctFrm3"""
  return _cisstParameterTypesPython.prmTransformationManager_WRTReference(*args)

def prmTransformationManager_ReplaceReference(*args):
  """
    ReplaceReference(prmTransformationBase nodePtr, prmTransformationBase newReference) -> unsigned int
    prmTransformationManager_ReplaceReference(prmTransformationBase nodePtr, std::string const & parentName) -> unsigned int
    """
  return _cisstParameterTypesPython.prmTransformationManager_ReplaceReference(*args)

def prmTransformationManager_ToStreamDot(*args):
  """prmTransformationManager_ToStreamDot(ostream outputStream)"""
  return _cisstParameterTypesPython.prmTransformationManager_ToStreamDot(*args)

def prmTransformationManager_ToStreamDotHelper(*args):
  """prmTransformationManager_ToStreamDotHelper(ostream outputStream, prmTransformationBase parent)"""
  return _cisstParameterTypesPython.prmTransformationManager_ToStreamDotHelper(*args)

def prmTransformationManager_FindPath(*args):
  """prmTransformationManager_FindPath(prmTransformationBase target, prmTransformationBase reference) -> bool"""
  return _cisstParameterTypesPython.prmTransformationManager_FindPath(*args)

def prmTransformationManager_FindPathConnectedTree(*args):
  """prmTransformationManager_FindPathConnectedTree(prmTransformationBase target, prmTransformationBase reference) -> bool"""
  return _cisstParameterTypesPython.prmTransformationManager_FindPathConnectedTree(*args)

def prmTransformationManager_GetTransformationNodePtr(*args):
  """prmTransformationManager_GetTransformationNodePtr(std::string const pName) -> prmTransformationBase"""
  return _cisstParameterTypesPython.prmTransformationManager_GetTransformationNodePtr(*args)

def prmTransformationManager_PathToStreamDot(*args):
  """prmTransformationManager_PathToStreamDot(ostream outputStream)"""
  return _cisstParameterTypesPython.prmTransformationManager_PathToStreamDot(*args)


def prmWRTWorld(*args):
  """prmWRTWorld(prmTransformationBase frame) -> vctFrm3"""
  return _cisstParameterTypesPython.prmWRTWorld(*args)

def prmWRTReference(*args):
  """
    prmWRTReference(prmTransformationBase tipFrame, prmTransformationBase refFrame) -> vctFrm3
    prmWRTReference(std::string const & tipFrame, std::string const & refFrame) -> vctFrm3
    prmWRTReference(std::string const & tipFrame, prmTransformationBase refFrame) -> vctFrm3
    prmWRTReference(prmTransformationBase tipFrame, std::string const & refFrame) -> vctFrm3
    """
  return _cisstParameterTypesPython.prmWRTReference(*args)
class prmTransformationDynamic(prmTransformationBase):
    """Proxy of C++ prmTransformationDynamic class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmTransformationDynamic_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmTransformationDynamic_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmTransformationDynamic_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmTransformationDynamic self) -> prmTransformationDynamic
        __init__(prmTransformationDynamic self, std::string const & name) -> prmTransformationDynamic
        __init__(prmTransformationDynamic self, std::string const & name, mtsFunctionRead transformationCommand, prmTransformationBase reference) -> prmTransformationDynamic
        """
        this = _cisstParameterTypesPython.new_prmTransformationDynamic(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmTransformationDynamic
    __del__ = lambda self : None;
    def SetTransformationCommand(self, *args):
        """SetTransformationCommand(prmTransformationDynamic self, mtsFunctionRead transformationCommand)"""
        return _cisstParameterTypesPython.prmTransformationDynamic_SetTransformationCommand(self, *args)

    def GetTransformationCommand(self):
        """GetTransformationCommand(prmTransformationDynamic self) -> mtsFunctionRead"""
        return _cisstParameterTypesPython.prmTransformationDynamic_GetTransformationCommand(self)

prmTransformationDynamic_swigregister = _cisstParameterTypesPython.prmTransformationDynamic_swigregister
prmTransformationDynamic_swigregister(prmTransformationDynamic)

def prmTransformationDynamic_ClassServices():
  """prmTransformationDynamic_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmTransformationDynamic_ClassServices()

class prmTransformationFixed(prmTransformationBase):
    """Proxy of C++ prmTransformationFixed class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmTransformationFixed_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmTransformationFixed_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmTransformationFixed_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmTransformationFixed self) -> prmTransformationFixed
        __init__(prmTransformationFixed self, std::string const & name) -> prmTransformationFixed
        __init__(prmTransformationFixed self, std::string const & name, vctFrm3 transformation, prmTransformationBase newReference) -> prmTransformationFixed
        """
        this = _cisstParameterTypesPython.new_prmTransformationFixed(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _cisstParameterTypesPython.delete_prmTransformationFixed
    __del__ = lambda self : None;
    def SetTransformation(self, *args):
        """SetTransformation(prmTransformationFixed self, vctFrm3 newTransformation)"""
        return _cisstParameterTypesPython.prmTransformationFixed_SetTransformation(self, *args)

    def GetTransformation(self):
        """GetTransformation(prmTransformationFixed self) -> vctFrm3"""
        return _cisstParameterTypesPython.prmTransformationFixed_GetTransformation(self)

prmTransformationFixed_swigregister = _cisstParameterTypesPython.prmTransformationFixed_swigregister
prmTransformationFixed_swigregister(prmTransformationFixed)

def prmTransformationFixed_ClassServices():
  """prmTransformationFixed_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmTransformationFixed_ClassServices()

class prmRobotState(cisstMultiTaskPython.mtsGenericObject):
    """Proxy of C++ prmRobotState class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    HAS_DYNAMIC_CREATION = _cisstParameterTypesPython.prmRobotState_HAS_DYNAMIC_CREATION
    InitialLoD = _cisstParameterTypesPython.prmRobotState_InitialLoD
    def ClassServices():
        """ClassServices() -> cmnClassServicesBase"""
        return _cisstParameterTypesPython.prmRobotState_ClassServices()

    ClassServices = staticmethod(ClassServices)
    def __init__(self, *args): 
        """
        __init__(prmRobotState self) -> prmRobotState
        __init__(prmRobotState self, prmRobotState::size_type size) -> prmRobotState
        """
        this = _cisstParameterTypesPython.new_prmRobotState(*args)
        try: self.this.append(this)
        except: self.this = this
    def SetSize(self, *args):
        """SetSize(prmRobotState self, prmRobotState::size_type size)"""
        return _cisstParameterTypesPython.prmRobotState_SetSize(self, *args)

    __swig_destroy__ = _cisstParameterTypesPython.delete_prmRobotState
    __del__ = lambda self : None;
    def SetJointPosition(self, *args):
        """SetJointPosition(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointPosition(self, *args)

    def JointPosition(self, *args):
        """
        JointPosition(prmRobotState self) -> vctDoubleVec const
        JointPosition(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointPosition(self, *args)

    def GetJointPosition(self, *args):
        """
        GetJointPosition(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointPosition(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointPosition(self, *args)

    def SetJointVelocity(self, *args):
        """SetJointVelocity(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointVelocity(self, *args)

    def JointVelocity(self, *args):
        """
        JointVelocity(prmRobotState self) -> vctDoubleVec const
        JointVelocity(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointVelocity(self, *args)

    def GetJointVelocity(self, *args):
        """
        GetJointVelocity(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointVelocity(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointVelocity(self, *args)

    def SetJointPositionGoal(self, *args):
        """SetJointPositionGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointPositionGoal(self, *args)

    def JointPositionGoal(self, *args):
        """
        JointPositionGoal(prmRobotState self) -> vctDoubleVec const
        JointPositionGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointPositionGoal(self, *args)

    def GetJointPositionGoal(self, *args):
        """
        GetJointPositionGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointPositionGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointPositionGoal(self, *args)

    def SetJointVelocityGoal(self, *args):
        """SetJointVelocityGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointVelocityGoal(self, *args)

    def JointVelocityGoal(self, *args):
        """
        JointVelocityGoal(prmRobotState self) -> vctDoubleVec const
        JointVelocityGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointVelocityGoal(self, *args)

    def GetJointVelocityGoal(self, *args):
        """
        GetJointVelocityGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointVelocityGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointVelocityGoal(self, *args)

    def SetJointPositionError(self, *args):
        """SetJointPositionError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointPositionError(self, *args)

    def JointPositionError(self, *args):
        """
        JointPositionError(prmRobotState self) -> vctDoubleVec const
        JointPositionError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointPositionError(self, *args)

    def GetJointPositionError(self, *args):
        """
        GetJointPositionError(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointPositionError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointPositionError(self, *args)

    def SetJointVelocityError(self, *args):
        """SetJointVelocityError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetJointVelocityError(self, *args)

    def JointVelocityError(self, *args):
        """
        JointVelocityError(prmRobotState self) -> vctDoubleVec const
        JointVelocityError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_JointVelocityError(self, *args)

    def GetJointVelocityError(self, *args):
        """
        GetJointVelocityError(prmRobotState self, vctDoubleVec & placeHolder)
        GetJointVelocityError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetJointVelocityError(self, *args)

    def SetCartesianPosition(self, *args):
        """SetCartesianPosition(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianPosition(self, *args)

    def CartesianPosition(self, *args):
        """
        CartesianPosition(prmRobotState self) -> vctDoubleVec const
        CartesianPosition(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianPosition(self, *args)

    def GetCartesianPosition(self, *args):
        """
        GetCartesianPosition(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianPosition(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianPosition(self, *args)

    def SetCartesianVelocity(self, *args):
        """SetCartesianVelocity(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianVelocity(self, *args)

    def CartesianVelocity(self, *args):
        """
        CartesianVelocity(prmRobotState self) -> vctDoubleVec const
        CartesianVelocity(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianVelocity(self, *args)

    def GetCartesianVelocity(self, *args):
        """
        GetCartesianVelocity(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianVelocity(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianVelocity(self, *args)

    def SetCartesianPositionGoal(self, *args):
        """SetCartesianPositionGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianPositionGoal(self, *args)

    def CartesianPositionGoal(self, *args):
        """
        CartesianPositionGoal(prmRobotState self) -> vctDoubleVec const
        CartesianPositionGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianPositionGoal(self, *args)

    def GetCartesianPositionGoal(self, *args):
        """
        GetCartesianPositionGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianPositionGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianPositionGoal(self, *args)

    def SetCartesianVelocityGoal(self, *args):
        """SetCartesianVelocityGoal(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianVelocityGoal(self, *args)

    def CartesianVelocityGoal(self, *args):
        """
        CartesianVelocityGoal(prmRobotState self) -> vctDoubleVec const
        CartesianVelocityGoal(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianVelocityGoal(self, *args)

    def GetCartesianVelocityGoal(self, *args):
        """
        GetCartesianVelocityGoal(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianVelocityGoal(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianVelocityGoal(self, *args)

    def SetCartesianPositionError(self, *args):
        """SetCartesianPositionError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianPositionError(self, *args)

    def CartesianPositionError(self, *args):
        """
        CartesianPositionError(prmRobotState self) -> vctDoubleVec const
        CartesianPositionError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianPositionError(self, *args)

    def GetCartesianPositionError(self, *args):
        """
        GetCartesianPositionError(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianPositionError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianPositionError(self, *args)

    def SetCartesianVelocityError(self, *args):
        """SetCartesianVelocityError(prmRobotState self, vctDoubleVec const & newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetCartesianVelocityError(self, *args)

    def CartesianVelocityError(self, *args):
        """
        CartesianVelocityError(prmRobotState self) -> vctDoubleVec const
        CartesianVelocityError(prmRobotState self) -> vctDoubleVec &
        """
        return _cisstParameterTypesPython.prmRobotState_CartesianVelocityError(self, *args)

    def GetCartesianVelocityError(self, *args):
        """
        GetCartesianVelocityError(prmRobotState self, vctDoubleVec & placeHolder)
        GetCartesianVelocityError(prmRobotState self) -> vctDoubleVec const &
        """
        return _cisstParameterTypesPython.prmRobotState_GetCartesianVelocityError(self, *args)

    def SetEndEffectorFrame(self, *args):
        """SetEndEffectorFrame(prmRobotState self, vctFrm3 newValue)"""
        return _cisstParameterTypesPython.prmRobotState_SetEndEffectorFrame(self, *args)

    def EndEffectorFrame(self, *args):
        """
        EndEffectorFrame(prmRobotState self) -> vctFrm3
        EndEffectorFrame(prmRobotState self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmRobotState_EndEffectorFrame(self, *args)

    def GetEndEffectorFrame(self, *args):
        """
        GetEndEffectorFrame(prmRobotState self, vctFrm3 placeHolder)
        GetEndEffectorFrame(prmRobotState self) -> vctFrm3
        """
        return _cisstParameterTypesPython.prmRobotState_GetEndEffectorFrame(self, *args)

prmRobotState_swigregister = _cisstParameterTypesPython.prmRobotState_swigregister
prmRobotState_swigregister(prmRobotState)

def prmRobotState_ClassServices():
  """prmRobotState_ClassServices() -> cmnClassServicesBase"""
  return _cisstParameterTypesPython.prmRobotState_ClassServices()



