/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON
#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      register size_t l = 0;
      register size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	register size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  register int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      register size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  register const unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    register unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  register unsigned char *u = (unsigned char *) ptr;
  register const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    register char d = *(c++);
    register unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03000000
  char *cstr;
  char *newstr;
  Py_ssize_t len;
  str = PyUnicode_AsUTF8String(str);
  PyBytes_AsStringAndSize(str, &cstr, &len);
  newstr = (char *) malloc(len+1);
  memcpy(newstr, cstr, len+1);
  Py_XDECREF(str);
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#else
#  define SWIG_Python_str_DelForPy3(x) 
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

/* Add PyOS_snprintf for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
#  define PyOS_snprintf _snprintf
# else
#  define PyOS_snprintf snprintf
# endif
#endif

/* A crude PyString_FromFormat implementation for old Pythons */
#if PY_VERSION_HEX < 0x02020000

#ifndef SWIG_PYBUFFER_SIZE
# define SWIG_PYBUFFER_SIZE 1024
#endif

static PyObject *
PyString_FromFormat(const char *fmt, ...) {
  va_list ap;
  char buf[SWIG_PYBUFFER_SIZE * 2];
  int res;
  va_start(ap, fmt);
  res = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return (res < 0 || res >= (int)sizeof(buf)) ? 0 : PyString_FromString(buf);
}
#endif

/* Add PyObject_Del for old Pythons */
#if PY_VERSION_HEX < 0x01060000
# define PyObject_Del(op) PyMem_DEL((op))
#endif
#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

/* A crude PyExc_StopIteration exception for old Pythons */
#if PY_VERSION_HEX < 0x02020000
# ifndef PyExc_StopIteration
#  define PyExc_StopIteration PyExc_RuntimeError
# endif
# ifndef PyObject_GenericGetAttr
#  define PyObject_GenericGetAttr 0
# endif
#endif

/* Py_NotImplemented is defined in 2.1 and up. */
#if PY_VERSION_HEX < 0x02010000
# ifndef Py_NotImplemented
#  define Py_NotImplemented PyExc_RuntimeError
# endif
#endif

/* A crude PyString_AsStringAndSize implementation for old Pythons */
#if PY_VERSION_HEX < 0x02010000
# ifndef PyString_AsStringAndSize
#  define PyString_AsStringAndSize(obj, s, len) {*s = PyString_AsString(obj); *len = *s ? strlen(*s) : 0;}
# endif
#endif

/* PySequence_Size for old Pythons */
#if PY_VERSION_HEX < 0x02000000
# ifndef PySequence_Size
#  define PySequence_Size PySequence_Length
# endif
#endif

/* PyBool_FromLong for old Pythons */
#if PY_VERSION_HEX < 0x02030000
static
PyObject *PyBool_FromLong(long ok)
{
  PyObject *result = ok ? Py_True : Py_False;
  Py_INCREF(result);
  return result;
}
#endif

/* Py_ssize_t for old Pythons */
/* This code is as recommended by: */
/* http://www.python.org/dev/peps/pep-0353/#conversion-guidelines */
#if PY_VERSION_HEX < 0x02050000 && !defined(PY_SSIZE_T_MIN)
typedef int Py_ssize_t;
# define PY_SSIZE_T_MAX INT_MAX
# define PY_SSIZE_T_MIN INT_MIN
typedef inquiry lenfunc;
typedef intargfunc ssizeargfunc;
typedef intintargfunc ssizessizeargfunc;
typedef intobjargproc ssizeobjargproc;
typedef intintobjargproc ssizessizeobjargproc;
typedef getreadbufferproc readbufferproc;
typedef getwritebufferproc writebufferproc;
typedef getsegcountproc segcountproc;
typedef getcharbufferproc charbufferproc;
static long PyNumber_AsSsize_t (PyObject *x, void *SWIGUNUSEDPARM(exc))
{
  long result = 0;
  PyObject *i = PyNumber_Int(x);
  if (i) {
    result = PyInt_AsLong(i);
    Py_DECREF(i);
  }
  return result;
}
#endif

#if PY_VERSION_HEX < 0x02050000
#define PyInt_FromSize_t(x) PyInt_FromLong((long)x)
#endif

#if PY_VERSION_HEX < 0x02040000
#define Py_VISIT(op)				\
  do { 						\
    if (op) {					\
      int vret = visit((op), arg);		\
      if (vret)					\
        return vret;				\
    }						\
  } while (0)
#endif

#if PY_VERSION_HEX < 0x02030000
typedef struct {
  PyTypeObject type;
  PyNumberMethods as_number;
  PyMappingMethods as_mapping;
  PySequenceMethods as_sequence;
  PyBufferProcs as_buffer;
  PyObject *name, *slots;
} PyHeapTypeObject;
#endif

#if PY_VERSION_HEX < 0x02030000
typedef destructor freefunc;
#endif

#if ((PY_MAJOR_VERSION == 2 && PY_MINOR_VERSION > 6) || \
     (PY_MAJOR_VERSION == 3 && PY_MINOR_VERSION > 0) || \
     (PY_MAJOR_VERSION > 3))
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)
#endif

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred()) PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    char *tmp;
    PyObject *old_str = PyObject_Str(value);
    PyErr_Clear();
    Py_XINCREF(type);

    PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    if (PY_VERSION_HEX >= 0x02030000) /* For 2.3 or later, use the PyGILState calls */
#      define SWIG_PYTHON_USE_GIL
#    endif
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;


/* -----------------------------------------------------------------------------
 * Wrapper of PyInstanceMethod_New() used in Python 3
 * It is exported to the generated module, used for -fastproxy
 * ----------------------------------------------------------------------------- */
#if PY_VERSION_HEX >= 0x03000000
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func)
{
  return PyInstanceMethod_New(func);
}
#else
SWIGRUNTIME PyObject* SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(func))
{
  return NULL;
}
#endif

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
#if PY_VERSION_HEX < 0x02030000
  PyDict_SetItemString(d, (char *)name, obj);
#else
  PyDict_SetItemString(d, name, obj);
#endif
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
#if !defined(SWIG_PYTHON_OUTPUT_TUPLE)
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
#else
  PyObject*   o2;
  PyObject*   o3;
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyTuple_Check(result)) {
      o2 = result;
      result = PyTuple_New(1);
      PyTuple_SET_ITEM(result, 0, o2);
    }
    o3 = PyTuple_New(1);
    PyTuple_SET_ITEM(o3, 0, obj);
    o2 = result;
    result = PySequence_Concat(o2, o3);
    Py_DECREF(o2);
    Py_DECREF(o3);
  }
  return result;
#endif
}

/* Unpack the argument tuple */

SWIGINTERN int
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      register int i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    register Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      register int i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

/* A functor is a function object with one single object argument */
#if PY_VERSION_HEX >= 0x02020000
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);
#else
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunction(functor, "O", obj);
#endif

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/*  How to access Py_None */
#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  ifndef SWIG_PYTHON_NO_BUILD_NONE
#    ifndef SWIG_PYTHON_BUILD_NONE
#      define SWIG_PYTHON_BUILD_NONE
#    endif
#  endif
#endif

#ifdef SWIG_PYTHON_BUILD_NONE
#  ifdef Py_None
#   undef Py_None
#   define Py_None SWIG_Py_None()
#  endif
SWIGRUNTIMEINLINE PyObject * 
_SWIG_Py_None(void)
{
  PyObject *none = Py_BuildValue((char*)"");
  Py_DECREF(none);
  return none;
}
SWIGRUNTIME PyObject * 
SWIG_Py_None(void)
{
  static PyObject *SWIG_STATIC_POINTER(none) = _SWIG_Py_None();
  return none;
}
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  return data ? data->implicitconv : 0;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
#if (PY_VERSION_HEX < 0x02020000)
      data->newraw = 0;
#else
      data->newraw = PyObject_GetAttrString(data->klass, (char *)"__new__");
#endif
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, (char *)"__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
#ifdef METH_O
      data->delargs = !(flags & (METH_O));
#else
      data->delargs = 0;
#endif
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
#ifdef METH_NOARGS
SwigPyObject_repr(SwigPyObject *v)
#else
SwigPyObject_repr(SwigPyObject *v, PyObject *args)
#endif
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
# ifdef METH_NOARGS
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# else
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next, args);
# endif
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;
      if (data->delargs) {
	/* we need to create a temporary object to carry the destroy operation */
	PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
	res = SWIG_Python_CallFunctor(destroy, tmp);
	Py_DECREF(tmp);
      } else {
	PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
	PyObject *mself = PyCFunction_GET_SELF(destroy);
	res = ((*meth)(mself, v));
      }
      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
#ifndef METH_O
  PyObject *tmp = 0;
  if (!PyArg_ParseTuple(next,(char *)"O:append", &tmp)) return NULL;
  next = tmp;
#endif
  if (!SwigPyObject_Check(next)) {
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
#ifdef METH_NOARGS
SwigPyObject_next(PyObject* v)
#else
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_disown(PyObject *v)
#else
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
#ifdef METH_NOARGS
SwigPyObject_acquire(PyObject *v)
#else
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
#endif
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
#if (PY_VERSION_HEX < 0x02020000)
  if (!PyArg_ParseTuple(args,(char *)"|O:own",&val))
#elif (PY_VERSION_HEX < 0x02050000)
  if (!PyArg_UnpackTuple(args, (char *)"own", 0, 1, &val)) 
#else
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) 
#endif
    {
      return NULL;
    } 
  else
    {
      SwigPyObject *sobj = (SwigPyObject *)v;
      PyObject *obj = PyBool_FromLong(sobj->own);
      if (val) {
#ifdef METH_NOARGS
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v);
	} else {
	  SwigPyObject_disown(v);
	}
#else
	if (PyObject_IsTrue(val)) {
	  SwigPyObject_acquire(v,args);
	} else {
	  SwigPyObject_disown(v,args);
	}
#endif
      } 
      return obj;
    }
}

#ifdef METH_O
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_NOARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_NOARGS,  (char *)"acquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS, (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_O,       (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_NOARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,    METH_NOARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#else
static PyMethodDef
swigobject_methods[] = {
  {(char *)"disown",  (PyCFunction)SwigPyObject_disown,  METH_VARARGS,  (char *)"releases ownership of the pointer"},
  {(char *)"acquire", (PyCFunction)SwigPyObject_acquire, METH_VARARGS,  (char *)"aquires ownership of the pointer"},
  {(char *)"own",     (PyCFunction)SwigPyObject_own,     METH_VARARGS,  (char *)"returns/sets ownership of the pointer"},
  {(char *)"append",  (PyCFunction)SwigPyObject_append,  METH_VARARGS,  (char *)"appends another 'this' object"},
  {(char *)"next",    (PyCFunction)SwigPyObject_next,    METH_VARARGS,  (char *)"returns the next 'this' object"},
  {(char *)"__repr__",(PyCFunction)SwigPyObject_repr,   METH_VARARGS,  (char *)"returns object representation"},
  {0, 0, 0, 0}  
};
#endif

#if PY_VERSION_HEX < 0x02020000
SWIGINTERN PyObject *
SwigPyObject_getattr(SwigPyObject *sobj,char *name)
{
  return Py_FindMethod(swigobject_methods, (PyObject *)sobj, name);
}
#endif

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#elif PY_VERSION_HEX >= 0x02050000 /* 2.5.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#elif PY_VERSION_HEX >= 0x02020000 /* 2.2.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_true_divide */
#elif PY_VERSION_HEX >= 0x02000000 /* 2.0.0 */
    0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_or */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyObject",               /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,				    /* tp_print */
#if PY_VERSION_HEX < 0x02020000
      (getattrfunc)SwigPyObject_getattr,    /* tp_getattr */
#else
      (getattrfunc)0,                       /* tp_getattr */
#endif
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
    0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,				    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpyobject_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
#endif
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME int
SwigPyPacked_print(SwigPyPacked *v, FILE *fp, int SWIGUNUSEDPARM(flags))
{
  char result[SWIG_BUFFER_SIZE];
  fputs("<Swig Packed ", fp); 
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    fputs("at ", fp); 
    fputs(result, fp); 
  }
  fputs(v->ty->name,fp); 
  fputs(">", fp);
  return 0; 
}
  
SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((char *)v->pack, (char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
      /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      (char *)"SwigPyPacked",               /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      (printfunc)SwigPyPacked_print,        /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
      0,                                    /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
      0,                                    /* tp_version */
#endif
#ifdef COUNT_ALLOCS
      0,0,0,0                               /* tp_alloc -> tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
#if PY_VERSION_HEX < 0x02020000
    swigpypacked_type.ob_type = &PyType_Type;
#else
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
#endif
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIMEINLINE PyObject *
_SWIG_This(void)
{
    return SWIG_Python_str_FromChar("this");
}

static PyObject *swig_this = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (swig_this == NULL)
    swig_this = _SWIG_This();
  return swig_this;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if (!defined(SWIG_PYTHON_SLOW_GETSET_THIS) && (PY_VERSION_HEX >= 0x02030000))
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
    }
    if (!SWIG_IsOK(res) && obj == Py_None) {
      if (ptr)
        *ptr = 0;
      if (PyErr_Occurred())
        PyErr_Clear();
      res = SWIG_OK;
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    
    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc) 
      return SWIG_ERROR;
    if (ty) {
      swig_cast_info *tc = SWIG_TypeCheck(desc,ty);
      if (tc) {
        int newmemory = 0;
        *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
        assert(!newmemory); /* newmemory handling not yet implemented */
      } else {
        return SWIG_ERROR;
      }
    } else {
      *ptr = vptr;
    }
    return SWIG_OK;
  }
}

/* Convert a packed value value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
#if (PY_VERSION_HEX >= 0x02020000)
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      PyObject *key = SWIG_This();
      PyObject_SetAttr(inst, key, swig_this);
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    inst = PyBaseObject_Type.tp_new((PyTypeObject*) data->newargs, Py_None, Py_None);
    if (inst) {
      PyObject_SetAttr(inst, SWIG_This(), swig_this);
      Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
#else
#if (PY_VERSION_HEX >= 0x02010000)
  PyObject *inst = 0;
  PyObject *dict = PyDict_New();
  if (dict) {
    PyDict_SetItem(dict, SWIG_This(), swig_this);
    inst = PyInstance_NewRaw(data->newargs, dict);
    Py_DECREF(dict);
  }
  return (PyObject *) inst;
#else
  PyInstanceObject *inst = PyObject_NEW(PyInstanceObject, &PyInstance_Type);
  if (inst == NULL) {
    return NULL;
  }
  inst->in_class = (PyClassObject *)data->newargs;
  Py_INCREF(inst->in_class);
  inst->in_dict = PyDict_New();
  if (inst->in_dict == NULL) {
    Py_DECREF(inst);
    return NULL;
  }
#ifdef Py_TPFLAGS_HAVE_WEAKREFS
  inst->in_weakreflist = NULL;
#endif
#ifdef Py_TPFLAGS_GC
  PyObject_GC_Init(inst);
#endif
  PyDict_SetItem(inst->in_dict, SWIG_This(), swig_this);
  return (PyObject *) inst;
#endif
#endif
}

SWIGRUNTIME void
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
 PyObject *dict;
#if (PY_VERSION_HEX >= 0x02020000) && !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
 PyObject **dictptr = _PyObject_GetDictPtr(inst);
 if (dictptr != NULL) {
   dict = *dictptr;
   if (dict == NULL) {
     dict = PyDict_New();
     *dictptr = dict;
   }
   PyDict_SetItem(dict, SWIG_This(), swig_this);
   return;
 }
#endif
 dict = PyObject_GetAttrString(inst, (char*)"__dict__");
 PyDict_SetItem(dict, SWIG_This(), swig_this);
 Py_DECREF(dict);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      SWIG_Python_SetSwigThis(obj[0], obj[1]);
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
# ifdef SWIGPY_USE_CAPSULE
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
# else
    type_pointer = PyCObject_Import((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION,
				    (char*)"type_pointer" SWIG_TYPE_TABLE_NAME);
# endif
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

#if PY_MAJOR_VERSION < 2
/* PyModule_AddObject function was introduced in Python 2.0.  The following function
   is copied out of Python/modsupport.c in python version 2.3.4 */
SWIGINTERN int
PyModule_AddObject(PyObject *m, char *name, PyObject *o)
{
  PyObject *dict;
  if (!PyModule_Check(m)) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs module as first arg");
    return SWIG_ERROR;
  }
  if (!o) {
    PyErr_SetString(PyExc_TypeError,
		    "PyModule_AddObject() needs non-NULL value");
    return SWIG_ERROR;
  }
  
  dict = PyModule_GetDict(m);
  if (dict == NULL) {
    /* Internal error -- modules must have a dict! */
    PyErr_Format(PyExc_SystemError, "module '%s' has no __dict__",
		 PyModule_GetName(m));
    return SWIG_ERROR;
  }
  if (PyDict_SetItemString(dict, name, o))
    return SWIG_ERROR;
  Py_DECREF(o);
  return SWIG_OK;
}
#endif

SWIGRUNTIME void
#ifdef SWIGPY_USE_CAPSULE
SWIG_Python_DestroyModule(PyObject *obj)
#else
SWIG_Python_DestroyModule(void *vptr)
#endif
{
#ifdef SWIGPY_USE_CAPSULE
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
#else
  swig_module_info *swig_module = (swig_module_info *) vptr;
#endif
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  swig_this = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule((char*)"swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
#ifdef SWIGPY_USE_CAPSULE
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#else
  PyObject *pointer = PyCObject_FromVoidPtr((void *) swig_module, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, (char*)"type_pointer" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
#endif
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
#ifdef SWIGPY_USE_CAPSULE
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
#else
    descriptor = (swig_type_info *) PyCObject_AsVoidPtr(obj);
#endif
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
#ifdef SWIGPY_USE_CAPSULE
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
#else
      obj = PyCObject_FromVoidPtr(descriptor, NULL);
#endif
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      char *tmp;
      PyObject *old_str = PyObject_Str(value);
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, tmp = SWIG_Python_str_AsChar(old_str));
      } else {
	PyErr_Format(type, "%s %s", tmp = SWIG_Python_str_AsChar(old_str), mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



  #define SWIG_exception(code, msg) do { SWIG_Error(code, msg); SWIG_fail;; } while(0) 


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_ActionType swig_types[0]
#define SWIGTYPE_p_AngleType swig_types[1]
#define SWIGTYPE_p_BaseClassType swig_types[2]
#define SWIGTYPE_p_BaseType swig_types[3]
#define SWIGTYPE_p_BoolType swig_types[4]
#define SWIGTYPE_p_CISSTNETLIB_DOUBLE swig_types[5]
#define SWIGTYPE_p_CISSTNETLIB_INTEGER swig_types[6]
#define SWIGTYPE_p_CallableType swig_types[7]
#define SWIGTYPE_p_ChannelContainerType swig_types[8]
#define SWIGTYPE_p_ChannelType swig_types[9]
#define SWIGTYPE_p_CollectorFileFloatingNotation swig_types[10]
#define SWIGTYPE_p_CollectorFileFormat swig_types[11]
#define SWIGTYPE_p_CommandInternalMapType swig_types[12]
#define SWIGTYPE_p_CommandQualifiedReadMapType swig_types[13]
#define SWIGTYPE_p_CommandReadMapType swig_types[14]
#define SWIGTYPE_p_CommandType swig_types[15]
#define SWIGTYPE_p_CommandVoidMapType swig_types[16]
#define SWIGTYPE_p_CommandVoidReturnMapType swig_types[17]
#define SWIGTYPE_p_CommandWriteMapType swig_types[18]
#define SWIGTYPE_p_CommandWriteReturnMapType swig_types[19]
#define SWIGTYPE_p_CompressionData swig_types[20]
#define SWIGTYPE_p_Config swig_types[21]
#define SWIGTYPE_p_ConstIteratorType swig_types[22]
#define SWIGTYPE_p_ContainerType swig_types[23]
#define SWIGTYPE_p_DeRefType swig_types[24]
#define SWIGTYPE_p_DeviceInfo swig_types[25]
#define SWIGTYPE_p_DeviceInfoListType swig_types[26]
#define SWIGTYPE_p_ElementType swig_types[27]
#define SWIGTYPE_p_EntryType swig_types[28]
#define SWIGTYPE_p_EventVoidMapType swig_types[29]
#define SWIGTYPE_p_EventWriteMapType swig_types[30]
#define SWIGTYPE_p_ExternalTrigger swig_types[31]
#define SWIGTYPE_p_FormatListType swig_types[32]
#define SWIGTYPE_p_ImageFormat swig_types[33]
#define SWIGTYPE_p_ImageProperties swig_types[34]
#define SWIGTYPE_p_ImagePropertiesMask swig_types[35]
#define SWIGTYPE_p_IplImage swig_types[36]
#define SWIGTYPE_p_IteratorType swig_types[37]
#define SWIGTYPE_p_MatrixType swig_types[38]
#define SWIGTYPE_p_MultiplexerConstIteratorType swig_types[39]
#define SWIGTYPE_p_MultiplexerContainerType swig_types[40]
#define SWIGTYPE_p_MultiplexerIteratorType swig_types[41]
#define SWIGTYPE_p_NormType swig_types[42]
#define SWIGTYPE_p_PatternType swig_types[43]
#define SWIGTYPE_p_PixelType swig_types[44]
#define SWIGTYPE_p_PlatformType swig_types[45]
#define SWIGTYPE_p_RefType swig_types[46]
#define SWIGTYPE_p_RotationType swig_types[47]
#define SWIGTYPE_p_ServicesContainerType swig_types[48]
#define SWIGTYPE_p_StreamBufType swig_types[49]
#define SWIGTYPE_p_ThisType swig_types[50]
#define SWIGTYPE_p_TimeTicksType swig_types[51]
#define SWIGTYPE_p_TranslationType swig_types[52]
#define SWIGTYPE_p_Type swig_types[53]
#define SWIGTYPE_p_TypeTraits swig_types[54]
#define SWIGTYPE_p_VaArgPromotion swig_types[55]
#define SWIGTYPE_p_VectorType swig_types[56]
#define SWIGTYPE_p_allocator_type swig_types[57]
#define SWIGTYPE_p_bool swig_types[58]
#define SWIGTYPE_p_char swig_types[59]
#define SWIGTYPE_p_char_type swig_types[60]
#define SWIGTYPE_p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t swig_types[61]
#define SWIGTYPE_p_cmnClassServicesBase swig_types[62]
#define SWIGTYPE_p_cmnGenericObject swig_types[63]
#define SWIGTYPE_p_cmnGenericObjectProxyT_bool_t swig_types[64]
#define SWIGTYPE_p_cmnGenericObjectProxyT_char_t swig_types[65]
#define SWIGTYPE_p_cmnGenericObjectProxyT_double_t swig_types[66]
#define SWIGTYPE_p_cmnGenericObjectProxyT_int_t swig_types[67]
#define SWIGTYPE_p_cmnGenericObjectProxyT_long_long_t swig_types[68]
#define SWIGTYPE_p_cmnGenericObjectProxyT_long_t swig_types[69]
#define SWIGTYPE_p_cmnGenericObjectProxyT_short_t swig_types[70]
#define SWIGTYPE_p_cmnGenericObjectProxyT_unsigned_char_t swig_types[71]
#define SWIGTYPE_p_cmnGenericObjectProxyT_unsigned_int_t swig_types[72]
#define SWIGTYPE_p_cmnGenericObjectProxyT_unsigned_long_long_t swig_types[73]
#define SWIGTYPE_p_cmnGenericObjectProxyT_unsigned_long_t swig_types[74]
#define SWIGTYPE_p_cmnGenericObjectProxyT_unsigned_short_t swig_types[75]
#define SWIGTYPE_p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t swig_types[76]
#define SWIGTYPE_p_cmnPath swig_types[77]
#define SWIGTYPE_p_const_iterator swig_types[78]
#define SWIGTYPE_p_const_reverse_iterator swig_types[79]
#define SWIGTYPE_p_cv__Mat swig_types[80]
#define SWIGTYPE_p_difference_type swig_types[81]
#define SWIGTYPE_p_dimension_type swig_types[82]
#define SWIGTYPE_p_double swig_types[83]
#define SWIGTYPE_p_f_enum_std__ios_base__event_r_std__ios_base_int__void swig_types[84]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t swig_types[85]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[86]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[87]
#define SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[88]
#define SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[89]
#define SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[90]
#define SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[91]
#define SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[92]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t swig_types[93]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[94]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[95]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[96]
#define SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base swig_types[97]
#define SWIGTYPE_p_first_type swig_types[98]
#define SWIGTYPE_p_float swig_types[99]
#define SWIGTYPE_p_fmtflags swig_types[100]
#define SWIGTYPE_p_index_type swig_types[101]
#define SWIGTYPE_p_int swig_types[102]
#define SWIGTYPE_p_int_type swig_types[103]
#define SWIGTYPE_p_ios_base__openmode swig_types[104]
#define SWIGTYPE_p_ios_base__seekdir swig_types[105]
#define SWIGTYPE_p_iostate swig_types[106]
#define SWIGTYPE_p_iterator swig_types[107]
#define SWIGTYPE_p_key_type swig_types[108]
#define SWIGTYPE_p_long swig_types[109]
#define SWIGTYPE_p_long_double swig_types[110]
#define SWIGTYPE_p_long_long swig_types[111]
#define SWIGTYPE_p_mapped_type swig_types[112]
#define SWIGTYPE_p_mtsBlockingType swig_types[113]
#define SWIGTYPE_p_mtsCollectorBase swig_types[114]
#define SWIGTYPE_p_mtsCollectorState swig_types[115]
#define SWIGTYPE_p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t swig_types[116]
#define SWIGTYPE_p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t swig_types[117]
#define SWIGTYPE_p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t swig_types[118]
#define SWIGTYPE_p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t swig_types[119]
#define SWIGTYPE_p_mtsCommandQueueingPolicy swig_types[120]
#define SWIGTYPE_p_mtsComponent swig_types[121]
#define SWIGTYPE_p_mtsComponentConstructorNameAndArgT_double_t swig_types[122]
#define SWIGTYPE_p_mtsComponentConstructorNameAndArgT_int_t swig_types[123]
#define SWIGTYPE_p_mtsComponentConstructorNameAndArgT_long_t swig_types[124]
#define SWIGTYPE_p_mtsComponentConstructorNameAndArgT_std__string_t swig_types[125]
#define SWIGTYPE_p_mtsComponentConstructorNameAndArgT_unsigned_int_t swig_types[126]
#define SWIGTYPE_p_mtsComponentConstructorNameAndArgT_unsigned_long_t swig_types[127]
#define SWIGTYPE_p_mtsComponentWithManagement swig_types[128]
#define SWIGTYPE_p_mtsDoubleAnRot2 swig_types[129]
#define SWIGTYPE_p_mtsDoubleAxAnRot3 swig_types[130]
#define SWIGTYPE_p_mtsDoubleFrm4x4 swig_types[131]
#define SWIGTYPE_p_mtsDoubleMatFrm3 swig_types[132]
#define SWIGTYPE_p_mtsDoubleMatRot2 swig_types[133]
#define SWIGTYPE_p_mtsDoubleMatRot3 swig_types[134]
#define SWIGTYPE_p_mtsDoubleQuat swig_types[135]
#define SWIGTYPE_p_mtsDoubleQuatFrm3 swig_types[136]
#define SWIGTYPE_p_mtsDoubleQuatRot3 swig_types[137]
#define SWIGTYPE_p_mtsDoubleRodRot3 swig_types[138]
#define SWIGTYPE_p_mtsEventQueueingPolicy swig_types[139]
#define SWIGTYPE_p_mtsFloatAnRot2 swig_types[140]
#define SWIGTYPE_p_mtsFloatAxAnRot3 swig_types[141]
#define SWIGTYPE_p_mtsFloatFrm4x4 swig_types[142]
#define SWIGTYPE_p_mtsFloatMatFrm3 swig_types[143]
#define SWIGTYPE_p_mtsFloatMatRot2 swig_types[144]
#define SWIGTYPE_p_mtsFloatMatRot3 swig_types[145]
#define SWIGTYPE_p_mtsFloatQuat swig_types[146]
#define SWIGTYPE_p_mtsFloatQuatFrm3 swig_types[147]
#define SWIGTYPE_p_mtsFloatQuatRot3 swig_types[148]
#define SWIGTYPE_p_mtsFloatRodRot3 swig_types[149]
#define SWIGTYPE_p_mtsGenericObject swig_types[150]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_bool_t swig_types[151]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_double_t swig_types[152]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_float_t swig_types[153]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_int_t swig_types[154]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_long_t swig_types[155]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_mtsComponentState_t swig_types[156]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t swig_types[157]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t swig_types[158]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_short_t swig_types[159]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_std__string_t swig_types[160]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t swig_types[161]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t swig_types[162]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t swig_types[163]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t swig_types[164]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t swig_types[165]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_unsigned_int_t swig_types[166]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_unsigned_long_t swig_types[167]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_unsigned_short_t swig_types[168]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct1_t swig_types[169]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct2_t swig_types[170]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct2x2_t swig_types[171]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct3_t swig_types[172]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct3x3_t swig_types[173]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct4_t swig_types[174]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct4x4_t swig_types[175]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct5_t swig_types[176]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct6_t swig_types[177]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct7_t swig_types[178]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct8_t swig_types[179]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vct9_t swig_types[180]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool1_t swig_types[181]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool2_t swig_types[182]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool3_t swig_types[183]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool4_t swig_types[184]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool5_t swig_types[185]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool6_t swig_types[186]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool7_t swig_types[187]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool8_t swig_types[188]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBool9_t swig_types[189]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctBoolVec_t swig_types[190]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar1_t swig_types[191]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar2_t swig_types[192]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar3_t swig_types[193]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar4_t swig_types[194]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar5_t swig_types[195]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar6_t swig_types[196]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar7_t swig_types[197]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar8_t swig_types[198]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctChar9_t swig_types[199]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctCharVec_t swig_types[200]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctDoubleMat_t swig_types[201]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctDoubleVec_t swig_types[202]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat1_t swig_types[203]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat2_t swig_types[204]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat3_t swig_types[205]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat4_t swig_types[206]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat5_t swig_types[207]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat6_t swig_types[208]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat7_t swig_types[209]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat8_t swig_types[210]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloat9_t swig_types[211]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloatMat_t swig_types[212]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFloatVec_t swig_types[213]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t swig_types[214]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt1_t swig_types[215]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt2_t swig_types[216]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt3_t swig_types[217]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt4_t swig_types[218]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt5_t swig_types[219]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt6_t swig_types[220]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt7_t swig_types[221]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt8_t swig_types[222]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctInt9_t swig_types[223]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctIntMat_t swig_types[224]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctIntVec_t swig_types[225]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong1_t swig_types[226]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong2_t swig_types[227]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong3_t swig_types[228]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong4_t swig_types[229]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong5_t swig_types[230]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong6_t swig_types[231]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong7_t swig_types[232]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong8_t swig_types[233]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLong9_t swig_types[234]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctLongVec_t swig_types[235]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t swig_types[236]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort1_t swig_types[237]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort2_t swig_types[238]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort3_t swig_types[239]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort4_t swig_types[240]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort5_t swig_types[241]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort6_t swig_types[242]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort7_t swig_types[243]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort8_t swig_types[244]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShort9_t swig_types[245]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctShortVec_t swig_types[246]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar1_t swig_types[247]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar2_t swig_types[248]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar3_t swig_types[249]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar4_t swig_types[250]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar5_t swig_types[251]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar6_t swig_types[252]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar7_t swig_types[253]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar8_t swig_types[254]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUChar9_t swig_types[255]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUCharVec_t swig_types[256]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt1_t swig_types[257]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt2_t swig_types[258]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt3_t swig_types[259]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt4_t swig_types[260]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt5_t swig_types[261]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt6_t swig_types[262]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt7_t swig_types[263]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt8_t swig_types[264]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUInt9_t swig_types[265]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUIntVec_t swig_types[266]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong1_t swig_types[267]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong2_t swig_types[268]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong3_t swig_types[269]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong4_t swig_types[270]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong5_t swig_types[271]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong6_t swig_types[272]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong7_t swig_types[273]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong8_t swig_types[274]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULong9_t swig_types[275]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctULongVec_t swig_types[276]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort1_t swig_types[277]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort2_t swig_types[278]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort3_t swig_types[279]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort4_t swig_types[280]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort5_t swig_types[281]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort6_t swig_types[282]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort7_t swig_types[283]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort8_t swig_types[284]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShort9_t swig_types[285]
#define SWIGTYPE_p_mtsGenericObjectProxyBaseT_vctUShortVec_t swig_types[286]
#define SWIGTYPE_p_mtsGenericObjectProxyT_bool_t swig_types[287]
#define SWIGTYPE_p_mtsGenericObjectProxyT_char_t swig_types[288]
#define SWIGTYPE_p_mtsGenericObjectProxyT_double_t swig_types[289]
#define SWIGTYPE_p_mtsGenericObjectProxyT_float_t swig_types[290]
#define SWIGTYPE_p_mtsGenericObjectProxyT_int_t swig_types[291]
#define SWIGTYPE_p_mtsGenericObjectProxyT_long_long_t swig_types[292]
#define SWIGTYPE_p_mtsGenericObjectProxyT_long_t swig_types[293]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t swig_types[294]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsCommandReadDescription_t swig_types[295]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t swig_types[296]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t swig_types[297]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t swig_types[298]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t swig_types[299]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsComponentStateChange_t swig_types[300]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsComponentState_t swig_types[301]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsComponentStatusControl_t swig_types[302]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t swig_types[303]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsDescriptionComponent_t swig_types[304]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsDescriptionConnection_t swig_types[305]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t swig_types[306]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsDescriptionInterface_t swig_types[307]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t swig_types[308]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t swig_types[309]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsEventVoidDescription_t swig_types[310]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsEventWriteDescription_t swig_types[311]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsExecutionResult_t swig_types[312]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t swig_types[313]
#define SWIGTYPE_p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t swig_types[314]
#define SWIGTYPE_p_mtsGenericObjectProxyT_short_t swig_types[315]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__string_t swig_types[316]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t swig_types[317]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t swig_types[318]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t swig_types[319]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t swig_types[320]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t swig_types[321]
#define SWIGTYPE_p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t swig_types[322]
#define SWIGTYPE_p_mtsGenericObjectProxyT_unsigned_char_t swig_types[323]
#define SWIGTYPE_p_mtsGenericObjectProxyT_unsigned_int_t swig_types[324]
#define SWIGTYPE_p_mtsGenericObjectProxyT_unsigned_long_t swig_types[325]
#define SWIGTYPE_p_mtsGenericObjectProxyT_unsigned_short_t swig_types[326]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct1_t swig_types[327]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct2_t swig_types[328]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct2x2_t swig_types[329]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct3_t swig_types[330]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct3x3_t swig_types[331]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct4_t swig_types[332]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct4x4_t swig_types[333]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct5_t swig_types[334]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct6_t swig_types[335]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct7_t swig_types[336]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct8_t swig_types[337]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vct9_t swig_types[338]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool1_t swig_types[339]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool2_t swig_types[340]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool3_t swig_types[341]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool4_t swig_types[342]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool5_t swig_types[343]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool6_t swig_types[344]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool7_t swig_types[345]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool8_t swig_types[346]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBool9_t swig_types[347]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctBoolVec_t swig_types[348]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar1_t swig_types[349]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar2_t swig_types[350]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar3_t swig_types[351]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar4_t swig_types[352]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar5_t swig_types[353]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar6_t swig_types[354]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar7_t swig_types[355]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar8_t swig_types[356]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctChar9_t swig_types[357]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctCharVec_t swig_types[358]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctDoubleMat_t swig_types[359]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctDoubleVec_t swig_types[360]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t swig_types[361]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t swig_types[362]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat1_t swig_types[363]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat2_t swig_types[364]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat3_t swig_types[365]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat4_t swig_types[366]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat5_t swig_types[367]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat6_t swig_types[368]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat7_t swig_types[369]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat8_t swig_types[370]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloat9_t swig_types[371]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloatMat_t swig_types[372]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFloatVec_t swig_types[373]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t swig_types[374]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t swig_types[375]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt1_t swig_types[376]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt2_t swig_types[377]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt3_t swig_types[378]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt4_t swig_types[379]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt5_t swig_types[380]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt6_t swig_types[381]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt7_t swig_types[382]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt8_t swig_types[383]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctInt9_t swig_types[384]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctIntMat_t swig_types[385]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctIntVec_t swig_types[386]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong1_t swig_types[387]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong2_t swig_types[388]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong3_t swig_types[389]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong4_t swig_types[390]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong5_t swig_types[391]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong6_t swig_types[392]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong7_t swig_types[393]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong8_t swig_types[394]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLong9_t swig_types[395]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctLongVec_t swig_types[396]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t swig_types[397]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort1_t swig_types[398]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort2_t swig_types[399]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort3_t swig_types[400]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort4_t swig_types[401]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort5_t swig_types[402]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort6_t swig_types[403]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort7_t swig_types[404]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort8_t swig_types[405]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShort9_t swig_types[406]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctShortVec_t swig_types[407]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar1_t swig_types[408]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar2_t swig_types[409]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar3_t swig_types[410]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar4_t swig_types[411]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar5_t swig_types[412]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar6_t swig_types[413]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar7_t swig_types[414]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar8_t swig_types[415]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUChar9_t swig_types[416]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUCharVec_t swig_types[417]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt1_t swig_types[418]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt2_t swig_types[419]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt3_t swig_types[420]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt4_t swig_types[421]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt5_t swig_types[422]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt6_t swig_types[423]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt7_t swig_types[424]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt8_t swig_types[425]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUInt9_t swig_types[426]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUIntVec_t swig_types[427]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong1_t swig_types[428]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong2_t swig_types[429]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong3_t swig_types[430]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong4_t swig_types[431]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong5_t swig_types[432]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong6_t swig_types[433]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong7_t swig_types[434]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong8_t swig_types[435]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULong9_t swig_types[436]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctULongVec_t swig_types[437]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort1_t swig_types[438]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort2_t swig_types[439]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort3_t swig_types[440]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort4_t swig_types[441]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort5_t swig_types[442]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort6_t swig_types[443]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort7_t swig_types[444]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort8_t swig_types[445]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShort9_t swig_types[446]
#define SWIGTYPE_p_mtsGenericObjectProxyT_vctUShortVec_t swig_types[447]
#define SWIGTYPE_p_mtsInterface swig_types[448]
#define SWIGTYPE_p_mtsInterfaceProvided swig_types[449]
#define SWIGTYPE_p_mtsInterfaceQueueingPolicy swig_types[450]
#define SWIGTYPE_p_mtsInterfaceRequired swig_types[451]
#define SWIGTYPE_p_mtsIntervalStatistics swig_types[452]
#define SWIGTYPE_p_mtsManagerComponentServices swig_types[453]
#define SWIGTYPE_p_mtsManagerLocal swig_types[454]
#define SWIGTYPE_p_mtsManagerLocalInterface swig_types[455]
#define SWIGTYPE_p_mtsMatrixT_bool_t swig_types[456]
#define SWIGTYPE_p_mtsMatrixT_char_t swig_types[457]
#define SWIGTYPE_p_mtsMatrixT_double_t swig_types[458]
#define SWIGTYPE_p_mtsMatrixT_float_t swig_types[459]
#define SWIGTYPE_p_mtsMatrixT_int_t swig_types[460]
#define SWIGTYPE_p_mtsMatrixT_long_t swig_types[461]
#define SWIGTYPE_p_mtsMatrixT_short_t swig_types[462]
#define SWIGTYPE_p_mtsMatrixT_unsigned_char_t swig_types[463]
#define SWIGTYPE_p_mtsMatrixT_unsigned_int_t swig_types[464]
#define SWIGTYPE_p_mtsMatrixT_unsigned_long_t swig_types[465]
#define SWIGTYPE_p_mtsMatrixT_unsigned_short_t swig_types[466]
#define SWIGTYPE_p_mtsRequiredType swig_types[467]
#define SWIGTYPE_p_mtsStateIndex swig_types[468]
#define SWIGTYPE_p_mtsTask swig_types[469]
#define SWIGTYPE_p_mtsTaskContinuous swig_types[470]
#define SWIGTYPE_p_mtsTaskContinuousConstructorArg swig_types[471]
#define SWIGTYPE_p_mtsTaskFromSignal swig_types[472]
#define SWIGTYPE_p_mtsTaskMain swig_types[473]
#define SWIGTYPE_p_mtsTaskPeriodic swig_types[474]
#define SWIGTYPE_p_mtsTaskPeriodicConstructorArg swig_types[475]
#define SWIGTYPE_p_mtsVectorT_bool_t swig_types[476]
#define SWIGTYPE_p_mtsVectorT_char_t swig_types[477]
#define SWIGTYPE_p_mtsVectorT_double_t swig_types[478]
#define SWIGTYPE_p_mtsVectorT_float_t swig_types[479]
#define SWIGTYPE_p_mtsVectorT_int_t swig_types[480]
#define SWIGTYPE_p_mtsVectorT_long_t swig_types[481]
#define SWIGTYPE_p_mtsVectorT_short_t swig_types[482]
#define SWIGTYPE_p_mtsVectorT_std__string_t swig_types[483]
#define SWIGTYPE_p_mtsVectorT_unsigned_char_t swig_types[484]
#define SWIGTYPE_p_mtsVectorT_unsigned_int_t swig_types[485]
#define SWIGTYPE_p_mtsVectorT_unsigned_long_t swig_types[486]
#define SWIGTYPE_p_mtsVectorT_unsigned_short_t swig_types[487]
#define SWIGTYPE_p_ndimension_type swig_types[488]
#define SWIGTYPE_p_nindex_type swig_types[489]
#define SWIGTYPE_p_nsize_type swig_types[490]
#define SWIGTYPE_p_nstride_type swig_types[491]
#define SWIGTYPE_p_off_type swig_types[492]
#define SWIGTYPE_p_openmode swig_types[493]
#define SWIGTYPE_p_osaSerialPort swig_types[494]
#define SWIGTYPE_p_osaTimeServer swig_types[495]
#define SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo swig_types[496]
#define SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat swig_types[497]
#define SWIGTYPE_p_p_svlVideoIO__Compression swig_types[498]
#define SWIGTYPE_p_p_void swig_types[499]
#define SWIGTYPE_p_pos_type swig_types[500]
#define SWIGTYPE_p_ptrdiff_t swig_types[501]
#define SWIGTYPE_p_seekdir swig_types[502]
#define SWIGTYPE_p_short swig_types[503]
#define SWIGTYPE_p_size_t swig_types[504]
#define SWIGTYPE_p_size_type swig_types[505]
#define SWIGTYPE_p_state_type swig_types[506]
#define SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t swig_types[507]
#define SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t swig_types[508]
#define SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t swig_types[509]
#define SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t swig_types[510]
#define SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t swig_types[511]
#define SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t swig_types[512]
#define SWIGTYPE_p_std__invalid_argument swig_types[513]
#define SWIGTYPE_p_std__ios_base swig_types[514]
#define SWIGTYPE_p_std__locale swig_types[515]
#define SWIGTYPE_p_std__string swig_types[516]
#define SWIGTYPE_p_std__vectorT_char_std__allocatorT_char_t_t swig_types[517]
#define SWIGTYPE_p_std__vectorT_double_std__allocatorT_double_t_t swig_types[518]
#define SWIGTYPE_p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t swig_types[519]
#define SWIGTYPE_p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t swig_types[520]
#define SWIGTYPE_p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t swig_types[521]
#define SWIGTYPE_p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t swig_types[522]
#define SWIGTYPE_p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t swig_types[523]
#define SWIGTYPE_p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t swig_types[524]
#define SWIGTYPE_p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t swig_types[525]
#define SWIGTYPE_p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t swig_types[526]
#define SWIGTYPE_p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t swig_types[527]
#define SWIGTYPE_p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t swig_types[528]
#define SWIGTYPE_p_std__vectorT_std__string_std__allocatorT_std__string_t_t swig_types[529]
#define SWIGTYPE_p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t swig_types[530]
#define SWIGTYPE_p_std__vectorT_vct3_std__allocatorT_vct3_t_t swig_types[531]
#define SWIGTYPE_p_streamoff swig_types[532]
#define SWIGTYPE_p_streampos swig_types[533]
#define SWIGTYPE_p_streamsize swig_types[534]
#define SWIGTYPE_p_stride_type swig_types[535]
#define SWIGTYPE_p_svlBufferSample swig_types[536]
#define SWIGTYPE_p_svlCameraGeometry swig_types[537]
#define SWIGTYPE_p_svlFilterBase swig_types[538]
#define SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV swig_types[539]
#define SWIGTYPE_p_svlFilterImageChannelSwapper swig_types[540]
#define SWIGTYPE_p_svlFilterImageFileWriter swig_types[541]
#define SWIGTYPE_p_svlFilterImageRectifier swig_types[542]
#define SWIGTYPE_p_svlFilterImageResizer swig_types[543]
#define SWIGTYPE_p_svlFilterImageWindow swig_types[544]
#define SWIGTYPE_p_svlFilterInput swig_types[545]
#define SWIGTYPE_p_svlFilterOutput swig_types[546]
#define SWIGTYPE_p_svlFilterSourceBase swig_types[547]
#define SWIGTYPE_p_svlFilterSourceBuffer swig_types[548]
#define SWIGTYPE_p_svlFilterSourceVideoCapture swig_types[549]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__DeviceInfo swig_types[550]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger swig_types[551]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat swig_types[552]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties swig_types[553]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__PatternType swig_types[554]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__PixelType swig_types[555]
#define SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__PlatformType swig_types[556]
#define SWIGTYPE_p_svlFilterSourceVideoFile swig_types[557]
#define SWIGTYPE_p_svlFilterVideoFileWriter swig_types[558]
#define SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals swig_types[559]
#define SWIGTYPE_p_svlImageProcessingHelper__EllipseFitterInternals swig_types[560]
#define SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals swig_types[561]
#define SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals swig_types[562]
#define SWIGTYPE_p_svlImageProcessingInternals swig_types[563]
#define SWIGTYPE_p_svlImageProcessing__Internals swig_types[564]
#define SWIGTYPE_p_svlImageRGB swig_types[565]
#define SWIGTYPE_p_svlPixelType swig_types[566]
#define SWIGTYPE_p_svlProcInfo swig_types[567]
#define SWIGTYPE_p_svlRect swig_types[568]
#define SWIGTYPE_p_svlSample swig_types[569]
#define SWIGTYPE_p_svlSampleBlobs swig_types[570]
#define SWIGTYPE_p_svlSampleCameraGeometry swig_types[571]
#define SWIGTYPE_p_svlSampleImage swig_types[572]
#define SWIGTYPE_p_svlSampleImage3DMap swig_types[573]
#define SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t swig_types[574]
#define SWIGTYPE_p_svlSampleImageMono32 swig_types[575]
#define SWIGTYPE_p_svlSampleImageMono32Stereo swig_types[576]
#define SWIGTYPE_p_svlSampleImageMono8 swig_types[577]
#define SWIGTYPE_p_svlSampleImageMono8Stereo swig_types[578]
#define SWIGTYPE_p_svlSampleMatrix swig_types[579]
#define SWIGTYPE_p_svlSampleMatrixFloat swig_types[580]
#define SWIGTYPE_p_svlStreamManager swig_types[581]
#define SWIGTYPE_p_svlStreamType swig_types[582]
#define SWIGTYPE_p_svlVidCapSrcBase swig_types[583]
#define SWIGTYPE_p_svlVidCapSrcDialogThread swig_types[584]
#define SWIGTYPE_p_svlVideoCodecCVI swig_types[585]
#define SWIGTYPE_p_svlVideoIO__Compression swig_types[586]
#define SWIGTYPE_p_svlWindowEventHandlerBase swig_types[587]
#define SWIGTYPE_p_swig__SwigPyIterator swig_types[588]
#define SWIGTYPE_p_traits_type swig_types[589]
#define SWIGTYPE_p_unsigned_char swig_types[590]
#define SWIGTYPE_p_unsigned_int swig_types[591]
#define SWIGTYPE_p_unsigned_long swig_types[592]
#define SWIGTYPE_p_unsigned_long_long swig_types[593]
#define SWIGTYPE_p_unsigned_short swig_types[594]
#define SWIGTYPE_p_value_type swig_types[595]
#define SWIGTYPE_p_vct3x3 swig_types[596]
#define SWIGTYPE_p_vctAngleRotation2 swig_types[597]
#define SWIGTYPE_p_vctAxisAngleRotation3T_double_t swig_types[598]
#define SWIGTYPE_p_vctAxisAngleRotation3T_float_t swig_types[599]
#define SWIGTYPE_p_vctBarycentricVectorT_double_1_t swig_types[600]
#define SWIGTYPE_p_vctBarycentricVectorT_double_2_t swig_types[601]
#define SWIGTYPE_p_vctBarycentricVectorT_double_3_t swig_types[602]
#define SWIGTYPE_p_vctBarycentricVectorT_double_4_t swig_types[603]
#define SWIGTYPE_p_vctDynamicMatrixT_double_t swig_types[604]
#define SWIGTYPE_p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t swig_types[605]
#define SWIGTYPE_p_vctFrame4x4T_double_VCT_ROW_MAJOR_t swig_types[606]
#define SWIGTYPE_p_vctFrame4x4T_float_VCT_ROW_MAJOR_t swig_types[607]
#define SWIGTYPE_p_vctFrameBaseT_vctMatrixRotation2T_double_t_t swig_types[608]
#define SWIGTYPE_p_vctFrameBaseT_vctMatrixRotation2T_float_t_t swig_types[609]
#define SWIGTYPE_p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t swig_types[610]
#define SWIGTYPE_p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t swig_types[611]
#define SWIGTYPE_p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t swig_types[612]
#define SWIGTYPE_p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t swig_types[613]
#define SWIGTYPE_p_vctMatrixRotation2T_double_t swig_types[614]
#define SWIGTYPE_p_vctMatrixRotation2T_float_t swig_types[615]
#define SWIGTYPE_p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t swig_types[616]
#define SWIGTYPE_p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t swig_types[617]
#define SWIGTYPE_p_vctQuaternionRotation3T_double_t swig_types[618]
#define SWIGTYPE_p_vctQuaternionRotation3T_float_t swig_types[619]
#define SWIGTYPE_p_vctQuaternionT_double_t swig_types[620]
#define SWIGTYPE_p_vctQuaternionT_float_t swig_types[621]
#define SWIGTYPE_p_vctRodriguezRotation3T_double_t swig_types[622]
#define SWIGTYPE_p_vctRodriguezRotation3T_float_t swig_types[623]
#define SWIGTYPE_p_void swig_types[624]
static swig_type_info *swig_types[626];
static swig_module_info swig_module = {swig_types, 625, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#if (PY_VERSION_HEX <= 0x02000000)
# if !defined(SWIG_PYTHON_CLASSIC)
#  error "This python version requires swig to be run with the '-classic' option"
# endif
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodern' option"
#endif
#if (PY_VERSION_HEX <= 0x02020000)
# error "This python version requires swig to be run with the '-nomodernargs' option"
#endif

/*-----------------------------------------------
              @(target):= _cisstStereoVisionPython.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__cisstStereoVisionPython

#else
#  define SWIG_init    init_cisstStereoVisionPython

#endif
#define SWIG_name    "_cisstStereoVisionPython"

#define SWIGVERSION 0x020011 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      Py_XINCREF(_obj);      
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        Py_XINCREF(_obj);
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      Py_XDECREF(_obj);
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


#include <string>


#include <iostream>

#if PY_VERSION_HEX >= 0x03020000
# define SWIGPY_SLICE_ARG(obj) ((PyObject*) (obj))
#else
# define SWIGPY_SLICE_ARG(obj) ((PySliceObject*) (obj))
#endif


#include <stdexcept>


#if defined(__GNUC__)
#  if __GNUC__ == 2 && __GNUC_MINOR <= 96
#     define SWIG_STD_NOMODERN_STL
#  endif
#endif


#include <string>
#include <stdexcept>
#include <stddef.h>


  #include <stddef.h>


namespace swig {
  struct stop_iteration {
  };

  struct SwigPyIterator {
  private:
    SwigPtr_PyObject _seq;

  protected:
    SwigPyIterator(PyObject *seq) : _seq(seq)
    {
    }
      
  public:
    virtual ~SwigPyIterator() {}

    // Access iterator method, required by Python
    virtual PyObject *value() const = 0;

    // Forward iterator method, required by Python
    virtual SwigPyIterator *incr(size_t n = 1) = 0;
    
    // Backward iterator method, very common in C++, but not required in Python
    virtual SwigPyIterator *decr(size_t /*n*/ = 1)
    {
      throw stop_iteration();
    }

    // Random access iterator methods, but not required in Python
    virtual ptrdiff_t distance(const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }

    virtual bool equal (const SwigPyIterator &/*x*/) const
    {
      throw std::invalid_argument("operation not supported");
    }
    
    // C++ common/needed methods
    virtual SwigPyIterator *copy() const = 0;

    PyObject *next()     
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      PyObject *obj = value();
      incr();       
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads
      return obj;     
    }

    /* Make an alias for Python 3.x */
    PyObject *__next__()
    {
      return next();
    }

    PyObject *previous()
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK; // disable threads       
      decr();
      PyObject *obj = value();
      SWIG_PYTHON_THREAD_END_BLOCK; // re-enable threads       
      return obj;
    }

    SwigPyIterator *advance(ptrdiff_t n)
    {
      return  (n > 0) ?  incr(n) : decr(-n);
    }
      
    bool operator == (const SwigPyIterator& x)  const
    {
      return equal(x);
    }
      
    bool operator != (const SwigPyIterator& x) const
    {
      return ! operator==(x);
    }
      
    SwigPyIterator& operator += (ptrdiff_t n)
    {
      return *advance(n);
    }

    SwigPyIterator& operator -= (ptrdiff_t n)
    {
      return *advance(-n);
    }
      
    SwigPyIterator* operator + (ptrdiff_t n) const
    {
      return copy()->advance(n);
    }

    SwigPyIterator* operator - (ptrdiff_t n) const
    {
      return copy()->advance(-n);
    }
      
    ptrdiff_t operator - (const SwigPyIterator& x) const
    {
      return x.distance(*this);
    }
      
    static swig_type_info* descriptor() {
      static int init = 0;
      static swig_type_info* desc = 0;
      if (!init) {
	desc = SWIG_TypeQuery("swig::SwigPyIterator *");
	init = 1;
      }	
      return desc;
    }    
  };

#if defined(SWIGPYTHON_BUILTIN)
  inline PyObject* make_output_iterator_builtin (PyObject *pyself)
  {
    Py_INCREF(pyself);
    return pyself;
  }
#endif
}


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
  } else if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


#include <float.h>


#include <math.h>


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
#if PY_VERSION_HEX >= 0x03000000
      {
        long v = PyLong_AsLong(obj);
        if (!PyErr_Occurred()) {
          if (v < 0) {
            return SWIG_OverflowError;
          }
        } else {
          PyErr_Clear();
        }
      }
#endif
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_size_t (PyObject * obj, size_t *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< size_t >(v);
  return res;
}


  #define SWIG_From_long   PyLong_FromLong 


SWIGINTERNINLINE PyObject *
SWIG_From_ptrdiff_t  (ptrdiff_t value)
{    
  return SWIG_From_long  (static_cast< long >(value));
}


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERNINLINE int
SWIG_AsVal_ptrdiff_t (PyObject * obj, ptrdiff_t *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, val ? &v : 0);
  if (SWIG_IsOK(res) && val) *val = static_cast< ptrdiff_t >(v);
  return res;
}


#include <stdexcept>


#include <algorithm>


#include <vector>


#include <utility>


#include <map>
#include <algorithm>
#include <stdexcept>


#ifndef SWIG_STD_NOMODERN_STL
# include <ios>
#else
# include <streambuf.h>
#endif


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLong(value) : PyLong_FromLong(static_cast< long >(value)); 
}


SWIGINTERNINLINE PyObject *
SWIG_From_size_t  (size_t value)
{    
  return SWIG_From_unsigned_SS_long  (static_cast< unsigned long >(value));
}


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERNINLINE PyObject *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  if (carray) {
    if (size > INT_MAX) {
      swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
      return pchar_descriptor ? 
	SWIG_InternalNewPointerObj(const_cast< char * >(carray), pchar_descriptor, 0) : SWIG_Py_Void();
    } else {
#if PY_VERSION_HEX >= 0x03000000
      return PyUnicode_FromStringAndSize(carray, static_cast< int >(size));
#else
      return PyString_FromStringAndSize(carray, static_cast< int >(size));
#endif
    }
  } else {
    return SWIG_Py_Void();
  }
}


SWIGINTERNINLINE PyObject *
SWIG_From_char  (char c) 
{ 
  return SWIG_FromCharPtrAndSize(&c,1);
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
  if (PyUnicode_Check(obj))
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
#if PY_VERSION_HEX>=0x03000000
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    PyBytes_AsStringAndSize(obj, &cstr, &len);
    if(alloc) *alloc = SWIG_NEWOBJ;
#else
    PyString_AsStringAndSize(obj, &cstr, &len);
#endif
    if (cptr) {
      if (alloc) {
	/* 
	   In python the user should not be able to modify the inner
	   string representation. To warranty that, if you define
	   SWIG_PYTHON_SAFE_CSTRINGS, a new/copy of the python string
	   buffer is always returned.

	   The default behavior is just to return the pointer value,
	   so, be careful.
	*/ 
#if defined(SWIG_PYTHON_SAFE_CSTRINGS)
	if (*alloc != SWIG_OLDOBJ) 
#else
	if (*alloc == SWIG_NEWOBJ) 
#endif
	  {
	    *cptr = reinterpret_cast< char* >(memcpy((new char[len + 1]), cstr, sizeof(char)*(len + 1)));
	    *alloc = SWIG_NEWOBJ;
	  }
	else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
        #if PY_VERSION_HEX>=0x03000000
        assert(0); /* Should never reach here in Python 3 */
        #endif
	*cptr = SWIG_Python_str_AsChar(obj);
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000
    Py_XDECREF(obj);
#endif
    return SWIG_OK;
  } else {
    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsCharArray(PyObject * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    if ((csize == size + 1) && cptr && !(cptr[csize-1])) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_char (PyObject * obj, char *val)
{    
  int res = SWIG_AsCharArray(obj, val, 1);
  if (!SWIG_IsOK(res)) {
    long v;
    res = SWIG_AddCast(SWIG_AsVal_long (obj, &v));
    if (SWIG_IsOK(res)) {
      if ((CHAR_MIN <= v) && (v <= CHAR_MAX)) {
	if (val) *val = static_cast< char >(v);
      } else {
	res = SWIG_OverflowError;
      }
    }
  }
  return res;
}


#ifndef SWIG_STD_NOMODERN_STL
#include <streambuf>
#else
#include <streambuf.h>
#endif





#include <iostream>


SWIGINTERN int
SWIG_AsVal_short (PyObject * obj, short *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < SHRT_MIN || v > SHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_short (PyObject * obj, unsigned short *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > USHRT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned short >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long_SS_long (PyObject *obj, unsigned long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    unsigned long long v = PyLong_AsUnsignedLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  } else {
    unsigned long v;
    res = SWIG_AsVal_unsigned_SS_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, mant_max)) {
      if (val) *val = (unsigned long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}

SWIGINTERN std::basic_ostream< char,std::char_traits< char > > &std_basic_ostream_Sl_char_Sg__operator_Sl__Sl___SWIG_17(std::basic_ostream< char > *self,std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &s){
	  *self << s;
	  return *self;
	}

namespace swig {  
  template <class Type>
  struct noconst_traits {
    typedef Type noconst_type;
  };

  template <class Type>
  struct noconst_traits<const Type> {
    typedef Type noconst_type;
  };

  /*
    type categories
  */
  struct pointer_category { };  
  struct value_category { };

  /*
    General traits that provides type_name and type_info
  */
  template <class Type> struct traits { };

  template <class Type>
  inline const char* type_name() {
    return traits<typename noconst_traits<Type >::noconst_type >::type_name();
  }

  template <class Type> 
  struct traits_info {
    static swig_type_info *type_query(std::string name) {
      name += " *";
      return SWIG_TypeQuery(name.c_str());
    }    
    static swig_type_info *type_info() {
      static swig_type_info *info = type_query(type_name<Type>());
      return info;
    }
  };

  template <class Type>
  inline swig_type_info *type_info() {
    return traits_info<Type>::type_info();
  }

  /*
    Partial specialization for pointers
  */
  template <class Type> struct traits <Type *> {
    typedef pointer_category category;
    static std::string make_ptr_name(const char* name) {
      std::string ptrname = name;
      ptrname += " *";
      return ptrname;
    }    
    static const char* type_name() {
      static std::string name = make_ptr_name(swig::type_name<Type>());
      return name.c_str();
    }
  };

  template <class Type, class Category> 
  struct traits_as { };
 
  template <class Type, class Category> 
  struct traits_check { };

}


namespace swig {  
  /*
    Traits that provides the from method
  */
  template <class Type> struct traits_from_ptr {
    static PyObject *from(Type *val, int owner = 0) {
      return SWIG_InternalNewPointerObj(val, type_info<Type>(), owner);
    }
  };

  template <class Type> struct traits_from {
    static PyObject *from(const Type& val) {
      return traits_from_ptr<Type>::from(new Type(val), 1);
    }
  };

  template <class Type> struct traits_from<Type *> {
    static PyObject *from(Type* val) {
      return traits_from_ptr<Type>::from(val, 0);
    }
  };

  template <class Type> struct traits_from<const Type *> {
    static PyObject *from(const Type* val) {
      return traits_from_ptr<Type>::from(const_cast<Type*>(val), 0);
    }
  };


  template <class Type>
  inline PyObject *from(const Type& val) {
    return traits_from<Type>::from(val);
  }

  template <class Type>
  inline PyObject *from_ptr(Type* val, int owner) {
    return traits_from_ptr<Type>::from(val, owner);
  }

  /*
    Traits that provides the asval/as/check method
  */
  template <class Type>
  struct traits_asptr {   
    static int asptr(PyObject *obj, Type **val) {
      Type *p;
      int res = SWIG_ConvertPtr(obj, (void**)&p, type_info<Type>(), 0);
      if (SWIG_IsOK(res)) {
	if (val) *val = p;
      }
      return res;
    }
  }; 

  template <class Type>
  inline int asptr(PyObject *obj, Type **vptr) {
    return traits_asptr<Type>::asptr(obj, vptr);
  }

  template <class Type> 
  struct traits_asval {
    static int asval(PyObject *obj, Type *val) {
      if (val) {
	Type *p = 0;
	int res = traits_asptr<Type>::asptr(obj, &p);
	if (!SWIG_IsOK(res)) return res;	
	if (p) {
	  typedef typename noconst_traits<Type>::noconst_type noconst_type;
	  *(const_cast<noconst_type*>(val)) = *p;
	  if (SWIG_IsNewObj(res)){
	    delete p;
	    res = SWIG_DelNewMask(res);
	  }
	  return res;
	} else {
	  return SWIG_ERROR;
	}
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };

  template <class Type> struct traits_asval<Type*> {
    static int asval(PyObject *obj, Type **val) {
      if (val) {
        typedef typename noconst_traits<Type>::noconst_type noconst_type;
        noconst_type *p = 0;
        int res = traits_asptr<noconst_type>::asptr(obj,  &p);
        if (SWIG_IsOK(res)) {
          *(const_cast<noconst_type**>(val)) = p;
	}
	return res;
      } else {
	return traits_asptr<Type>::asptr(obj, (Type **)(0));
      }
    }
  };
  
  template <class Type>
  inline int asval(PyObject *obj, Type *val) {
    return traits_asval<Type>::asval(obj, val);
  }

  template <class Type> 
  struct traits_as<Type, value_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type v;
      int res = asval(obj, &v);
      if (!obj || !SWIG_IsOK(res)) {
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
      }
      return v;
    }
  };

  template <class Type> 
  struct traits_as<Type, pointer_category> {
    static Type as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res) && v) {
	if (SWIG_IsNewObj(res)) {
	  Type r(*v);
	  delete v;
	  return r;
	} else {
	  return *v;
	}
      } else {
	// Uninitialized return value, no Type() constructor required.
	static Type *v_def = (Type*) malloc(sizeof(Type));
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	memset(v_def,0,sizeof(Type));
	return *v_def;
      }
    }
  };

  template <class Type> 
  struct traits_as<Type*, pointer_category> {
    static Type* as(PyObject *obj, bool throw_error) {
      Type *v = 0;      
      int res = (obj ? traits_asptr<Type>::asptr(obj, &v) : SWIG_ERROR);
      if (SWIG_IsOK(res)) {
	return v;
      } else {
	if (!PyErr_Occurred()) {
	  SWIG_Error(SWIG_TypeError,  swig::type_name<Type>());
	}
	if (throw_error) throw std::invalid_argument("bad type");
	return 0;
      }
    }
  };
    
  template <class Type>
  inline Type as(PyObject *obj, bool te = false) {
    return traits_as<Type, typename traits<Type>::category>::as(obj, te);
  }

  template <class Type> 
  struct traits_check<Type, value_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asval(obj, (Type *)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type> 
  struct traits_check<Type, pointer_category> {
    static bool check(PyObject *obj) {
      int res = obj ? asptr(obj, (Type **)(0)) : SWIG_ERROR;
      return SWIG_IsOK(res) ? true : false;
    }
  };

  template <class Type>
  inline bool check(PyObject *obj) {
    return traits_check<Type, typename traits<Type>::category>::check(obj);
  }
}


#if defined(__SUNPRO_CC) && defined(_RWSTD_VER)
#  if !defined(SWIG_NO_STD_NOITERATOR_TRAITS_STL)
#    define SWIG_STD_NOITERATOR_TRAITS_STL
#  endif
#endif

#if !defined(SWIG_STD_NOITERATOR_TRAITS_STL)
#include <iterator>
#else
namespace std {
  template <class Iterator>
  struct iterator_traits {
    typedef ptrdiff_t difference_type;
    typedef typename Iterator::value_type value_type;
  };

  template <class Iterator, class Category,class T, class Reference, class Pointer, class Distance>
  struct iterator_traits<__reverse_bi_iterator<Iterator,Category,T,Reference,Pointer,Distance> > {
    typedef Distance difference_type;
    typedef T value_type;
  };

  template <class T>
  struct iterator_traits<T*> {
    typedef T value_type;
    typedef ptrdiff_t difference_type;
  };

  template<typename _InputIterator>
  inline typename iterator_traits<_InputIterator>::difference_type
  distance(_InputIterator __first, _InputIterator __last)
  {
    typename iterator_traits<_InputIterator>::difference_type __n = 0;
    while (__first != __last) {
      ++__first; ++__n;
    }
    return __n;
  }
}
#endif


namespace swig {
  template<typename OutIterator>
  class SwigPyIterator_T :  public SwigPyIterator
  {
  public:
    typedef OutIterator out_iterator;
    typedef typename std::iterator_traits<out_iterator>::value_type value_type;    
    typedef SwigPyIterator_T<out_iterator> self_type;

    SwigPyIterator_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator(seq), current(curr)
    {
    }

    const out_iterator& get_current() const
    {
      return current;
    }

    
    bool equal (const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return (current == iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }
    
    ptrdiff_t distance(const SwigPyIterator &iter) const
    {
      const self_type *iters = dynamic_cast<const self_type *>(&iter);
      if (iters) {
	return std::distance(current, iters->get_current());
      } else {
	throw std::invalid_argument("bad iterator type");
      }
    }    
    
  protected:
    out_iterator current;
  };
  
  template <class ValueType>
  struct from_oper 
  {
    typedef const ValueType& argument_type;
    typedef PyObject *result_type;
    result_type operator()(argument_type v) const
    {
      return swig::from(v);
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorOpen_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;
    typedef SwigPyIteratorOpen_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorOpen_T(out_iterator curr, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq)
    {
    }
    
    PyObject *value() const {
      return from(static_cast<const value_type&>(*(base::current)));
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	++base::current;
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	--base::current;
      }
      return this;
    }
  };

  template<typename OutIterator, 
	   typename ValueType = typename std::iterator_traits<OutIterator>::value_type,
	   typename FromOper = from_oper<ValueType> >
  class SwigPyIteratorClosed_T :  public SwigPyIterator_T<OutIterator>
  {
  public:
    FromOper from;
    typedef OutIterator out_iterator;
    typedef ValueType value_type;
    typedef SwigPyIterator_T<out_iterator>  base;    
    typedef SwigPyIteratorClosed_T<OutIterator, ValueType, FromOper> self_type;
    
    SwigPyIteratorClosed_T(out_iterator curr, out_iterator first, out_iterator last, PyObject *seq)
      : SwigPyIterator_T<OutIterator>(curr, seq), begin(first), end(last)
    {
    }
    
    PyObject *value() const {
      if (base::current == end) {
	throw stop_iteration();
      } else {
	return from(static_cast<const value_type&>(*(base::current)));
      }
    }
    
    SwigPyIterator *copy() const
    {
      return new self_type(*this);
    }

    SwigPyIterator *incr(size_t n = 1)
    {
      while (n--) {
	if (base::current == end) {
	  throw stop_iteration();
	} else {
	  ++base::current;
	}
      }
      return this;
    }

    SwigPyIterator *decr(size_t n = 1)
    {
      while (n--) {
	if (base::current == begin) {
	  throw stop_iteration();
	} else {
	  --base::current;
	}
      }
      return this;
    }

  private:
    out_iterator begin;
    out_iterator end;
  };

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, const OutIter& begin,const OutIter& end, PyObject *seq = 0)
  {
    return new SwigPyIteratorClosed_T<OutIter>(current, begin, end, seq);
  }

  template<typename OutIter>
  inline SwigPyIterator*
  make_output_iterator(const OutIter& current, PyObject *seq = 0)
  {
    return new SwigPyIteratorOpen_T<OutIter>(current, seq);
  }

}


#include <functional>

namespace std {
  template <>
  struct less <PyObject *>: public binary_function<PyObject *, PyObject *, bool>
  {
    bool
    operator()(PyObject * v, PyObject *w) const
    { 
      bool res;
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      res = PyObject_RichCompareBool(v, w, Py_LT) ? true : false;
      /* This may fall into a case of inconsistent
               eg. ObjA > ObjX > ObjB
               but ObjA < ObjB
      */
      if( PyErr_Occurred() && PyErr_ExceptionMatches(PyExc_TypeError) )
      {
        /* Objects can't be compared, this mostly occurred in Python 3.0 */
        /* Compare their ptr directly for a workaround */
        res = (v < w);
        PyErr_Clear();
      }
      SWIG_PYTHON_THREAD_END_BLOCK;
      return res;
    }
  };

  template <>
  struct less <swig::SwigPtr_PyObject>: public binary_function<swig::SwigPtr_PyObject, swig::SwigPtr_PyObject, bool>
  {
    bool
    operator()(const swig::SwigPtr_PyObject& v, const swig::SwigPtr_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

  template <>
  struct less <swig::SwigVar_PyObject>: public binary_function<swig::SwigVar_PyObject, swig::SwigVar_PyObject, bool>
  {
    bool
    operator()(const swig::SwigVar_PyObject& v, const swig::SwigVar_PyObject& w) const
    {
      return std::less<PyObject *>()(v, w);
    }
  };

}

namespace swig {
  template <> struct traits<PyObject *> {
    typedef value_category category;
    static const char* type_name() { return "PyObject *"; }
  };  

  template <>  struct traits_asval<PyObject * > {   
    typedef PyObject * value_type;
    static int asval(PyObject *obj, value_type *val) {
      if (val) *val = obj;
      return SWIG_OK;
    }
  };

  template <> 
  struct traits_check<PyObject *, value_category> {
    static bool check(PyObject *) {
      return true;
    }
  };

  template <>  struct traits_from<PyObject *> {
    typedef PyObject * value_type;
    static PyObject *from(const value_type& val) {
      Py_XINCREF(val);
      return val;
    }
  };
  
}

namespace swig {
  template <class Difference>
  inline size_t
  check_index(Difference i, size_t size, bool insert = false) {
    if ( i < 0 ) {
      if ((size_t) (-i) <= size)
	return (size_t) (i + size);
    } else if ( (size_t) i < size ) {
      return (size_t) i;
    } else if (insert && ((size_t) i == size)) {
      return size;
    }
    throw std::out_of_range("index out of range");
  }

  template <class Difference>
  void
  slice_adjust(Difference i, Difference j, Py_ssize_t step, size_t size, Difference &ii, Difference &jj, bool insert = false) {
    if (step == 0) {
      throw std::invalid_argument("slice step cannot be zero");
    } else if (step > 0) {
      // Required range: 0 <= i < size, 0 <= j < size
      if (i < 0) {
        ii = 0;
      } else if (i < (Difference)size) {
        ii = i;
      } else if (insert && (i >= (Difference)size)) {
        ii = (Difference)size;
      }
      if ( j < 0 ) {
        jj = 0;
      } else {
        jj = (j < (Difference)size) ? j : (Difference)size;
      }
    } else {
      // Required range: -1 <= i < size-1, -1 <= j < size-1
      if (i < -1) {
        ii = -1;
      } else if (i < (Difference) size) {
        ii = i;
      } else if (i >= (Difference)(size-1)) {
        ii = (Difference)(size-1);
      }
      if (j < -1) {
        jj = -1;
      } else {
        jj = (j < (Difference)size ) ? j : (Difference)(size-1);
      }
    }
  }

  template <class Sequence, class Difference>
  inline typename Sequence::iterator
  getpos(Sequence* self, Difference i)  {
    typename Sequence::iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline typename Sequence::const_iterator
  cgetpos(const Sequence* self, Difference i)  {
    typename Sequence::const_iterator pos = self->begin();
    std::advance(pos, check_index(i,self->size()));
    return pos;
  }

  template <class Sequence, class Difference>
  inline Sequence*
  getslice(const Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj);

    if (step > 0) {
      typename Sequence::const_iterator sb = self->begin();
      typename Sequence::const_iterator se = self->begin();
      std::advance(sb,ii);
      std::advance(se,jj);
      if (step == 1) {
        return new Sequence(sb, se);
      } else {
        Sequence *sequence = new Sequence();
        typename Sequence::const_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<step && it!=se; ++c)
            it++;
        }
        return sequence;
      } 
    } else {
      Sequence *sequence = new Sequence();
      if (ii > jj) {
        typename Sequence::const_reverse_iterator sb = self->rbegin();
        typename Sequence::const_reverse_iterator se = self->rbegin();
        std::advance(sb,size-ii-1);
        std::advance(se,size-jj-1);
        typename Sequence::const_reverse_iterator it = sb;
        while (it!=se) {
          sequence->push_back(*it);
          for (Py_ssize_t c=0; c<-step && it!=se; ++c)
            it++;
        }
      }
      return sequence;
    }
  }

  template <class Sequence, class Difference, class InputSeq>
  inline void
  setslice(Sequence* self, Difference i, Difference j, Py_ssize_t step, const InputSeq& is = InputSeq()) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj < ii)
        jj = ii;
      if (step == 1) {
        size_t ssize = jj - ii;
        if (ssize <= is.size()) {
          // expanding/staying the same size
          typename Sequence::iterator sb = self->begin();
          typename InputSeq::const_iterator isit = is.begin();
          std::advance(sb,ii);
          std::advance(isit, jj - ii);
          self->insert(std::copy(is.begin(), isit, sb), isit, is.end());
        } else {
          // shrinking
          typename Sequence::iterator sb = self->begin();
          typename Sequence::iterator se = self->begin();
          std::advance(sb,ii);
          std::advance(se,jj);
          self->erase(sb,se);
          sb = self->begin();
          std::advance(sb,ii);
          self->insert(sb, is.begin(), is.end());
        }
      } else {
        size_t replacecount = (jj - ii + step - 1) / step;
        if (is.size() != replacecount) {
          char msg[1024];
          sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
          throw std::invalid_argument(msg);
        }
        typename Sequence::const_iterator isit = is.begin();
        typename Sequence::iterator it = self->begin();
        std::advance(it,ii);
        for (size_t rc=0; rc<replacecount; ++rc) {
          *it++ = *isit++;
          for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
            it++;
        }
      }
    } else {
      if (jj > ii)
        jj = ii;
      size_t replacecount = (ii - jj - step - 1) / -step;
      if (is.size() != replacecount) {
        char msg[1024];
        sprintf(msg, "attempt to assign sequence of size %lu to extended slice of size %lu", (unsigned long)is.size(), (unsigned long)replacecount);
        throw std::invalid_argument(msg);
      }
      typename Sequence::const_iterator isit = is.begin();
      typename Sequence::reverse_iterator it = self->rbegin();
      std::advance(it,size-ii-1);
      for (size_t rc=0; rc<replacecount; ++rc) {
        *it++ = *isit++;
        for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
          it++;
      }
    }
  }

  template <class Sequence, class Difference>
  inline void
  delslice(Sequence* self, Difference i, Difference j, Py_ssize_t step) {
    typename Sequence::size_type size = self->size();
    Difference ii = 0;
    Difference jj = 0;
    swig::slice_adjust(i, j, step, size, ii, jj, true);
    if (step > 0) {
      if (jj > ii) {
        typename Sequence::iterator sb = self->begin();
        std::advance(sb,ii);
        if (step == 1) {
          typename Sequence::iterator se = self->begin();
          std::advance(se,jj);
          self->erase(sb,se);
        } else {
          typename Sequence::iterator it = sb;
          size_t delcount = (jj - ii + step - 1) / step;
          while (delcount) {
            it = self->erase(it);
            for (Py_ssize_t c=0; c<(step-1) && it != self->end(); ++c)
              it++;
            delcount--;
          }
        }
      }
    } else {
      if (ii > jj) {
        typename Sequence::reverse_iterator sb = self->rbegin();
        std::advance(sb,size-ii-1);
        typename Sequence::reverse_iterator it = sb;
        size_t delcount = (ii - jj - step - 1) / -step;
        while (delcount) {
          it = typename Sequence::reverse_iterator(self->erase((++it).base()));
          for (Py_ssize_t c=0; c<(-step-1) && it != self->rend(); ++c)
            it++;
          delcount--;
        }
      }
    }
  }
}


namespace swig
{
  template <class T>
  struct SwigPySequence_Ref
  {
    SwigPySequence_Ref(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }
    
    operator T () const
    {
      swig::SwigVar_PyObject item = PySequence_GetItem(_seq, _index);
      try {
	return swig::as<T>(item, true);
      } catch (std::exception& e) {
	char msg[1024];
	sprintf(msg, "in sequence element %d ", _index);
	if (!PyErr_Occurred()) {
	  ::SWIG_Error(SWIG_TypeError,  swig::type_name<T>());
	}
	SWIG_Python_AddErrorMsg(msg);
	SWIG_Python_AddErrorMsg(e.what());
	throw;
      }
    }

    SwigPySequence_Ref& operator=(const T& v)
    {
      PySequence_SetItem(_seq, _index, swig::from<T>(v));
      return *this;
    }

  private:
    PyObject* _seq;
    int _index;
  };

  template <class T>
  struct SwigPySequence_ArrowProxy
  {
    SwigPySequence_ArrowProxy(const T& x): m_value(x) {}
    const T* operator->() const { return &m_value; }
    operator const T*() const { return &m_value; }
    T m_value;
  };

  template <class T, class Reference >
  struct SwigPySequence_InputIterator
  {
    typedef SwigPySequence_InputIterator<T, Reference > self;

    typedef std::random_access_iterator_tag iterator_category;
    typedef Reference reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;

    SwigPySequence_InputIterator()
    {
    }

    SwigPySequence_InputIterator(PyObject* seq, int index)
      : _seq(seq), _index(index)
    {
    }

    reference operator*() const
    {
      return reference(_seq, _index);
    }

    SwigPySequence_ArrowProxy<T>
    operator->() const {
      return SwigPySequence_ArrowProxy<T>(operator*());
    }

    bool operator==(const self& ri) const
    {
      return (_index == ri._index) && (_seq == ri._seq);
    }

    bool operator!=(const self& ri) const
    {
      return !(operator==(ri));
    }

    self& operator ++ ()
    {
      ++_index;
      return *this;
    }

    self& operator -- ()
    {
      --_index;
      return *this;
    }

    self& operator += (difference_type n)
    {
      _index += n;
      return *this;
    }

    self operator +(difference_type n) const
    {
      return self(_seq, _index + n);
    }

    self& operator -= (difference_type n)
    {
      _index -= n;
      return *this;
    }

    self operator -(difference_type n) const
    {
      return self(_seq, _index - n);
    }

    difference_type operator - (const self& ri) const
    {
      return _index - ri._index;
    }

    bool operator < (const self& ri) const
    {
      return _index < ri._index;
    }

    reference
    operator[](difference_type n) const
    {
      return reference(_seq, _index + n);
    }

  private:
    PyObject* _seq;
    difference_type _index;
  };

  template <class T>
  struct SwigPySequence_Cont
  {
    typedef SwigPySequence_Ref<T> reference;
    typedef const SwigPySequence_Ref<T> const_reference;
    typedef T value_type;
    typedef T* pointer;
    typedef int difference_type;
    typedef int size_type;
    typedef const pointer const_pointer;
    typedef SwigPySequence_InputIterator<T, reference> iterator;
    typedef SwigPySequence_InputIterator<T, const_reference> const_iterator;

    SwigPySequence_Cont(PyObject* seq) : _seq(0)
    {
      if (!PySequence_Check(seq)) {
	throw std::invalid_argument("a sequence is expected");
      }
      _seq = seq;
      Py_INCREF(_seq);
    }

    ~SwigPySequence_Cont()
    {
      Py_XDECREF(_seq);
    }

    size_type size() const
    {
      return static_cast<size_type>(PySequence_Size(_seq));
    }

    bool empty() const
    {
      return size() == 0;
    }

    iterator begin()
    {
      return iterator(_seq, 0);
    }

    const_iterator begin() const
    {
      return const_iterator(_seq, 0);
    }

    iterator end()
    {
      return iterator(_seq, size());
    }

    const_iterator end() const
    {
      return const_iterator(_seq, size());
    }

    reference operator[](difference_type n)
    {
      return reference(_seq, n);
    }

    const_reference operator[](difference_type n)  const
    {
      return const_reference(_seq, n);
    }

    bool check(bool set_err = true) const
    {
      int s = size();
      for (int i = 0; i < s; ++i) {
	swig::SwigVar_PyObject item = PySequence_GetItem(_seq, i);
	if (!swig::check<value_type>(item)) {
	  if (set_err) {
	    char msg[1024];
	    sprintf(msg, "in sequence element %d", i);
	    SWIG_Error(SWIG_RuntimeError, msg);
	  }
	  return false;
	}
      }
      return true;
    }

  private:
    PyObject* _seq;
  };

}


#include <cisstStereoVision/svlPython.h>


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsPtr_std_string (PyObject * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_std_string  (const std::string& s)
{
  return SWIG_FromCharPtrAndSize(s.data(), s.size());
}

SWIGINTERN int svlVideoCodecCVI_ReadPython(svlVideoCodecCVI *self,svlSampleImage &image,unsigned int const videoch,bool const noresize){
       return self->Read(NULL, image, videoch, noresize);
   }



template <class __ValueType>
PyObject* convert_vctDynamicMatrixRef_to_PyObject(vctDynamicMatrixRef<__ValueType> matrix_in){

    /*****************************************************************************
    *   %typemap(out, optimal="1") vctDynamicMatrixRef
    *   Returning a vctDynamicMatrixRef
    *
    *   See the documentation ``Developer's Guide to Writing Typemaps'' for documentation on the logic behind
    *   this type map.
    *****************************************************************************/

    /*****************************************************************************
     CREATE A NEW PYARRAY aOBJECT
    *****************************************************************************/

    npy_intp *sizes = PyDimMem_NEW(2);
    sizes[0] = matrix_in.rows();
    sizes[1] = matrix_in.cols();
    int type = vctPythonType<__ValueType>();
    PyObject* result = PyArray_SimpleNew(2, sizes, type);

    /*****************************************************************************
     COPY THE DATA FROM THE vctDynamicMatrixRef TO THE PYARRAY
    *****************************************************************************/

    // Create a temporary vctDynamicMatrixRef container
    const npy_intp size0 = matrix_in.rows();
    const npy_intp size1 = matrix_in.cols();
    const npy_intp stride0 = size1;
    const npy_intp stride1 = 1;
    __ValueType * data = reinterpret_cast<__ValueType *>(PyArray_DATA(result));

    vctDynamicMatrixRef<__ValueType> tempContainer(size0, size1, stride0, stride1, data);

    // Copy the data from the vctDynamicMatrixRef to the temporary container
    tempContainer.Assign(matrix_in);

    return result;
}



/* Copied from http://www.swig.org/Doc1.1/HTML/Python.html#n11 */

static int PythonCallBack(void * imgdata, void *callbackdata)
{
   PyObject *func = 0, *arglist = 0;
   PyObject *result = 0;
   int    dres = 0;

   PyObject *pythonImage = 0;
   vctDynamicMatrixRef<unsigned char>* image = 0;
   image = static_cast<vctDynamicMatrixRef<unsigned char>*>(imgdata);
   //pythonImage = SWIG_NewPointerObj(SWIG_as_voidptr(image), SWIGTYPE_vctDynamicMatrixRef, SWIG_POINTER_NEW | 0 );
   pythonImage = convert_vctDynamicMatrixRef_to_PyObject(*image); //manual hack - should be using typemaps

   try{
	   func = (PyObject *) callbackdata;             // Get Python function

	   arglist = Py_BuildValue("(O)",pythonImage);             // Build argument list

	   //arglist = Py_BuildValue("i",1);

	   if(func && arglist){
		   result = PyEval_CallObject(func,arglist);     // Call Python
		   Py_DECREF(arglist);                           // Trash arglist
		   /*if (result) {                                 // If no errors, return double
			 dres = PyFloat_AsDouble(result);
		   }*/
		   Py_XDECREF(result);
		   return dres;
	   }else{
		   return -1;
	   }
   } catch (...){
	std::cout << "Unknown exception..." << std::endl << std::flush;
	return -1;
   }
}



   enum PlatformType {
        WinDirectShow   = 0,
        WinSVS          = 1,
        LinVideo4Linux2 = 2,
        LinLibDC1394    = 3,
        OpenCV          = 4,
        MatroxImaging   = 5,
        NumberOfPlatformTypes
    };

 typedef enum _PixelType {
        PixelRAW8    = 0,   //  8 bits per pixel
        PixelRAW16   = 1,   // 16 bits per pixel
        PixelRGB8    = 2,   // 24 bits per pixel
        PixelYUV444  = 3,   // 24 bits per pixel
        PixelYUV422  = 4,   // 16 bits per pixel
        PixelYUV411  = 5,   // 12 bits per pixel
        PixelMONO8   = 6,   //  8 bits per pixel
        PixelMONO16  = 7,   // 16 bits per pixel
        PixelUnknown = 8,
        PixelTypeCount
    } PixelType;

    typedef enum _PatternType {
        PatternRGGB    = 0,
        PatternGBRG    = 1,
        PatternGRBG    = 2,
        PatternBGGR    = 3,
        PatternUnknown = 4,
        PatternTypeCount
    } PatternType;




typedef svlFilterSourceVideoCapture::DeviceInfo DeviceInfo;
typedef svlFilterSourceVideoCapture::ImageFormat ImageFormat;
typedef svlFilterSourceVideoCapture::ExternalTrigger ExternalTrigger;
typedef svlFilterSourceVideoCapture::ImageProperties ImageProperties;


#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_delete_SwigPyIterator(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_SwigPyIterator",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_SwigPyIterator" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_value(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  PyObject *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_value",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_value" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try {
    result = (PyObject *)((swig::SwigPyIterator const *)arg1)->value();}  catch(swig::stop_iteration &_e) { { (void)_e;
      SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  }  resultobj = result; return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; size_t arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_incr",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_size_t(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_incr" "', argument " "2"" of type '" "size_t""'"); }
    arg2 = static_cast< size_t >(val2); try { result = (swig::SwigPyIterator *)(arg1)->incr(arg2);} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_incr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_incr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_incr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (swig::SwigPyIterator *)(arg1)->incr();} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_incr(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_SwigPyIterator_incr__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_SwigPyIterator_incr__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_incr'.\n"
  "  Possible C/C++ prototypes are:\n" "    swig::SwigPyIterator::incr(size_t)\n" "    swig::SwigPyIterator::incr()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; size_t arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_decr",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_size_t(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_decr" "', argument " "2"" of type '" "size_t""'"); }
    arg2 = static_cast< size_t >(val2); try { result = (swig::SwigPyIterator *)(arg1)->decr(arg2);} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_decr__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_decr",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_decr" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (swig::SwigPyIterator *)(arg1)->decr();} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_decr(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_SwigPyIterator_decr__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_SwigPyIterator_decr__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SwigPyIterator_decr'.\n"
  "  Possible C/C++ prototypes are:\n" "    swig::SwigPyIterator::decr(size_t)\n" "    swig::SwigPyIterator::decr()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_distance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; ptrdiff_t result;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_distance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_distance" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_distance" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2); try {
    result = ((swig::SwigPyIterator const *)arg1)->distance((swig::SwigPyIterator const &)*arg2);} 
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail; }
   resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_equal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_equal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_equal" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator_equal" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2); try {
    result = (bool)((swig::SwigPyIterator const *)arg1)->equal((swig::SwigPyIterator const &)*arg2);} 
  catch(std::invalid_argument &_e) {
    SWIG_Python_Raise(SWIG_NewPointerObj((new std::invalid_argument(static_cast< const std::invalid_argument& >(_e))),SWIGTYPE_p_std__invalid_argument,SWIG_POINTER_OWN), "std::invalid_argument", SWIGTYPE_p_std__invalid_argument); SWIG_fail; }
   resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_copy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  swig::SwigPyIterator *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_copy",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_copy" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->copy();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_next(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  PyObject *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_next",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_next" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (PyObject *)(arg1)->next();} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = result; return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___next__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  PyObject *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___next__",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___next__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (PyObject *)(arg1)->__next__();} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = result; return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_previous(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  PyObject *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_previous",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_previous" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); try { result = (PyObject *)(arg1)->previous();} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = result; return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator_advance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator_advance",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator_advance" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator_advance" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try { result = (swig::SwigPyIterator *)(arg1)->advance(arg2);} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___eq__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___eq__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___eq__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator ==((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___ne__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___ne__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___ne__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___ne__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = (bool)((swig::SwigPyIterator const *)arg1)->operator !=((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___iadd__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___iadd__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___iadd__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try { result = (swig::SwigPyIterator *) &(arg1)->operator +=(arg2);} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___isub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___isub__" "', argument " "1"" of type '" "swig::SwigPyIterator *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___isub__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try { result = (swig::SwigPyIterator *) &(arg1)->operator -=(arg2);} 
  catch(swig::stop_iteration &_e) { { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ; int res1 = 0 ; ptrdiff_t val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; swig::SwigPyIterator *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___add__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___add__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___add__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator +(arg2);}  catch(swig::stop_iteration &_e) {
    { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; ptrdiff_t arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; ptrdiff_t val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  swig::SwigPyIterator *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1); ecode2 = SWIG_AsVal_ptrdiff_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "ptrdiff_t""'"); }
    arg2 = static_cast< ptrdiff_t >(val2); try {
    result = (swig::SwigPyIterator *)((swig::SwigPyIterator const *)arg1)->operator -(arg2);}  catch(swig::stop_iteration &_e) {
    { (void)_e; SWIG_SetErrorObj(PyExc_StopIteration, SWIG_Py_Void()); SWIG_fail; }  } 
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_swig__SwigPyIterator, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___sub____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; swig::SwigPyIterator *arg1 = (swig::SwigPyIterator *) 0 ; swig::SwigPyIterator *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  ptrdiff_t result; if(!PyArg_UnpackTuple(args,(char *)"SwigPyIterator___sub__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_swig__SwigPyIterator, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwigPyIterator___sub__" "', argument " "1"" of type '" "swig::SwigPyIterator const *""'");  }
   arg1 = reinterpret_cast< swig::SwigPyIterator * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_swig__SwigPyIterator,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SwigPyIterator___sub__" "', argument " "2"" of type '" "swig::SwigPyIterator const &""'"); }
   arg2 = reinterpret_cast< swig::SwigPyIterator * >(argp2);
  result = ((swig::SwigPyIterator const *)arg1)->operator -((swig::SwigPyIterator const &)*arg2);
  resultobj = SWIG_From_ptrdiff_t(static_cast< ptrdiff_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwigPyIterator___sub__(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_1(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_swig__SwigPyIterator, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_ptrdiff_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_SwigPyIterator___sub____SWIG_0(self, args);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *SwigPyIterator_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_swig__SwigPyIterator, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_ios_base_boolalpha_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_boolalpha is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_boolalpha_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::boolalpha)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_dec_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_dec is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_dec_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::dec)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_fixed_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_fixed is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_fixed_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::fixed)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_hex_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_hex is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_hex_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::hex)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_internal_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_internal is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_internal_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::internal)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_left_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_left is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_left_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::left)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_oct_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_oct is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_oct_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::oct)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_right_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_right is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_right_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::right)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_scientific_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_scientific is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_scientific_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::scientific)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_showbase_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_showbase is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_showbase_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::showbase)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_showpoint_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_showpoint is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_showpoint_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::showpoint)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_showpos_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_showpos is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_showpos_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::showpos)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_skipws_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_skipws is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_skipws_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::skipws)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_unitbuf_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_unitbuf is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_unitbuf_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::unitbuf)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_uppercase_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_uppercase is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_uppercase_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::uppercase)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_adjustfield_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_adjustfield is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_adjustfield_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::adjustfield)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_basefield_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_basefield is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_basefield_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::basefield)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_floatfield_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_floatfield is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_floatfield_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::floatfield)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_badbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_badbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_badbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::badbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_eofbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_eofbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_eofbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::eofbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_failbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_failbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_failbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::failbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_goodbit_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_goodbit is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_goodbit_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::goodbit)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_app_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_app is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_app_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::app)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_ate_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_ate is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_ate_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::ate)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_binary_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_binary is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_binary_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::binary)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_ios_base_in_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_ios_base_in is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_ios_base_in_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::in)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_out_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_out is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_out_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::out)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_trunc_set(PyObject *) {
  SWIG_Error(SWIG_AttributeError,"Variable ios_base_trunc is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_trunc_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::trunc)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_beg_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_beg is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_beg_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::beg)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_cur_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_cur is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_cur_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::cur)); return pyobj; }
SWIGINTERN int Swig_var_ios_base_end_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable ios_base_end is read-only.");
  return 1; }
SWIGINTERN PyObject *Swig_var_ios_base_end_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_From_int(static_cast< int >(std::ios_base::end)); return pyobj; }
SWIGINTERN PyObject *_wrap_ios_base_register_callback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::event_callback arg2 = (std::ios_base::event_callback) 0 ;
  int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"ios_base_register_callback",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_register_callback" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_enum_std__ios_base__event_r_std__ios_base_int__void);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ios_base_register_callback" "', argument " "2"" of type '" "std::ios_base::event_callback""'");  }
     }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ios_base_register_callback" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); (arg1)->register_callback(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_flags__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::ios_base::fmtflags result; if(!PyArg_UnpackTuple(args,(char *)"ios_base_flags",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_flags" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = (std::ios_base::fmtflags)((std::ios_base const *)arg1)->flags();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_flags__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::ios_base::fmtflags result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_flags",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_flags" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_flags" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); result = (std::ios_base::fmtflags)(arg1)->flags(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_flags(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_ios_base_flags__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_flags__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_base_flags'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::flags() const\n"
  "    std::ios_base::flags(std::ios_base::fmtflags)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_base_setf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::ios_base::fmtflags result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_setf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_setf" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_setf" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); result = (std::ios_base::fmtflags)(arg1)->setf(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_setf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; std::ios_base::fmtflags arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; std::ios_base::fmtflags result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_setf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_setf" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_setf" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ios_base_setf" "', argument " "3"" of type '" "std::ios_base::fmtflags""'"); }
    arg3 = static_cast< std::ios_base::fmtflags >(val3); result = (std::ios_base::fmtflags)(arg1)->setf(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_setf(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_setf__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_ios_base_setf__SWIG_1(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_base_setf'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::setf(std::ios_base::fmtflags)\n"
  "    std::ios_base::setf(std::ios_base::fmtflags,std::ios_base::fmtflags)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_base_unsetf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::ios_base::fmtflags arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_unsetf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_unsetf" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_unsetf" "', argument " "2"" of type '" "std::ios_base::fmtflags""'"); }
    arg2 = static_cast< std::ios_base::fmtflags >(val2); (arg1)->unsetf(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_precision__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_precision",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_precision" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = ((std::ios_base const *)arg1)->precision();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_precision__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::streamsize arg2 ; void *argp1 = 0 ; int res1 = 0 ; size_t val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_precision",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_precision" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_size_t(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_precision" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2); result = (arg1)->precision(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_precision(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_ios_base_precision__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_precision__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_base_precision'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::precision() const\n"
  "    std::ios_base::precision(std::streamsize)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_base_width__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_width",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_width" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = ((std::ios_base const *)arg1)->width();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_width__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::streamsize arg2 ; void *argp1 = 0 ; int res1 = 0 ; size_t val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_width",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_width" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_size_t(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_width" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2); result = (arg1)->width(arg2);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_width(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_ios_base_width__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__ios_base, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_base_width__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_base_width'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::width() const\n" "    std::ios_base::width(std::streamsize)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ios_base_sync_with_stdio__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; bool arg1 ; bool val1 ; int ecode1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_sync_with_stdio",1,1,&obj0)) SWIG_fail; ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "ios_base_sync_with_stdio" "', argument " "1"" of type '" "bool""'"); }
    arg1 = static_cast< bool >(val1); result = (bool)std::ios_base::sync_with_stdio(arg1);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_sync_with_stdio__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; bool result; result = (bool)std::ios_base::sync_with_stdio();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_sync_with_stdio(PyObject *self, PyObject *args) { int argc; PyObject *argv[2]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 0) {
    return _wrap_ios_base_sync_with_stdio__SWIG_1(self, args);}  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_bool(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_ios_base_sync_with_stdio__SWIG_0(self, args);}  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_base_sync_with_stdio'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::ios_base::sync_with_stdio(bool)\n" "    std::ios_base::sync_with_stdio()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ios_base_imbue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; std::locale *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::locale result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_imbue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_imbue" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__locale,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_base_imbue" "', argument " "2"" of type '" "std::locale const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ios_base_imbue" "', argument " "2"" of type '" "std::locale const &""'"); }
   arg2 = reinterpret_cast< std::locale * >(argp2); result = (arg1)->imbue((std::locale const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_getloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::locale result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_getloc",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_getloc" "', argument " "1"" of type '" "std::ios_base const *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); result = ((std::ios_base const *)arg1)->getloc();
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_xalloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  int result; result = (int)std::ios_base::xalloc(); resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_iword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; long *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_iword",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_iword" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_iword" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (long *) &(arg1)->iword(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_long, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_base_pword(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; void **result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_base_pword",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_base_pword" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_base_pword" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (void **) &(arg1)->pword(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_p_void, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ios_base(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::ios_base *arg1 = (std::ios_base *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_ios_base",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__ios_base, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ios_base" "', argument " "1"" of type '" "std::ios_base *""'");  }
   arg1 = reinterpret_cast< std::ios_base * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *ios_base_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__ios_base, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_ios_rdstate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::ios_base::iostate result; if(!PyArg_UnpackTuple(args,(char *)"ios_rdstate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_rdstate" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::ios_base::iostate)((std::basic_ios< char > const *)arg1)->rdstate();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_clear__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::ios_base::iostate arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_clear",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_clear" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_clear" "', argument " "2"" of type '" "std::ios_base::iostate""'"); }
    arg2 = static_cast< std::ios_base::iostate >(val2); (arg1)->clear(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ios_clear__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_clear",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_clear" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); (arg1)->clear(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_clear(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_clear__SWIG_1(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_clear__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_clear'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::clear(std::ios_base::iostate)\n"
  "    std::basic_ios< char >::clear()\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_setstate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::ios_base::iostate arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_setstate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_setstate" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_setstate" "', argument " "2"" of type '" "std::ios_base::iostate""'"); }
    arg2 = static_cast< std::ios_base::iostate >(val2); (arg1)->setstate(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_good(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"ios_good",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_good" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->good();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_eof(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"ios_eof",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_eof" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->eof();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"ios_fail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_fail" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->fail();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_bad(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"ios_bad",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_bad" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); result = (bool)((std::basic_ios< char > const *)arg1)->bad();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_exceptions__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::ios_base::iostate result; if(!PyArg_UnpackTuple(args,(char *)"ios_exceptions",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_exceptions" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::ios_base::iostate)((std::basic_ios< char > const *)arg1)->exceptions();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_exceptions__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::ios_base::iostate arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_exceptions",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_exceptions" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_exceptions" "', argument " "2"" of type '" "std::ios_base::iostate""'"); }
    arg2 = static_cast< std::ios_base::iostate >(val2); (arg1)->exceptions(arg2); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_exceptions(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_exceptions__SWIG_0(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_exceptions__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_exceptions'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::exceptions() const\n"
  "    std::basic_ios< char >::exceptions(std::ios_base::iostate)\n"); return 0; }
SWIGINTERN PyObject *_wrap_new_ios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::basic_ios< char > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_ios",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ios" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ios< char > *)new std::basic_ios< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ios(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_ios",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ios" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ios_tie__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_tie",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_tie" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *)((std::basic_ios< char > const *)arg1)->tie();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_tie__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ;
  std::basic_ostream< char,std::char_traits< char > > *arg2 = (std::basic_ostream< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_tie",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_tie" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_tie" "', argument " "2"" of type '" "std::basic_ostream< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_ostream< char,std::char_traits< char > > *)(arg1)->tie(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_tie(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_tie__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_tie__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_tie'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::tie() const\n"
  "    std::basic_ios< char >::tie(std::basic_ostream< char,std::char_traits< char > > *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_rdbuf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_rdbuf",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_rdbuf" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::basic_streambuf< char,std::char_traits< char > > *)((std::basic_ios< char > const *)arg1)->rdbuf();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_rdbuf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ios_rdbuf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_rdbuf" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_rdbuf" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_streambuf< char,std::char_traits< char > > *)(arg1)->rdbuf(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_rdbuf(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_rdbuf__SWIG_0(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_rdbuf__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_rdbuf'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::rdbuf() const\n"
  "    std::basic_ios< char >::rdbuf(std::basic_streambuf< char,std::char_traits< char > > *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_copyfmt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::basic_ios< char > *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ios< char > *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"ios_copyfmt",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_copyfmt" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_copyfmt" "', argument " "2"" of type '" "std::basic_ios< char > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ios_copyfmt" "', argument " "2"" of type '" "std::basic_ios< char > const &""'"); }
   arg2 = reinterpret_cast< std::basic_ios< char > * >(argp2);
  result = (std::basic_ios< char > *) &(arg1)->copyfmt((std::basic_ios< char > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fill__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ios< char >::char_type result; if(!PyArg_UnpackTuple(args,(char *)"ios_fill",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_fill" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  result = (std::basic_ios< char >::char_type)((std::basic_ios< char > const *)arg1)->fill();
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fill__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::basic_ios< char >::char_type arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ios< char >::char_type result; if(!PyArg_UnpackTuple(args,(char *)"ios_fill",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_fill" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_fill" "', argument " "2"" of type '" "std::basic_ios< char >::char_type""'"); }
    arg2 = static_cast< std::basic_ios< char >::char_type >(val2);
  result = (std::basic_ios< char >::char_type)(arg1)->fill(arg2); resultobj = SWIG_From_char(static_cast< char >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_fill(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_ios_fill__SWIG_0(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_char(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ios_fill__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ios_fill'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ios< char >::fill() const\n"
  "    std::basic_ios< char >::fill(std::basic_ios< char >::char_type)\n"); return 0; }
SWIGINTERN PyObject *_wrap_ios_imbue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::locale *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::locale result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_imbue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_imbue" "', argument " "1"" of type '" "std::basic_ios< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__locale,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ios_imbue" "', argument " "2"" of type '" "std::locale const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ios_imbue" "', argument " "2"" of type '" "std::locale const &""'"); }
   arg2 = reinterpret_cast< std::locale * >(argp2); result = (arg1)->imbue((std::locale const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_narrow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; std::basic_ios< char >::char_type arg2 ; char arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; char val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; char result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_narrow",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_narrow" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_narrow" "', argument " "2"" of type '" "std::basic_ios< char >::char_type""'"); }
    arg2 = static_cast< std::basic_ios< char >::char_type >(val2); ecode3 = SWIG_AsVal_char(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ios_narrow" "', argument " "3"" of type '" "char""'"); }  
  arg3 = static_cast< char >(val3); result = (char)((std::basic_ios< char > const *)arg1)->narrow(arg2,arg3);
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ios_widen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ios< char > *arg1 = (std::basic_ios< char > *) 0 ; char arg2 ; void *argp1 = 0 ; int res1 = 0 ; char val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_ios< char >::char_type result;
  if(!PyArg_UnpackTuple(args,(char *)"ios_widen",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ios_widen" "', argument " "1"" of type '" "std::basic_ios< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_ios< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ios_widen" "', argument " "2"" of type '" "char""'"); }  
  arg2 = static_cast< char >(val2);
  result = (std::basic_ios< char >::char_type)((std::basic_ios< char > const *)arg1)->widen(arg2);
  resultobj = SWIG_From_char(static_cast< char >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *ios_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_iosT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_streambuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_streambuf",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_streambuf" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubimbue(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; std::locale *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::locale result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubimbue",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubimbue" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__locale,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_pubimbue" "', argument " "2"" of type '" "std::locale const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "streambuf_pubimbue" "', argument " "2"" of type '" "std::locale const &""'"); }
   arg2 = reinterpret_cast< std::locale * >(argp2); result = (arg1)->pubimbue((std::locale const &)*arg2);
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_getloc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::locale result; if(!PyArg_UnpackTuple(args,(char *)"streambuf_getloc",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_getloc" "', argument " "1"" of type '" "std::basic_streambuf< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1);
  result = ((std::basic_streambuf< char > const *)arg1)->getloc();
  resultobj = SWIG_NewPointerObj((new std::locale(static_cast< const std::locale& >(result))), SWIGTYPE_p_std__locale, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubsetbuf(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::char_type *arg2 = (std::basic_streambuf< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubsetbuf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubsetbuf" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_pubsetbuf" "', argument " "2"" of type '" "std::basic_streambuf< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "streambuf_pubsetbuf" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_streambuf< char,std::char_traits< char > > *)(arg1)->pubsetbuf(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubseekoff__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::off_type arg2 ; std::ios_base::seekdir arg3 ; std::ios_base::openmode arg4 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; std::basic_streambuf< char >::pos_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubseekoff",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubseekoff" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streamoff,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_pubseekoff" "', argument " "2"" of type '" "std::basic_streambuf< char >::off_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "streambuf_pubseekoff" "', argument " "2"" of type '" "std::basic_streambuf< char >::off_type""'"); }
     else { std::basic_streambuf< char >::off_type * temp = reinterpret_cast< std::basic_streambuf< char >::off_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "streambuf_pubseekoff" "', argument " "3"" of type '" "std::ios_base::seekdir""'"); }
    arg3 = static_cast< std::ios_base::seekdir >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "streambuf_pubseekoff" "', argument " "4"" of type '" "std::ios_base::openmode""'"); }
    arg4 = static_cast< std::ios_base::openmode >(val4); result = (arg1)->pubseekoff(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj((new std::basic_streambuf< char >::pos_type(static_cast< const std::basic_streambuf< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubseekoff__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::off_type arg2 ; std::ios_base::seekdir arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_streambuf< char >::pos_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubseekoff",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubseekoff" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streamoff,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_pubseekoff" "', argument " "2"" of type '" "std::basic_streambuf< char >::off_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "streambuf_pubseekoff" "', argument " "2"" of type '" "std::basic_streambuf< char >::off_type""'"); }
     else { std::basic_streambuf< char >::off_type * temp = reinterpret_cast< std::basic_streambuf< char >::off_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "streambuf_pubseekoff" "', argument " "3"" of type '" "std::ios_base::seekdir""'"); }
    arg3 = static_cast< std::ios_base::seekdir >(val3); result = (arg1)->pubseekoff(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new std::basic_streambuf< char >::pos_type(static_cast< const std::basic_streambuf< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubseekoff(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streamoff, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_streambuf_pubseekoff__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streamoff, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_streambuf_pubseekoff__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'streambuf_pubseekoff'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::basic_streambuf< char >::pubseekoff(std::basic_streambuf< char >::off_type,std::ios_base::seekdir,std::ios_base::openmode)\n"
  "    std::basic_streambuf< char >::pubseekoff(std::basic_streambuf< char >::off_type,std::ios_base::seekdir)\n"); return 0; }
SWIGINTERN PyObject *_wrap_streambuf_pubseekpos__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::pos_type arg2 ; std::ios_base::openmode arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_streambuf< char >::pos_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubseekpos",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubseekpos" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streampos,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_pubseekpos" "', argument " "2"" of type '" "std::basic_streambuf< char >::pos_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "streambuf_pubseekpos" "', argument " "2"" of type '" "std::basic_streambuf< char >::pos_type""'"); }
     else { std::basic_streambuf< char >::pos_type * temp = reinterpret_cast< std::basic_streambuf< char >::pos_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "streambuf_pubseekpos" "', argument " "3"" of type '" "std::ios_base::openmode""'"); }
    arg3 = static_cast< std::ios_base::openmode >(val3); result = (arg1)->pubseekpos(arg2,arg3);
  resultobj = SWIG_NewPointerObj((new std::basic_streambuf< char >::pos_type(static_cast< const std::basic_streambuf< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubseekpos__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::pos_type arg2 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_streambuf< char >::pos_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubseekpos",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubseekpos" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streampos,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_pubseekpos" "', argument " "2"" of type '" "std::basic_streambuf< char >::pos_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "streambuf_pubseekpos" "', argument " "2"" of type '" "std::basic_streambuf< char >::pos_type""'"); }
     else { std::basic_streambuf< char >::pos_type * temp = reinterpret_cast< std::basic_streambuf< char >::pos_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  result = (arg1)->pubseekpos(arg2);
  resultobj = SWIG_NewPointerObj((new std::basic_streambuf< char >::pos_type(static_cast< const std::basic_streambuf< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_pubseekpos(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streampos, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_streambuf_pubseekpos__SWIG_1(self, args);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streampos, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_streambuf_pubseekpos__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'streambuf_pubseekpos'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::basic_streambuf< char >::pubseekpos(std::basic_streambuf< char >::pos_type,std::ios_base::openmode)\n"
  "    std::basic_streambuf< char >::pubseekpos(std::basic_streambuf< char >::pos_type)\n"); return 0; }
SWIGINTERN PyObject *_wrap_streambuf_pubsync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"streambuf_pubsync",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_pubsync" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); result = (int)(arg1)->pubsync();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_in_avail(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::streamsize result; if(!PyArg_UnpackTuple(args,(char *)"streambuf_in_avail",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_in_avail" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); result = (arg1)->in_avail();
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_snextc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::basic_streambuf< char >::int_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_snextc",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_snextc" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1);
  result = (std::basic_streambuf< char >::int_type)(arg1)->snextc(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sbumpc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::basic_streambuf< char >::int_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sbumpc",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sbumpc" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1);
  result = (std::basic_streambuf< char >::int_type)(arg1)->sbumpc(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sgetc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::basic_streambuf< char >::int_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sgetc",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sgetc" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1);
  result = (std::basic_streambuf< char >::int_type)(arg1)->sgetc(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sgetn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::char_type *arg2 = (std::basic_streambuf< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sgetn",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sgetn" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_sgetn" "', argument " "2"" of type '" "std::basic_streambuf< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "streambuf_sgetn" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); result = (arg1)->sgetn(arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sputbackc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; std::basic_streambuf< char >::char_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_streambuf< char >::int_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sputbackc",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sputbackc" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "streambuf_sputbackc" "', argument " "2"" of type '" "std::basic_streambuf< char >::char_type""'"); }
    arg2 = static_cast< std::basic_streambuf< char >::char_type >(val2);
  result = (std::basic_streambuf< char >::int_type)(arg1)->sputbackc(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sungetc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::basic_streambuf< char >::int_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sungetc",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sungetc" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1);
  result = (std::basic_streambuf< char >::int_type)(arg1)->sungetc(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sputc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ; std::basic_streambuf< char >::char_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_streambuf< char >::int_type result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sputc",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sputc" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "streambuf_sputc" "', argument " "2"" of type '" "std::basic_streambuf< char >::char_type""'"); }
    arg2 = static_cast< std::basic_streambuf< char >::char_type >(val2);
  result = (std::basic_streambuf< char >::int_type)(arg1)->sputc(arg2); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_streambuf_sputn(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char > *arg1 = (std::basic_streambuf< char > *) 0 ;
  std::basic_streambuf< char >::char_type *arg2 = (std::basic_streambuf< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"streambuf_sputn",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "streambuf_sputn" "', argument " "1"" of type '" "std::basic_streambuf< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "streambuf_sputn" "', argument " "2"" of type '" "std::basic_streambuf< char >::char_type const *""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "streambuf_sputn" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (arg1)->sputn((std::basic_streambuf< char >::char_type const *)arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *streambuf_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN int Swig_var_cin_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable cin is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_cin_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::cin), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN int Swig_var_cout_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable cout is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_cout_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::cout), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN int Swig_var_cerr_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable cerr is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_cerr_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::cerr), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN int Swig_var_clog_set(PyObject *) { SWIG_Error(SWIG_AttributeError,"Variable clog is read-only."); return 1; }
SWIGINTERN PyObject *Swig_var_clog_get(void) { PyObject *pyobj = 0;
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&std::clog), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  return pyobj; }
SWIGINTERN PyObject *_wrap_new_ostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::basic_ostream< char > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_ostream",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ostream" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char > *)new std::basic_ostream< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_ostream",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ostream" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ostream< char,std::char_traits< char > > &(*arg2)(std::basic_ostream< char,std::char_traits< char > > &) = (std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ios< char,std::char_traits< char > > &(*arg2)(std::basic_ios< char,std::char_traits< char > > &) = (std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::ios_base &(*arg2)(std::ios_base &) = (std::ios_base &(*)(std::ios_base &)) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::ios_base &(*)(std::ios_base &)""'");  }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; long arg2 ; void *argp1 = 0 ; int res1 = 0 ; long val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long""'"); }  
  arg2 = static_cast< long >(val2); result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned long arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned long val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned long""'"); }
    arg2 = static_cast< unsigned long >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "bool""'"); }  
  arg2 = static_cast< bool >(val2); result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; short arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  short val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "short""'"); }
    arg2 = static_cast< short >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned short arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned short val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_short(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned short""'"); }
    arg2 = static_cast< unsigned short >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "int""'"); }  
  arg2 = static_cast< int >(val2); result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; long long arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; long long val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long long""'"); }
    arg2 = static_cast< long long >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; unsigned long long arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned long long val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_long_SS_long(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "unsigned long long""'"); }
    arg2 = static_cast< unsigned long long >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; double arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; float arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; long double arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_long_double,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long double""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream___lshift__" "', argument " "2"" of type '" "long double""'"); }
     else { long double * temp = reinterpret_cast< long double * >(argp2); arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }
     }  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *arg2 = (void *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1,SWIG_as_voidptrptr(&arg2), 0, 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "void const *""'");  }
   result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<((void const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->operator <<(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift____SWIG_17(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_string< char,std::char_traits< char >,std::allocator< char > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream___lshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream___lshift__" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream___lshift__" "', argument " "2"" of type '" "std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &""'"); }
   arg2 = reinterpret_cast< std::basic_string< char,std::char_traits< char >,std::allocator< char > > * >(argp2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std_basic_ostream_Sl_char_Sg__operator_Sl__Sl___SWIG_17(arg1,(std::basic_string< char,std::char_traits< char >,std::allocator< char > > const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream___lshift__(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_0(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_1(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_2(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_long_double, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_14(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_16(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_17(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0; int res = SWIG_ConvertPtr(argv[1], &ptr, 0, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream___lshift____SWIG_15(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_short(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_7(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_short(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_6(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_9(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_8(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_4(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_long(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_3(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res); }  if (_v) { return _wrap_ostream___lshift____SWIG_11(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_long_SS_long(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_ostream___lshift____SWIG_10(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_float(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_13(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_12(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_ostream___lshift____SWIG_5(self, args);}  }  }  fail: Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_ostream_put(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; std::basic_ostream< char >::char_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream_put",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_put" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ostream_put" "', argument " "2"" of type '" "std::basic_ostream< char >::char_type""'"); }
    arg2 = static_cast< std::basic_ostream< char >::char_type >(val2);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->put(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ;
  std::basic_ostream< char >::char_type *arg2 = (std::basic_ostream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream_write",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_write" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream_write" "', argument " "2"" of type '" "std::basic_ostream< char >::char_type const *""'"); }
   arg2 = reinterpret_cast< std::basic_ostream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ostream_write" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->write((std::basic_ostream< char >::char_type const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_ostream_flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream_flush",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_flush" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->flush();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_tellp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ostream< char >::pos_type result; if(!PyArg_UnpackTuple(args,(char *)"ostream_tellp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_tellp" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); result = (arg1)->tellp();
  resultobj = SWIG_NewPointerObj((new std::basic_ostream< char >::pos_type(static_cast< const std::basic_ostream< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_seekp__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; std::basic_ostream< char >::pos_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream_seekp",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_seekp" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streampos,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::pos_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::pos_type""'"); }
     else { std::basic_ostream< char >::pos_type * temp = reinterpret_cast< std::basic_ostream< char >::pos_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->seekp(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_seekp__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char > *arg1 = (std::basic_ostream< char > *) 0 ; std::basic_ostream< char >::off_type arg2 ;
  std::ios_base::seekdir arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ostream_seekp",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ostream_seekp" "', argument " "1"" of type '" "std::basic_ostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_ostream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streamoff,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::off_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ostream_seekp" "', argument " "2"" of type '" "std::basic_ostream< char >::off_type""'"); }
     else { std::basic_ostream< char >::off_type * temp = reinterpret_cast< std::basic_ostream< char >::off_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ostream_seekp" "', argument " "3"" of type '" "std::ios_base::seekdir""'"); }
    arg3 = static_cast< std::ios_base::seekdir >(val3);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &(arg1)->seekp(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ostream_seekp(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streampos, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_ostream_seekp__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streamoff, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_ostream_seekp__SWIG_1(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ostream_seekp'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_ostream< char >::seekp(std::basic_ostream< char >::pos_type)\n"
  "    std::basic_ostream< char >::seekp(std::basic_ostream< char >::off_type,std::ios_base::seekdir)\n"); return 0; }
SWIGINTERN PyObject *ostream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_istream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::basic_istream< char > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_istream",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_istream" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_istream< char > *)new std::basic_istream< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_istream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_istream",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_istream" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char,std::char_traits< char > > &(*arg2)(std::basic_istream< char,std::char_traits< char > > &) = (std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_ios< char,std::char_traits< char > > &(*arg2)(std::basic_ios< char,std::char_traits< char > > &) = (std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)""'");  }
     }  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::ios_base &(*arg2)(std::ios_base &) = (std::ios_base &(*)(std::ios_base &)) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    int res = SWIG_ConvertFunctionPtr(obj1, (void**)(&arg2), SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::ios_base &(*)(std::ios_base &)""'");  }
     }  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "bool &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; short *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_short,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "short &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "short &""'"); }
   arg2 = reinterpret_cast< short * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned short *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_short,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned short &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned short &""'"); }
   arg2 = reinterpret_cast< unsigned short * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "int &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned int *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_int,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned int &""'"); }
   arg2 = reinterpret_cast< unsigned int * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; long *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_long,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "long &""'");  } 
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "long &""'"); }
   arg2 = reinterpret_cast< long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned long *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long &""'"); }
   arg2 = reinterpret_cast< unsigned long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; long long *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_long_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "long long &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "long long &""'"); }
   arg2 = reinterpret_cast< long long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; unsigned long long *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_unsigned_long_long,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long long &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "unsigned long long &""'"); }
   arg2 = reinterpret_cast< unsigned long long * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_12(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; float *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "float &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "float &""'"); }
   arg2 = reinterpret_cast< float * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_13(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; double *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "double &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "double &""'"); }
   arg2 = reinterpret_cast< double * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_14(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; long double *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_long_double,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "long double &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "long double &""'"); }
   arg2 = reinterpret_cast< long double * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_15(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void **arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_p_void,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "void *&""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream___rshift__" "', argument " "2"" of type '" "void *&""'"); }
   arg2 = reinterpret_cast< void ** >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift____SWIG_16(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream___rshift__",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream___rshift__" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream___rshift__" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->operator >>(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream___rshift__(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_0(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_1(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *ptr = 0;
      int res = SWIG_ConvertFunctionPtr(argv[1], &ptr, SWIGTYPE_p_f_r_std__ios_base__r_std__ios_base);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_2(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_bool, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_3(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_short, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_4(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_5(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_6(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_7(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_8(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_9(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long_long, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_10(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_long_long, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_istream___rshift____SWIG_11(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_12(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_13(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long_double, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_14(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_void, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_15(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream___rshift____SWIG_16(self, args);}  }  }  fail:
  Py_INCREF(Py_NotImplemented); return Py_NotImplemented; }
SWIGINTERN PyObject *_wrap_istream_gcount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::streamsize result; if(!PyArg_UnpackTuple(args,(char *)"istream_gcount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_gcount" "', argument " "1"" of type '" "std::basic_istream< char > const *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = ((std::basic_istream< char > const *)arg1)->gcount(); resultobj = SWIG_From_size_t(static_cast< size_t >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_istream< char >::int_type result; if(!PyArg_UnpackTuple(args,(char *)"istream_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); result = (std::basic_istream< char >::int_type)(arg1)->get();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::basic_istream< char >::char_type *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_char,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type &""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  std::basic_istream< char >::char_type arg4 ; void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ;
  size_t val3 ; int ecode3 = 0 ; char val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_get",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_get" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); ecode4 = SWIG_AsVal_char(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "istream_get" "', argument " "4"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg4 = static_cast< std::basic_istream< char >::char_type >(val4);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_get",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_get" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = 0 ; std::basic_istream< char >::char_type arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; char val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_get",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  ecode3 = SWIG_AsVal_char(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_get" "', argument " "3"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg3 = static_cast< std::basic_istream< char >::char_type >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(*arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_streambuf< char,std::char_traits< char > > *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_get",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_get" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_get" "', argument " "2"" of type '" "std::basic_streambuf< char,std::char_traits< char > > &""'"); }
   arg2 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->get(*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_get(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_get__SWIG_0(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_char, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_get__SWIG_1(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_get__SWIG_5(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_char(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_get__SWIG_4(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_get__SWIG_3(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_char(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_istream_get__SWIG_2(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'istream_get'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_istream< char >::get()\n"
  "    std::basic_istream< char >::get(std::basic_istream< char >::char_type &)\n"
  "    std::basic_istream< char >::get(std::basic_istream< char >::char_type *,std::streamsize,std::basic_istream< char >::char_type)\n"
  "    std::basic_istream< char >::get(std::basic_istream< char >::char_type *,std::streamsize)\n"
  "    std::basic_istream< char >::get(std::basic_streambuf< char,std::char_traits< char > > &,std::basic_istream< char >::char_type)\n"
  "    std::basic_istream< char >::get(std::basic_streambuf< char,std::char_traits< char > > &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_istream_getline__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  std::basic_istream< char >::char_type arg4 ; void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ;
  size_t val3 ; int ecode3 = 0 ; char val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_getline",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_getline" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_getline" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_getline" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); ecode4 = SWIG_AsVal_char(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "istream_getline" "', argument " "4"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg4 = static_cast< std::basic_istream< char >::char_type >(val4);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->getline(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_getline__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_getline",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_getline" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_getline" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_getline" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->getline(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_getline(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_getline__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsCharPtrAndSize(argv[1], 0, NULL, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_size_t(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_char(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_istream_getline__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'istream_getline'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::basic_istream< char >::getline(std::basic_istream< char >::char_type *,std::streamsize,std::basic_istream< char >::char_type)\n"
  "    std::basic_istream< char >::getline(std::basic_istream< char >::char_type *,std::streamsize)\n"); return 0; }
SWIGINTERN PyObject *_wrap_istream_ignore__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::streamsize arg2 ;
  std::basic_istream< char >::int_type arg3 ; void *argp1 = 0 ; int res1 = 0 ; size_t val2 ; int ecode2 = 0 ; int val3 ;
  int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_ignore",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_ignore" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "istream_ignore" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_ignore" "', argument " "3"" of type '" "std::basic_istream< char >::int_type""'"); }
    arg3 = static_cast< std::basic_istream< char >::int_type >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->ignore(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_ignore__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::streamsize arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  size_t val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_ignore",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_ignore" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); ecode2 = SWIG_AsVal_size_t(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "istream_ignore" "', argument " "2"" of type '" "std::streamsize""'"); }
    arg2 = static_cast< std::streamsize >(val2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->ignore(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_ignore__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_ignore",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_ignore" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->ignore();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_ignore(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_ignore__SWIG_2(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_istream_ignore__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_size_t(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_ignore__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'istream_ignore'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    std::basic_istream< char >::ignore(std::streamsize,std::basic_istream< char >::int_type)\n"
  "    std::basic_istream< char >::ignore(std::streamsize)\n" "    std::basic_istream< char >::ignore()\n"); return 0; }
SWIGINTERN PyObject *_wrap_istream_peek(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_istream< char >::int_type result; if(!PyArg_UnpackTuple(args,(char *)"istream_peek",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_peek" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = (std::basic_istream< char >::int_type)(arg1)->peek(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_read(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_read",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_read" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_read" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_read" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->read(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_readsome(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ;
  std::basic_istream< char >::char_type *arg2 = (std::basic_istream< char >::char_type *) 0 ; std::streamsize arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; size_t val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; std::streamsize result;
  if(!PyArg_UnpackTuple(args,(char *)"istream_readsome",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_readsome" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_readsome" "', argument " "2"" of type '" "std::basic_istream< char >::char_type *""'"); }
   arg2 = reinterpret_cast< std::basic_istream< char >::char_type * >(buf2); ecode3 = SWIG_AsVal_size_t(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_readsome" "', argument " "3"" of type '" "std::streamsize""'"); }
    arg3 = static_cast< std::streamsize >(val3); result = (arg1)->readsome(arg2,arg3);
  resultobj = SWIG_From_size_t(static_cast< size_t >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_istream_putback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::basic_istream< char >::char_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; char val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_putback",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_putback" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); ecode2 = SWIG_AsVal_char(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "istream_putback" "', argument " "2"" of type '" "std::basic_istream< char >::char_type""'"); }
    arg2 = static_cast< std::basic_istream< char >::char_type >(val2);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->putback(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_unget(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_unget",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_unget" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->unget();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_sync(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"istream_sync",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_sync" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); result = (int)(arg1)->sync();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_tellg(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_istream< char >::pos_type result; if(!PyArg_UnpackTuple(args,(char *)"istream_tellg",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_tellg" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); result = (arg1)->tellg();
  resultobj = SWIG_NewPointerObj((new std::basic_istream< char >::pos_type(static_cast< const std::basic_istream< char >::pos_type& >(result))), SWIGTYPE_p_streampos, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_seekg__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::basic_istream< char >::pos_type arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_seekg",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_seekg" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streampos,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::pos_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::pos_type""'"); }
     else { std::basic_istream< char >::pos_type * temp = reinterpret_cast< std::basic_istream< char >::pos_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  } 
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->seekg(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_seekg__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_istream< char > *arg1 = (std::basic_istream< char > *) 0 ; std::basic_istream< char >::off_type arg2 ;
  std::ios_base::seekdir arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  std::basic_istream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"istream_seekg",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "istream_seekg" "', argument " "1"" of type '" "std::basic_istream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_istream< char > * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_streamoff,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::off_type""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "istream_seekg" "', argument " "2"" of type '" "std::basic_istream< char >::off_type""'"); }
     else { std::basic_istream< char >::off_type * temp = reinterpret_cast< std::basic_istream< char >::off_type * >(argp2);
      arg2 = *temp; if (SWIG_IsNewObj(res2)) delete temp; }  }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "istream_seekg" "', argument " "3"" of type '" "std::ios_base::seekdir""'"); }
    arg3 = static_cast< std::ios_base::seekdir >(val3);
  result = (std::basic_istream< char,std::char_traits< char > > *) &(arg1)->seekg(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_istream_seekg(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streampos, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_istream_seekg__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_streamoff, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_istream_seekg__SWIG_1(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'istream_seekg'.\n"
  "  Possible C/C++ prototypes are:\n" "    std::basic_istream< char >::seekg(std::basic_istream< char >::pos_type)\n"
  "    std::basic_istream< char >::seekg(std::basic_istream< char >::off_type,std::ios_base::seekdir)\n"); return 0; }
SWIGINTERN PyObject *istream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_iostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_streambuf< char,std::char_traits< char > > *arg1 = (std::basic_streambuf< char,std::char_traits< char > > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; std::basic_iostream< char > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_iostream",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_iostream" "', argument " "1"" of type '" "std::basic_streambuf< char,std::char_traits< char > > *""'");  }
   arg1 = reinterpret_cast< std::basic_streambuf< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_iostream< char > *)new std::basic_iostream< char >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_iostream(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_iostream< char > *arg1 = (std::basic_iostream< char > *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_iostream",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_iostream" "', argument " "1"" of type '" "std::basic_iostream< char > *""'");  }
   arg1 = reinterpret_cast< std::basic_iostream< char > * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *iostream_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_endl(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char,std::char_traits< char > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"endl",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "endl" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "endl" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'"); }
   arg1 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std::SWIGTEMPLATEDISAMBIGUATOR endl< char,std::char_traits< char > >(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ends(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char,std::char_traits< char > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ends",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ends" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ends" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'"); }
   arg1 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std::SWIGTEMPLATEDISAMBIGUATOR ends< char,std::char_traits< char > >(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_flush(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  std::basic_ostream< char,std::char_traits< char > > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::basic_ostream< char,std::char_traits< char > > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"flush",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "flush" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "flush" "', argument " "1"" of type '" "std::basic_ostream< char,std::char_traits< char > > &""'"); }
   arg1 = reinterpret_cast< std::basic_ostream< char,std::char_traits< char > > * >(argp1);
  result = (std::basic_ostream< char,std::char_traits< char > > *) &std::SWIGTEMPLATEDISAMBIGUATOR flush< char,std::char_traits< char > >(*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0 |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlInitialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlInitialize(); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlStreamManager::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlStreamManager__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *result = 0 ; result = (svlStreamManager *)new svlStreamManager();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlStreamManager, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlStreamManager__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned int arg1 ; unsigned int val1 ; int ecode1 = 0 ; PyObject * obj0 = 0 ;
  svlStreamManager *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"new_svlStreamManager",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_svlStreamManager" "', argument " "1"" of type '" "unsigned int""'"); }
    arg1 = static_cast< unsigned int >(val1); result = (svlStreamManager *)new svlStreamManager(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlStreamManager, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlStreamManager(PyObject *self, PyObject *args) { int argc; PyObject *argv[2]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 0) {
    return _wrap_new_svlStreamManager__SWIG_0(self, args);}  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_svlStreamManager__SWIG_1(self, args);}  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_svlStreamManager'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlStreamManager::svlStreamManager()\n"
  "    svlStreamManager::svlStreamManager(unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_svlStreamManager(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlStreamManager",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlStreamManager" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_SetSourceFilter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ;
  svlFilterSourceBase *arg2 = (svlFilterSourceBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_SetSourceFilter",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_SetSourceFilter" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlStreamManager_SetSourceFilter" "', argument " "2"" of type '" "svlFilterSourceBase *""'");  }
   arg2 = reinterpret_cast< svlFilterSourceBase * >(argp2); result = (int)(arg1)->SetSourceFilter(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_Initialize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_Initialize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_Initialize" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); result = (int)(arg1)->Initialize();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_Release(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_Release",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_Release" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); (arg1)->Release(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_IsInitialized(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; bool result; if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_IsInitialized",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_IsInitialized" "', argument " "1"" of type '" "svlStreamManager const *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); result = (bool)((svlStreamManager const *)arg1)->IsInitialized();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_Play(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_Play",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_Play" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); result = (int)(arg1)->Play();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_Stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_Stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_Stop" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); (arg1)->Stop(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_IsRunning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_IsRunning",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_IsRunning" "', argument " "1"" of type '" "svlStreamManager const *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); result = (bool)((svlStreamManager const *)arg1)->IsRunning();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_WaitForStop__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ; double arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_WaitForStop",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_WaitForStop" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlStreamManager_WaitForStop" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (int)(arg1)->WaitForStop(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_WaitForStop__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_WaitForStop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_WaitForStop" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); result = (int)(arg1)->WaitForStop();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_WaitForStop(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlStreamManager, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlStreamManager_WaitForStop__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlStreamManager, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlStreamManager_WaitForStop__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlStreamManager_WaitForStop'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlStreamManager::WaitForStop(double)\n" "    svlStreamManager::WaitForStop()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlStreamManager_GetStreamStatus(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_GetStreamStatus",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_GetStreamStatus" "', argument " "1"" of type '" "svlStreamManager const *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); result = (int)((svlStreamManager const *)arg1)->GetStreamStatus();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlStreamManager_DisconnectAll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlStreamManager *arg1 = (svlStreamManager *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlStreamManager_DisconnectAll",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlStreamManager, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlStreamManager_DisconnectAll" "', argument " "1"" of type '" "svlStreamManager *""'");  }
   arg1 = reinterpret_cast< svlStreamManager * >(argp1); (arg1)->DisconnectAll(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *svlStreamManager_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlStreamManager, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterBase_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ; result = (cmnClassServicesBase *)svlFilterBase::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterBase",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterBase" "', argument " "1"" of type '" "svlFilterBase *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_IsInitialized(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_IsInitialized",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_IsInitialized" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (bool)((svlFilterBase const *)arg1)->IsInitialized();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_IsRunning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_IsRunning",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_IsRunning" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (bool)((svlFilterBase const *)arg1)->IsRunning();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetFrameCounter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_GetFrameCounter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_GetFrameCounter" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (unsigned int)((svlFilterBase const *)arg1)->GetFrameCounter();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetInput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  svlFilterInput *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_GetInput",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_GetInput" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (svlFilterInput *)((svlFilterBase const *)arg1)->GetInput();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterInput, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetOutput__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  svlFilterOutput *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_GetOutput",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_GetOutput" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (svlFilterOutput *)((svlFilterBase const *)arg1)->GetOutput();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterOutput, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetInput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterBase *arg1 = (svlFilterBase *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; svlFilterInput *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_GetInput",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_GetInput" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterBase_GetInput" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterBase_GetInput" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (svlFilterInput *)((svlFilterBase const *)arg1)->GetInput((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterInput, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetInput(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterBase, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_svlFilterBase_GetInput__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterBase, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlFilterBase_GetInput__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterBase_GetInput'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterBase::GetInput() const\n"
  "    svlFilterBase::GetInput(std::string const &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetOutput__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterBase *arg1 = (svlFilterBase *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; svlFilterOutput *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_GetOutput",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_GetOutput" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterBase_GetOutput" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterBase_GetOutput" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (svlFilterOutput *)((svlFilterBase const *)arg1)->GetOutput((std::string const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterOutput, 0 |  0 );
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetOutput(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterBase, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_svlFilterBase_GetOutput__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterBase, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlFilterBase_GetOutput__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterBase_GetOutput'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterBase::GetOutput() const\n"
  "    svlFilterBase::GetOutput(std::string const &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterBase_SetEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; bool temp2 ; bool val2 ;
  int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_SetEnable",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_SetEnable" "', argument " "1"" of type '" "svlFilterBase *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterBase_SetEnable" "', argument " "2"" of type '" "bool""'"); }
    temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->SetEnable((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_GetEnable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_GetEnable",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_GetEnable" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterBase_GetEnable" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterBase_GetEnable" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlFilterBase const *)arg1)->GetEnable(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_Enable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_Enable",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_Enable" "', argument " "1"" of type '" "svlFilterBase *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); (arg1)->Enable(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_Disable(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_Disable",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_Disable" "', argument " "1"" of type '" "svlFilterBase *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); (arg1)->Disable(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_IsEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_IsEnabled",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_IsEnabled" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (bool)((svlFilterBase const *)arg1)->IsEnabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterBase_IsDisabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterBase_IsDisabled",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterBase_IsDisabled" "', argument " "1"" of type '" "svlFilterBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); result = (bool)((svlFilterBase const *)arg1)->IsDisabled();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *svlFilterBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterImageFileWriter::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterImageFileWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *result = 0 ;
  result = (svlFilterImageFileWriter *)new svlFilterImageFileWriter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterImageFileWriter, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterImageFileWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterImageFileWriter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterImageFileWriter" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Disable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; bool arg2 ; int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_Disable",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_Disable" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageFileWriter_Disable" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageFileWriter_Disable" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->Disable(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Disable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_Disable",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_Disable" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageFileWriter_Disable" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); result = (int)(arg1)->Disable(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Disable(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageFileWriter_Disable__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterImageFileWriter_Disable__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageFileWriter_Disable'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageFileWriter::Disable(bool,int)\n"
  "    svlFilterImageFileWriter::Disable(bool)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_SetFilePath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; std::string *arg2 = 0 ;
  std::string *arg3 = 0 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ;
  int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_SetFilePath",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  { std::string *ptr = (std::string *)0; res3 = SWIG_AsPtr_std_string(obj2, &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4);
  result = (int)(arg1)->SetFilePath((std::string const &)*arg2,(std::string const &)*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_SetFilePath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; std::string *arg2 = 0 ;
  std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; int res3 = SWIG_OLDOBJ ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_SetFilePath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  { std::string *ptr = (std::string *)0; res3 = SWIG_AsPtr_std_string(obj2, &ptr); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageFileWriter_SetFilePath" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  result = (int)(arg1)->SetFilePath((std::string const &)*arg2,(std::string const &)*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_SetFilePath(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterImageFileWriter_SetFilePath__SWIG_1(self, args);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterImageFileWriter_SetFilePath__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageFileWriter_SetFilePath'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterImageFileWriter::SetFilePath(std::string const &,std::string const &,int)\n"
  "    svlFilterImageFileWriter::SetFilePath(std::string const &,std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_SetCompression__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; int arg2 ; int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_SetCompression",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_SetCompression" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageFileWriter_SetCompression" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageFileWriter_SetCompression" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->SetCompression(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_SetCompression__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_SetCompression",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_SetCompression" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageFileWriter_SetCompression" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (int)(arg1)->SetCompression(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_SetCompression(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageFileWriter_SetCompression__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterImageFileWriter_SetCompression__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageFileWriter_SetCompression'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageFileWriter::SetCompression(int,int)\n"
  "    svlFilterImageFileWriter::SetCompression(int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_EnableTimestamps__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_EnableTimestamps",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_EnableTimestamps" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageFileWriter_EnableTimestamps" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->EnableTimestamps(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_EnableTimestamps__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_EnableTimestamps",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_EnableTimestamps" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); (arg1)->EnableTimestamps(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_EnableTimestamps(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterImageFileWriter_EnableTimestamps__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageFileWriter_EnableTimestamps__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageFileWriter_EnableTimestamps'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageFileWriter::EnableTimestamps(bool)\n"
  "    svlFilterImageFileWriter::EnableTimestamps()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Pause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_Pause",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_Pause" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); (arg1)->Pause(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Record__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_Record",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_Record" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageFileWriter_Record" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); (arg1)->Record(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Record__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageFileWriter *arg1 = (svlFilterImageFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageFileWriter_Record",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageFileWriter_Record" "', argument " "1"" of type '" "svlFilterImageFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterImageFileWriter * >(argp1); (arg1)->Record(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageFileWriter_Record(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterImageFileWriter_Record__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageFileWriter_Record__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageFileWriter_Record'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageFileWriter::Record(int)\n"
  "    svlFilterImageFileWriter::Record()\n"); return 0; }
SWIGINTERN PyObject *svlFilterImageFileWriter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterImageFileWriter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterImageRectifier::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterImageRectifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *result = 0 ;
  result = (svlFilterImageRectifier *)new svlFilterImageRectifier();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterImageRectifier, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterImageRectifier(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterImageRectifier",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterImageRectifier" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_LoadTable__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_LoadTable",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); result = (int)(arg1)->LoadTable((std::string const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_LoadTable__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_LoadTable",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->LoadTable((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_LoadTable__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_LoadTable",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageRectifier_LoadTable" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)(arg1)->LoadTable((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_LoadTable(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageRectifier, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlFilterImageRectifier_LoadTable__SWIG_2(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageRectifier, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterImageRectifier_LoadTable__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageRectifier, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterImageRectifier_LoadTable__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageRectifier_LoadTable'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageRectifier::LoadTable(std::string const &,unsigned int,int)\n"
  "    svlFilterImageRectifier::LoadTable(std::string const &,unsigned int)\n"
  "    svlFilterImageRectifier::LoadTable(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_SetTableFromCameraCalibration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; unsigned int arg2 ;
  unsigned int arg3 ; vct3x3 arg4 ; vct2 arg5 ; vct2 arg6 ; vctFixedSizeVector< double,7 > arg7 ; double arg8 ;
  unsigned int arg9 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  double val8 ; int ecode8 = 0 ; unsigned int val9 ; int ecode9 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ; PyObject * obj8 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_SetTableFromCameraCalibration",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_SetTableFromCameraCalibration" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageRectifier_SetTableFromCameraCalibration" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageRectifier_SetTableFromCameraCalibration" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); {   typedef vct3x3 MatrixType; if (!(   vctThrowUnlessIsPyArray(obj3)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj3) && vctThrowUnlessDimension2(obj3)
    && vctThrowUnlessCorrectMatrixSize(obj3, arg4)) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj3, 0);
    const npy_intp size1 = PyArray_DIM(obj3, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj3, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj3, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj3));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    (&arg4)->ForceAssign(tempContainer); }  {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, arg5)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg5)->ForceAssign(tempContainer); }
   {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj5)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5) && vctThrowUnlessDimension1(obj5)
    && vctThrowUnlessCorrectVectorSize(obj5, arg6)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg6)->ForceAssign(tempContainer); }
   {   typedef vctFixedSizeVector< double,7 > VectorType; if (!(   vctThrowUnlessIsPyArray(obj6)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj6) && vctThrowUnlessDimension1(obj6)
    && vctThrowUnlessCorrectVectorSize(obj6, arg7)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj6, 0);
    const npy_intp stride = PyArray_STRIDE(obj6, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj6));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg7)->ForceAssign(tempContainer); }
   ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "svlFilterImageRectifier_SetTableFromCameraCalibration" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8); ecode9 = SWIG_AsVal_unsigned_SS_int(obj8, &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "svlFilterImageRectifier_SetTableFromCameraCalibration" "', argument " "9"" of type '" "unsigned int""'"); }
    arg9 = static_cast< unsigned int >(val9);
  result = (int)(arg1)->SetTableFromCameraCalibration(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_GetTables(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; vctFixedSizeVector< svlImageProcessing::Internals,SVL_MAX_CHANNELS > result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_GetTables",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_GetTables" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); result = (arg1)->GetTables();
  resultobj = SWIG_NewPointerObj((new vctFixedSizeVector< svlImageProcessing::Internals,SVL_MAX_CHANNELS >(static_cast< const vctFixedSizeVector< svlImageProcessing::Internals,SVL_MAX_CHANNELS >& >(result))), SWIGTYPE_p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_EnableInterpolation__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_EnableInterpolation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_EnableInterpolation" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageRectifier_EnableInterpolation" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); (arg1)->EnableInterpolation(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_EnableInterpolation__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageRectifier *arg1 = (svlFilterImageRectifier *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageRectifier_EnableInterpolation",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageRectifier, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageRectifier_EnableInterpolation" "', argument " "1"" of type '" "svlFilterImageRectifier *""'");  }
   arg1 = reinterpret_cast< svlFilterImageRectifier * >(argp1); (arg1)->EnableInterpolation(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageRectifier_EnableInterpolation(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageRectifier, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlFilterImageRectifier_EnableInterpolation__SWIG_1(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageRectifier, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageRectifier_EnableInterpolation__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageRectifier_EnableInterpolation'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageRectifier::EnableInterpolation(bool)\n"
  "    svlFilterImageRectifier::EnableInterpolation()\n"); return 0; }
SWIGINTERN PyObject *svlFilterImageRectifier_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterImageRectifier, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterImageResizer_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterImageResizer::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterImageResizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterImageResizer *result = 0 ; result = (svlFilterImageResizer *)new svlFilterImageResizer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterImageResizer, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterImageResizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterImageResizer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterImageResizer" "', argument " "1"" of type '" "svlFilterImageResizer *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetOutputSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageResizer_SetOutputSize",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "1"" of type '" "svlFilterImageResizer *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->SetOutputSize(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetOutputSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageResizer_SetOutputSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "1"" of type '" "svlFilterImageResizer *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageResizer_SetOutputSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetOutputSize(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetOutputSize(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageResizer, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterImageResizer_SetOutputSize__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageResizer, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterImageResizer_SetOutputSize__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageResizer_SetOutputSize'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageResizer::SetOutputSize(unsigned int,unsigned int,unsigned int)\n"
  "    svlFilterImageResizer::SetOutputSize(unsigned int,unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetOutputRatio__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; double arg2 ; double arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageResizer_SetOutputRatio",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "1"" of type '" "svlFilterImageResizer *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "3"" of type '" "double""'"); }
    arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->SetOutputRatio(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetOutputRatio__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; double arg2 ; double arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageResizer_SetOutputRatio",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "1"" of type '" "svlFilterImageResizer *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_double(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageResizer_SetOutputRatio" "', argument " "3"" of type '" "double""'"); }
    arg3 = static_cast< double >(val3); result = (int)(arg1)->SetOutputRatio(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetOutputRatio(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageResizer, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterImageResizer_SetOutputRatio__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageResizer, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterImageResizer_SetOutputRatio__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageResizer_SetOutputRatio'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageResizer::SetOutputRatio(double,double,unsigned int)\n"
  "    svlFilterImageResizer::SetOutputRatio(double,double)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_SetInterpolation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; bool temp2 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageResizer_SetInterpolation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageResizer_SetInterpolation" "', argument " "1"" of type '" "svlFilterImageResizer *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageResizer_SetInterpolation" "', argument " "2"" of type '" "bool""'"); }
    temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->SetInterpolation((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageResizer_GetInterpolation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageResizer *arg1 = (svlFilterImageResizer *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageResizer_GetInterpolation",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageResizer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageResizer_GetInterpolation" "', argument " "1"" of type '" "svlFilterImageResizer const *""'");  }
   arg1 = reinterpret_cast< svlFilterImageResizer * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageResizer_GetInterpolation" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageResizer_GetInterpolation" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlFilterImageResizer const *)arg1)->GetInterpolation(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *svlFilterImageResizer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterImageResizer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterSourceBase_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterSourceBase::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterSourceBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterSourceBase",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterSourceBase" "', argument " "1"" of type '" "svlFilterSourceBase *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_SetTargetFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; double temp2 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_SetTargetFrequency",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_SetTargetFrequency" "', argument " "1"" of type '" "svlFilterSourceBase *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceBase_SetTargetFrequency" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2; (arg1)->SetTargetFrequency((double const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_GetTargetFrequency(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_GetTargetFrequency",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_GetTargetFrequency" "', argument " "1"" of type '" "svlFilterSourceBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1);
  result = (double)((svlFilterSourceBase const *)arg1)->GetTargetFrequency();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_SetLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; bool temp2 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_SetLoop",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_SetLoop" "', argument " "1"" of type '" "svlFilterSourceBase *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceBase_SetLoop" "', argument " "2"" of type '" "bool""'"); }
    temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->SetLoop((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_GetLoop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; bool result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_GetLoop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_GetLoop" "', argument " "1"" of type '" "svlFilterSourceBase const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); result = (bool)((svlFilterSourceBase const *)arg1)->GetLoop();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_Pause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_Pause",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_Pause" "', argument " "1"" of type '" "svlFilterSourceBase *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); (arg1)->Pause(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_Play__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_Play",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_Play" "', argument " "1"" of type '" "svlFilterSourceBase *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); (arg1)->Play(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_Play__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBase *arg1 = (svlFilterSourceBase *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int temp2 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBase_Play",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBase_Play" "', argument " "1"" of type '" "svlFilterSourceBase *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBase * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceBase_Play" "', argument " "2"" of type '" "int""'"); }
    temp2 = static_cast< int >(val2); arg2 = &temp2; (arg1)->Play((int const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBase_Play(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceBase, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlFilterSourceBase_Play__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceBase, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceBase_Play__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceBase_Play'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceBase::Play()\n" "    svlFilterSourceBase::Play(int const &)\n");
  return 0; }
SWIGINTERN PyObject *svlFilterSourceBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterSourceBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterSourceVideoFile::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceVideoFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *result = 0 ;
  result = (svlFilterSourceVideoFile *)new svlFilterSourceVideoFile();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterSourceVideoFile, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceVideoFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned int arg1 ; unsigned int val1 ; int ecode1 = 0 ; PyObject * obj0 = 0 ;
  svlFilterSourceVideoFile *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_svlFilterSourceVideoFile",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_svlFilterSourceVideoFile" "', argument " "1"" of type '" "unsigned int""'"); }
    arg1 = static_cast< unsigned int >(val1); result = (svlFilterSourceVideoFile *)new svlFilterSourceVideoFile(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterSourceVideoFile, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceVideoFile(PyObject *self, PyObject *args) { int argc; PyObject *argv[2]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 0) {
    return _wrap_new_svlFilterSourceVideoFile__SWIG_0(self, args);}  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_svlFilterSourceVideoFile__SWIG_1(self, args);}  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_svlFilterSourceVideoFile'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::svlFilterSourceVideoFile()\n"
  "    svlFilterSourceVideoFile::svlFilterSourceVideoFile(unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_svlFilterSourceVideoFile(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterSourceVideoFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterSourceVideoFile" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetChannelCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetChannelCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetChannelCount" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_SetChannelCount" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SetChannelCount(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_DialogFilePath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_DialogFilePath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_DialogFilePath" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_DialogFilePath" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogFilePath(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_DialogFilePath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_DialogFilePath",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_DialogFilePath" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); result = (int)(arg1)->DialogFilePath();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_DialogFilePath(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_DialogFilePath__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoFile_DialogFilePath__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_DialogFilePath'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::DialogFilePath(unsigned int)\n"
  "    svlFilterSourceVideoFile::DialogFilePath()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetFilePath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetFilePath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetFilePath((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetFilePath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetFilePath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoFile_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)(arg1)->SetFilePath((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetFilePath(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_SetFilePath__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoFile_SetFilePath__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_SetFilePath'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::SetFilePath(std::string const &,unsigned int)\n"
  "    svlFilterSourceVideoFile::SetFilePath(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetFilePath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetFilePath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterSourceVideoFile const *)arg1)->GetFilePath(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetFilePath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetFilePath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoFile_GetFilePath" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); result = (int)((svlFilterSourceVideoFile const *)arg1)->GetFilePath(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetFilePath(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__string, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_GetFilePath__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__string, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoFile_GetFilePath__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetFilePath'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetFilePath(std::string &,unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetFilePath(std::string &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetPosition",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetPosition" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_SetPosition" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_SetPosition" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetPosition(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetPosition",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetPosition" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_SetPosition" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (int)(arg1)->SetPosition(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetPosition(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoFile_SetPosition__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoFile_SetPosition__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_SetPosition'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::SetPosition(int const,unsigned int)\n"
  "    svlFilterSourceVideoFile::SetPosition(int const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetPosition",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetPosition" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetPosition" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)((svlFilterSourceVideoFile const *)arg1)->GetPosition(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetPosition",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetPosition" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1);
  result = (int)((svlFilterSourceVideoFile const *)arg1)->GetPosition(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetPosition(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_GetPosition__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoFile_GetPosition__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetPosition'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetPosition(unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetPosition() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetRange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; int arg2 ; int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetRange",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->SetRange(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetRange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; int arg2 ; int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->SetRange(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetRange__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; vctInt2 arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); {   typedef vctInt2 VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj1) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj1)
    && vctThrowUnlessDimension1(obj1) && vctThrowUnlessCorrectVectorSize(obj1, arg2)) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg2)->ForceAssign(tempContainer); }
   ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetRange(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetRange__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; vctInt2 arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_SetRange",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_SetRange" "', argument " "1"" of type '" "svlFilterSourceVideoFile *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); {   typedef vctInt2 VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj1) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj1)
    && vctThrowUnlessDimension1(obj1) && vctThrowUnlessCorrectVectorSize(obj1, arg2)) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg2)->ForceAssign(tempContainer); }
   result = (int)(arg1)->SetRange(arg2); resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_SetRange(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { {  if (!PyArray_Check(argv[1])) { _v = 0; PyErr_Clear(); }  else { 
          if (PyArray_NDIM(argv[1]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) {
        return _wrap_svlFilterSourceVideoFile_SetRange__SWIG_3(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0); _v = SWIG_CheckState(res); if (_v) { { 
        if (!PyArray_Check(argv[1])) { _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[1]) != 1) { _v = 0;
            PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res); }  if (_v) { return _wrap_svlFilterSourceVideoFile_SetRange__SWIG_2(self, args);}  }  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoFile_SetRange__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterSourceVideoFile_SetRange__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_SetRange'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::SetRange(int const,int const,unsigned int)\n"
  "    svlFilterSourceVideoFile::SetRange(int const,int const)\n"
  "    svlFilterSourceVideoFile::SetRange(vctInt2 const,unsigned int)\n"
  "    svlFilterSourceVideoFile::SetRange(vctInt2 const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetRange__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; vctInt2 *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetRange",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetRange" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); {   typedef vctInt2 VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj1) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj1)
    && vctThrowUnlessDimension1(obj1) && vctThrowUnlessCorrectVectorSize(obj1, *(arg2)) && vctThrowUnlessIsWritable(obj1)
    && vctThrowUnlessOwnsData(obj1, *(arg2)) && vctThrowUnlessNotReferenced(obj1, *(arg2))) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg2 = new VectorType(tempContainer); }
   ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_GetRange" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterSourceVideoFile const *)arg1)->GetRange(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); {   typedef vctInt2 VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj1, 0); const VectorType::size_type output_size = arg2->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj1, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg2));  
    delete arg2; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetRange__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; vctInt2 *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetRange",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetRange" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); {   typedef vctInt2 VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj1) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj1)
    && vctThrowUnlessDimension1(obj1) && vctThrowUnlessCorrectVectorSize(obj1, *(arg2)) && vctThrowUnlessIsWritable(obj1)
    && vctThrowUnlessOwnsData(obj1, *(arg2)) && vctThrowUnlessNotReferenced(obj1, *(arg2))) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg2 = new VectorType(tempContainer); }
   result = (int)((svlFilterSourceVideoFile const *)arg1)->GetRange(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); {   typedef vctInt2 VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj1, 0); const VectorType::size_type output_size = arg2->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj1, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg2));  
    delete arg2; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetRange(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { {  if (!PyArray_Check(argv[1])) { _v = 0; PyErr_Clear(); }  else { 
          if (PyArray_NDIM(argv[1]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) {
        return _wrap_svlFilterSourceVideoFile_GetRange__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0); _v = SWIG_CheckState(res); if (_v) { { 
        if (!PyArray_Check(argv[1])) { _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[1]) != 1) { _v = 0;
            PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL);
          _v = SWIG_CheckState(res); }  if (_v) { return _wrap_svlFilterSourceVideoFile_GetRange__SWIG_0(self, args);}  }  }  } 
  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetRange'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetRange(vctInt2 &,unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetRange(vctInt2 &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetLength__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetLength",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetLength" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetLength" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)((svlFilterSourceVideoFile const *)arg1)->GetLength(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetLength__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetLength",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetLength" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1);
  result = (int)((svlFilterSourceVideoFile const *)arg1)->GetLength(); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetLength(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_GetLength__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoFile_GetLength__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetLength'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetLength(unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetLength() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetWidth",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetWidth" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetWidth" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned int)((svlFilterSourceVideoFile const *)arg1)->GetWidth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetWidth",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetWidth" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1);
  result = (unsigned int)((svlFilterSourceVideoFile const *)arg1)->GetWidth();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetWidth(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_GetWidth__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoFile_GetWidth__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetWidth'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetWidth(unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetWidth() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetHeight",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetHeight" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetHeight" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned int)((svlFilterSourceVideoFile const *)arg1)->GetHeight(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetHeight",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetHeight" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1);
  result = (unsigned int)((svlFilterSourceVideoFile const *)arg1)->GetHeight();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetHeight(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoFile_GetHeight__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoFile_GetHeight__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetHeight'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetHeight(unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetHeight() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetPositionAtTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; double arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetPositionAtTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetPositionAtTime" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetPositionAtTime" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_GetPositionAtTime" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)((svlFilterSourceVideoFile const *)arg1)->GetPositionAtTime(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetPositionAtTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; double arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetPositionAtTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetPositionAtTime" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetPositionAtTime" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (int)((svlFilterSourceVideoFile const *)arg1)->GetPositionAtTime(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetPositionAtTime(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoFile_GetPositionAtTime__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoFile_GetPositionAtTime__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetPositionAtTime'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetPositionAtTime(double const,unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetPositionAtTime(double const) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetTimeAtPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetTimeAtPosition",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetTimeAtPosition" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetTimeAtPosition" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoFile_GetTimeAtPosition" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (double)((svlFilterSourceVideoFile const *)arg1)->GetTimeAtPosition(arg2,arg3);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetTimeAtPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoFile *arg1 = (svlFilterSourceVideoFile *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoFile_GetTimeAtPosition",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoFile, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoFile_GetTimeAtPosition" "', argument " "1"" of type '" "svlFilterSourceVideoFile const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoFile * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoFile_GetTimeAtPosition" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (double)((svlFilterSourceVideoFile const *)arg1)->GetTimeAtPosition(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoFile_GetTimeAtPosition(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoFile_GetTimeAtPosition__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoFile, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoFile_GetTimeAtPosition__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoFile_GetTimeAtPosition'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoFile::GetTimeAtPosition(int const,unsigned int) const\n"
  "    svlFilterSourceVideoFile::GetTimeAtPosition(int const) const\n"); return 0; }
SWIGINTERN PyObject *svlFilterSourceVideoFile_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterSourceVideoFile, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterVideoFileWriter::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterVideoFileWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *result = 0 ;
  result = (svlFilterVideoFileWriter *)new svlFilterVideoFileWriter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterVideoFileWriter, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterVideoFileWriter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterVideoFileWriter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterVideoFileWriter" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogOpenFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_DialogOpenFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_DialogOpenFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_DialogOpenFile" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogOpenFile(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogOpenFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_DialogOpenFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_DialogOpenFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); result = (int)(arg1)->DialogOpenFile();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogOpenFile(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_DialogOpenFile__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_DialogOpenFile__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_DialogOpenFile'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::DialogOpenFile(unsigned int)\n"
  "    svlFilterVideoFileWriter::DialogOpenFile()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogFramerate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_DialogFramerate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_DialogFramerate" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_DialogFramerate" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogFramerate(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogFramerate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_DialogFramerate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_DialogFramerate" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); result = (int)(arg1)->DialogFramerate();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogFramerate(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_DialogFramerate__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_DialogFramerate__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_DialogFramerate'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::DialogFramerate(unsigned int)\n"
  "    svlFilterVideoFileWriter::DialogFramerate()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogCodec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_DialogCodec",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->DialogCodec((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogCodec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_DialogCodec",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_DialogCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)(arg1)->DialogCodec((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_DialogCodec(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_DialogCodec__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_DialogCodec__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_DialogCodec'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::DialogCodec(std::string const &,unsigned int)\n"
  "    svlFilterVideoFileWriter::DialogCodec(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetFilePath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetFilePath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetFilePath((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetFilePath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetFilePath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_SetFilePath" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)(arg1)->SetFilePath((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetFilePath(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_SetFilePath__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_SetFilePath__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_SetFilePath'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::SetFilePath(std::string const &,unsigned int)\n"
  "    svlFilterVideoFileWriter::SetFilePath(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetFramerate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; double arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetFramerate",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetFramerate" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_SetFramerate" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_SetFramerate" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetFramerate(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetFramerate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; double arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetFramerate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetFramerate" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_SetFramerate" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (int)(arg1)->SetFramerate(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetFramerate(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterVideoFileWriter_SetFramerate__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterVideoFileWriter_SetFramerate__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_SetFramerate'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::SetFramerate(double const,unsigned int)\n"
  "    svlFilterVideoFileWriter::SetFramerate(double const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetEnableTimestampsFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; bool arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetEnableTimestampsFile",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetEnableTimestampsFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_SetEnableTimestampsFile" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_SetEnableTimestampsFile" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetEnableTimestampsFile(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetEnableTimestampsFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetEnableTimestampsFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetEnableTimestampsFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_SetEnableTimestampsFile" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); result = (int)(arg1)->SetEnableTimestampsFile(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetEnableTimestampsFile(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterVideoFileWriter_SetEnableTimestampsFile__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterVideoFileWriter_SetEnableTimestampsFile__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_SetEnableTimestampsFile'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::SetEnableTimestampsFile(bool,unsigned int)\n"
  "    svlFilterVideoFileWriter::SetEnableTimestampsFile(bool)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetCodecParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ;
  svlVideoIO::Compression *arg2 = (svlVideoIO::Compression *) 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetCodecParams",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetCodecParams" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlVideoIO__Compression, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_SetCodecParams" "', argument " "2"" of type '" "svlVideoIO::Compression const *""'");  }
   arg2 = reinterpret_cast< svlVideoIO::Compression * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_SetCodecParams" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetCodecParams((svlVideoIO::Compression const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetCodecParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ;
  svlVideoIO::Compression *arg2 = (svlVideoIO::Compression *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SetCodecParams",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SetCodecParams" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlVideoIO__Compression, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_SetCodecParams" "', argument " "2"" of type '" "svlVideoIO::Compression const *""'");  }
   arg2 = reinterpret_cast< svlVideoIO::Compression * >(argp2);
  result = (int)(arg1)->SetCodecParams((svlVideoIO::Compression const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SetCodecParams(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlVideoIO__Compression, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlFilterVideoFileWriter_SetCodecParams__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlVideoIO__Compression, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterVideoFileWriter_SetCodecParams__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_SetCodecParams'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterVideoFileWriter::SetCodecParams(svlVideoIO::Compression const *,unsigned int)\n"
  "    svlFilterVideoFileWriter::SetCodecParams(svlVideoIO::Compression const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_ResetCodec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_ResetCodec",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_ResetCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_ResetCodec" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->ResetCodec(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_ResetCodec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_ResetCodec",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_ResetCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); result = (int)(arg1)->ResetCodec();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_ResetCodec(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_ResetCodec__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_ResetCodec__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_ResetCodec'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::ResetCodec(unsigned int)\n"
  "    svlFilterVideoFileWriter::ResetCodec()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SaveCodec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SaveCodec",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)((svlFilterVideoFileWriter const *)arg1)->SaveCodec((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SaveCodec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_SaveCodec",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_SaveCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)((svlFilterVideoFileWriter const *)arg1)->SaveCodec((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_SaveCodec(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_SaveCodec__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_SaveCodec__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_SaveCodec'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::SaveCodec(std::string const &,unsigned int) const\n"
  "    svlFilterVideoFileWriter::SaveCodec(std::string const &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_LoadCodec__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_LoadCodec",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->LoadCodec((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_LoadCodec__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_LoadCodec",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_LoadCodec" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)(arg1)->LoadCodec((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_LoadCodec(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_LoadCodec__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_LoadCodec__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_LoadCodec'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::LoadCodec(std::string const &,unsigned int)\n"
  "    svlFilterVideoFileWriter::LoadCodec(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::string result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetFilePath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = ((svlFilterVideoFileWriter const *)arg1)->GetFilePath(arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::string result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetFilePath",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  result = ((svlFilterVideoFileWriter const *)arg1)->GetFilePath();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetFilePath",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterVideoFileWriter const *)arg1)->GetFilePath(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetFilePath",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_GetFilePath" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); result = (int)((svlFilterVideoFileWriter const *)arg1)->GetFilePath(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFilePath(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__string, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_3(self, args);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__string, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_GetFilePath__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_GetFilePath'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::GetFilePath(unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetFilePath() const\n"
  "    svlFilterVideoFileWriter::GetFilePath(std::string &,unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetFilePath(std::string &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFramerate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  double result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetFramerate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetFramerate" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_GetFramerate" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (double)(arg1)->GetFramerate(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFramerate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetFramerate",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetFramerate" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); result = (double)(arg1)->GetFramerate();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetFramerate(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetFramerate__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_GetFramerate__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_GetFramerate'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::GetFramerate(unsigned int)\n"
  "    svlFilterVideoFileWriter::GetFramerate()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetEnableTimestampsFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetEnableTimestampsFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetEnableTimestampsFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_GetEnableTimestampsFile" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (bool)((svlFilterVideoFileWriter const *)arg1)->GetEnableTimestampsFile(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetEnableTimestampsFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetEnableTimestampsFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetEnableTimestampsFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  result = (bool)((svlFilterVideoFileWriter const *)arg1)->GetEnableTimestampsFile();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetEnableTimestampsFile(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetEnableTimestampsFile__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_GetEnableTimestampsFile__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_GetEnableTimestampsFile'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::GetEnableTimestampsFile(unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetEnableTimestampsFile() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  std::string result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = ((svlFilterVideoFileWriter const *)arg1)->GetCodecName(arg2);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; std::string result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecName",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  result = ((svlFilterVideoFileWriter const *)arg1)->GetCodecName();
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecName",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterVideoFileWriter const *)arg1)->GetCodecName(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecName",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_GetCodecName" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); result = (int)((svlFilterVideoFileWriter const *)arg1)->GetCodecName(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecName(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__string, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_3(self, args);}  }  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_std__string, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_GetCodecName__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_GetCodecName'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::GetCodecName(unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetCodecName() const\n"
  "    svlFilterVideoFileWriter::GetCodecName(std::string &,unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetCodecName(std::string &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  svlVideoIO::Compression *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecParams",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (svlVideoIO::Compression *)((svlFilterVideoFileWriter const *)arg1)->GetCodecParams(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlVideoIO__Compression, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlVideoIO::Compression *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecParams",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  result = (svlVideoIO::Compression *)((svlFilterVideoFileWriter const *)arg1)->GetCodecParams();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlVideoIO__Compression, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ;
  svlVideoIO::Compression **arg2 = (svlVideoIO::Compression **) 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecParams",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_svlVideoIO__Compression, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "2"" of type '" "svlVideoIO::Compression **""'");  }
   arg2 = reinterpret_cast< svlVideoIO::Compression ** >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterVideoFileWriter const *)arg1)->GetCodecParams(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ;
  svlVideoIO::Compression **arg2 = (svlVideoIO::Compression **) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetCodecParams",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_svlVideoIO__Compression, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_GetCodecParams" "', argument " "2"" of type '" "svlVideoIO::Compression **""'");  }
   arg2 = reinterpret_cast< svlVideoIO::Compression ** >(argp2);
  result = (int)((svlFilterVideoFileWriter const *)arg1)->GetCodecParams(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetCodecParams(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_svlVideoIO__Compression, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_3(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_svlVideoIO__Compression, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterVideoFileWriter_GetCodecParams__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_GetCodecParams'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::GetCodecParams(unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetCodecParams() const\n"
  "    svlFilterVideoFileWriter::GetCodecParams(svlVideoIO::Compression **,unsigned int) const\n"
  "    svlFilterVideoFileWriter::GetCodecParams(svlVideoIO::Compression **) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_OpenFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_OpenFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->OpenFile(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_OpenFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_OpenFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); result = (int)(arg1)->OpenFile();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_OpenFile__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_OpenFile",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->OpenFile((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_OpenFile__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; std::string *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_OpenFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterVideoFileWriter_OpenFile" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (int)(arg1)->OpenFile((std::string const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_OpenFile(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_OpenFile__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_OpenFile__SWIG_0(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_OpenFile__SWIG_3(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterVideoFileWriter_OpenFile__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_OpenFile'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::OpenFile(unsigned int)\n"
  "    svlFilterVideoFileWriter::OpenFile()\n" "    svlFilterVideoFileWriter::OpenFile(std::string const &,unsigned int)\n"
  "    svlFilterVideoFileWriter::OpenFile(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_CloseFile__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_CloseFile",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_CloseFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_CloseFile" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->CloseFile(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_CloseFile__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_CloseFile",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_CloseFile" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); result = (int)(arg1)->CloseFile();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_CloseFile(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_CloseFile__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterVideoFileWriter_CloseFile__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_CloseFile'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::CloseFile(unsigned int)\n"
  "    svlFilterVideoFileWriter::CloseFile()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_Record__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_Record",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_Record" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_Record" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); (arg1)->Record(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_Record__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_Record",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_Record" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); (arg1)->Record(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_Record(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_Record__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterVideoFileWriter_Record__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_Record'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::Record(int)\n"
  "    svlFilterVideoFileWriter::Record()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_RecordAtTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; int arg2 ; double arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_RecordAtTime",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_RecordAtTime" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_RecordAtTime" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_double(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterVideoFileWriter_RecordAtTime" "', argument " "3"" of type '" "double""'"); }
    arg3 = static_cast< double >(val3); (arg1)->RecordAtTime(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_RecordAtTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_RecordAtTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_RecordAtTime" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_RecordAtTime" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); (arg1)->RecordAtTime(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_RecordAtTime__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_RecordAtTime",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_RecordAtTime" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); (arg1)->RecordAtTime(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_RecordAtTime(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_RecordAtTime__SWIG_2(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterVideoFileWriter_RecordAtTime__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterVideoFileWriter_RecordAtTime__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_RecordAtTime'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::RecordAtTime(int,double)\n"
  "    svlFilterVideoFileWriter::RecordAtTime(int)\n" "    svlFilterVideoFileWriter::RecordAtTime()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_Pause(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_Pause",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_Pause" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); (arg1)->Pause(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_PauseAtTime__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; double arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_PauseAtTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_PauseAtTime" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterVideoFileWriter_PauseAtTime" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); (arg1)->PauseAtTime(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_PauseAtTime__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_PauseAtTime",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_PauseAtTime" "', argument " "1"" of type '" "svlFilterVideoFileWriter *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1); (arg1)->PauseAtTime(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_PauseAtTime(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterVideoFileWriter_PauseAtTime__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterVideoFileWriter, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterVideoFileWriter_PauseAtTime__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterVideoFileWriter_PauseAtTime'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterVideoFileWriter::PauseAtTime(double)\n"
  "    svlFilterVideoFileWriter::PauseAtTime()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterVideoFileWriter_GetIsRecording(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterVideoFileWriter *arg1 = (svlFilterVideoFileWriter *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterVideoFileWriter_GetIsRecording",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterVideoFileWriter, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterVideoFileWriter_GetIsRecording" "', argument " "1"" of type '" "svlFilterVideoFileWriter const *""'");  }
   arg1 = reinterpret_cast< svlFilterVideoFileWriter * >(argp1);
  result = (bool)((svlFilterVideoFileWriter const *)arg1)->GetIsRecording();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *svlFilterVideoFileWriter_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterVideoFileWriter, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterSourceBuffer_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterSourceBuffer::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterSourceBuffer *result = 0 ; result = (svlFilterSourceBuffer *)new svlFilterSourceBuffer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterSourceBuffer, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterSourceBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBuffer *arg1 = (svlFilterSourceBuffer *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterSourceBuffer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBuffer, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterSourceBuffer" "', argument " "1"" of type '" "svlFilterSourceBuffer *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBuffer * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBuffer_SetBuffer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBuffer *arg1 = (svlFilterSourceBuffer *) 0 ; svlBufferSample *arg2 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBuffer_SetBuffer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBuffer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBuffer_SetBuffer" "', argument " "1"" of type '" "svlFilterSourceBuffer *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBuffer * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlBufferSample,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceBuffer_SetBuffer" "', argument " "2"" of type '" "svlBufferSample &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceBuffer_SetBuffer" "', argument " "2"" of type '" "svlBufferSample &""'"); }
   arg2 = reinterpret_cast< svlBufferSample * >(argp2); result = (int)(arg1)->SetBuffer(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBuffer_SetTimeout__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBuffer *arg1 = (svlFilterSourceBuffer *) 0 ; double arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBuffer_SetTimeout",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBuffer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBuffer_SetTimeout" "', argument " "1"" of type '" "svlFilterSourceBuffer *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBuffer * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceBuffer_SetTimeout" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); (arg1)->SetTimeout(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBuffer_SetTimeout__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceBuffer *arg1 = (svlFilterSourceBuffer *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceBuffer_SetTimeout",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceBuffer, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceBuffer_SetTimeout" "', argument " "1"" of type '" "svlFilterSourceBuffer *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceBuffer * >(argp1); (arg1)->SetTimeout(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceBuffer_SetTimeout(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceBuffer, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlFilterSourceBuffer_SetTimeout__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceBuffer, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_double(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceBuffer_SetTimeout__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceBuffer_SetTimeout'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceBuffer::SetTimeout(double const)\n"
  "    svlFilterSourceBuffer::SetTimeout()\n"); return 0; }
SWIGINTERN PyObject *svlFilterSourceBuffer_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterSourceBuffer, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterImageChannelSwapper_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterImageChannelSwapper::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterImageChannelSwapper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageChannelSwapper *result = 0 ;
  result = (svlFilterImageChannelSwapper *)new svlFilterImageChannelSwapper();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterImageChannelSwapper, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterImageChannelSwapper(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageChannelSwapper *arg1 = (svlFilterImageChannelSwapper *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterImageChannelSwapper",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageChannelSwapper, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterImageChannelSwapper" "', argument " "1"" of type '" "svlFilterImageChannelSwapper *""'");  }
   arg1 = reinterpret_cast< svlFilterImageChannelSwapper * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *svlFilterImageChannelSwapper_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterImageChannelSwapper, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_delete_svlSampleImage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlSampleImage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlSampleImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetPixelType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  svlPixelType result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetPixelType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetPixelType" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = ((svlSampleImage const *)arg1)->GetPixelType();
  resultobj = SWIG_NewPointerObj((new svlPixelType(static_cast< const svlPixelType& >(result))), SWIGTYPE_p_svlPixelType, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetAlphaChannel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetAlphaChannel",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetAlphaChannel" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (int)((svlSampleImage const *)arg1)->GetAlphaChannel();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetNewInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  svlSample *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetNewInstance",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetNewInstance" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (svlSample *)((svlSampleImage const *)arg1)->GetNewInstance();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSample, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; svlStreamType result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetType" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = ((svlSampleImage const *)arg1)->GetType();
  resultobj = SWIG_NewPointerObj((new svlStreamType(static_cast< const svlStreamType& >(result))), SWIGTYPE_p_svlStreamType, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->SetSize((svlSample const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSample *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSample,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "svlSample const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "svlSample const &""'"); }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->SetSize((svlSample const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CopyOf" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->CopyOf((svlSample const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSample *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CopyOf" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSample,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "svlSample const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "svlSample const &""'"); }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->CopyOf((svlSample const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_IsInitialized(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_IsInitialized",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_IsInitialized" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (bool)((svlSampleImage const *)arg1)->IsInitialized();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned char *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetUCharPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned char *)(arg1)->GetUCharPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned char *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetUCharPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1);
  result = (unsigned char *)((svlSampleImage const *)arg1)->GetUCharPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetDataSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetDataSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetDataSize" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned int)((svlSampleImage const *)arg1)->GetDataSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_IplImageRef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; IplImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_IplImageRef",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_IplImageRef" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_IplImageRef" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (IplImage *)((svlSampleImage const *)arg1)->IplImageRef(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IplImage, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_IplImageRef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  IplImage *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_IplImageRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_IplImageRef" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (IplImage *)((svlSampleImage const *)arg1)->IplImageRef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IplImage, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_IplImageRef(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_IplImageRef__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_IplImageRef__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_IplImageRef'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::IplImageRef(unsigned int const) const\n"
  "    svlSampleImage::IplImageRef() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CvMatRef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; cv::Mat result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CvMatRef",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CvMatRef" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_CvMatRef" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = ((svlSampleImage const *)arg1)->CvMatRef(arg2);
  resultobj = SWIG_NewPointerObj((new cv::Mat(static_cast< const cv::Mat& >(result))), SWIGTYPE_p_cv__Mat, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CvMatRef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  cv::Mat result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CvMatRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CvMatRef" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = ((svlSampleImage const *)arg1)->CvMatRef();
  resultobj = SWIG_NewPointerObj((new cv::Mat(static_cast< const cv::Mat& >(result))), SWIGTYPE_p_cv__Mat, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CvMatRef(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_CvMatRef__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_CvMatRef__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_CvMatRef'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::CvMatRef(unsigned int const) const\n"
  "    svlSampleImage::CvMatRef() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetUCharPointer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned char *)(arg1)->GetUCharPointer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetUCharPointer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned char *)((svlSampleImage const *)arg1)->GetUCharPointer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetUCharPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (unsigned char *)(arg1)->GetUCharPointer(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetUCharPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_GetUCharPointer" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  result = (unsigned char *)((svlSampleImage const *)arg1)->GetUCharPointer(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetUCharPointer(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_GetUCharPointer__SWIG_0(self, args);}  }  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      return _wrap_svlSampleImage_GetUCharPointer__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_GetUCharPointer__SWIG_2(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_GetUCharPointer__SWIG_3(self, args);}  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_GetUCharPointer__SWIG_4(self, args);}  }  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_GetUCharPointer__SWIG_5(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_GetUCharPointer'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::GetUCharPointer()\n" "    svlSampleImage::GetUCharPointer() const\n"
  "    svlSampleImage::GetUCharPointer(unsigned int const)\n" "    svlSampleImage::GetUCharPointer(unsigned int const) const\n"
  "    svlSampleImage::GetUCharPointer(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImage::GetUCharPointer(unsigned int const,unsigned int const,unsigned int const) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); (arg1)->SetSize(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_SetSize" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); (arg1)->SetSize(arg2,arg3,arg4); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; IplImage *arg2 = (IplImage *) 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetSize((IplImage const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; IplImage *arg2 = (IplImage *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); result = (int)(arg1)->SetSize((IplImage const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; cv::Mat *arg2 = 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetSize((cv::Mat const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; cv::Mat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_SetSize" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); result = (int)(arg1)->SetSize((cv::Mat const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_SetSize(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSample, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_svlSampleImage_SetSize__SWIG_0(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSample, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_SetSize__SWIG_1(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_SetSize__SWIG_5(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_SetSize__SWIG_7(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_SetSize__SWIG_6(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_SetSize__SWIG_4(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_SetSize__SWIG_2(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_SetSize__SWIG_3(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_SetSize'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::SetSize(svlSample const *)\n"
  "    svlSampleImage::SetSize(svlSample const &)\n" "    svlSampleImage::SetSize(unsigned int const,unsigned int const)\n"
  "    svlSampleImage::SetSize(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImage::SetSize(IplImage const *,unsigned int const)\n" "    svlSampleImage::SetSize(IplImage const *)\n"
  "    svlSampleImage::SetSize(cv::Mat const &,unsigned int const)\n" "    svlSampleImage::SetSize(cv::Mat const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; IplImage *arg2 = (IplImage *) 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CopyOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CopyOf" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_CopyOf" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->CopyOf((IplImage const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; IplImage *arg2 = (IplImage *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CopyOf" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); result = (int)(arg1)->CopyOf((IplImage const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; cv::Mat *arg2 = 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CopyOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CopyOf" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_CopyOf" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->CopyOf((cv::Mat const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; cv::Mat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_CopyOf" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); result = (int)(arg1)->CopyOf((cv::Mat const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_CopyOf(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSample, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_svlSampleImage_CopyOf__SWIG_0(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSample, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_CopyOf__SWIG_1(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_CopyOf__SWIG_3(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_CopyOf__SWIG_5(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_CopyOf__SWIG_4(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_CopyOf__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_CopyOf'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::CopyOf(svlSample const *)\n"
  "    svlSampleImage::CopyOf(svlSample const &)\n" "    svlSampleImage::CopyOf(IplImage const *,unsigned int const)\n"
  "    svlSampleImage::CopyOf(IplImage const *)\n" "    svlSampleImage::CopyOf(cv::Mat const &,unsigned int const)\n"
  "    svlSampleImage::CopyOf(cv::Mat const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetVideoChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetVideoChannels",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetVideoChannels" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1);
  result = (unsigned int)((svlSampleImage const *)arg1)->GetVideoChannels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetDataChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetDataChannels",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetDataChannels" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned int)((svlSampleImage const *)arg1)->GetDataChannels();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetBPP(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetBPP",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetBPP" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned int)((svlSampleImage const *)arg1)->GetBPP();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetWidth",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetWidth" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetWidth" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned int)((svlSampleImage const *)arg1)->GetWidth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetWidth",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetWidth" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned int)((svlSampleImage const *)arg1)->GetWidth();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetWidth(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_GetWidth__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_GetWidth__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_GetWidth'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::GetWidth(unsigned int const) const\n"
  "    svlSampleImage::GetWidth() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetHeight",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetHeight" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetHeight" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned int)((svlSampleImage const *)arg1)->GetHeight(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetHeight",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetHeight" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned int)((svlSampleImage const *)arg1)->GetHeight();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetHeight(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_GetHeight__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_GetHeight__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_GetHeight'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::GetHeight(unsigned int const) const\n"
  "    svlSampleImage::GetHeight() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetRowStride__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetRowStride",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetRowStride" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetRowStride" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned int)((svlSampleImage const *)arg1)->GetRowStride(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetRowStride__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetRowStride",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetRowStride" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); result = (unsigned int)((svlSampleImage const *)arg1)->GetRowStride();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetRowStride(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_GetRowStride__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_GetRowStride__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_GetRowStride'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::GetRowStride(unsigned int const) const\n"
  "    svlSampleImage::GetRowStride() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetDataSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetDataSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetDataSize" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetDataSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned int)((svlSampleImage const *)arg1)->GetDataSize(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetDataSize(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlSampleImage_GetDataSize__SWIG_0(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlSampleImage_GetDataSize__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_GetDataSize'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::GetDataSize() const\n"
  "    svlSampleImage::GetDataSize(unsigned int const) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetSubImage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetSubImage",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetSubImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetSubImage" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_GetSubImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_GetSubImage" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (svlSampleImage *)(arg1)->GetSubImage(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetSubImage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetSubImage",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetSubImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImage_GetSubImage" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_GetSubImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (svlSampleImage *)(arg1)->GetSubImage(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetSubImage__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlProcInfo *arg2 = (svlProcInfo *) 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetSubImage",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetSubImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_GetSubImage" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_GetSubImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (svlSampleImage *)(arg1)->GetSubImage(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetSubImage__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlProcInfo *arg2 = (svlProcInfo *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  svlSampleImage *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_GetSubImage",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_GetSubImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_GetSubImage" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); result = (svlSampleImage *)(arg1)->GetSubImage(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_GetSubImage(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlProcInfo, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_svlSampleImage_GetSubImage__SWIG_3(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlProcInfo, 0); _v = SWIG_CheckState(res); if (_v) {
        { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_GetSubImage__SWIG_2(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_GetSubImage__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_GetSubImage__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_GetSubImage'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlSampleImage::GetSubImage(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImage::GetSubImage(unsigned int const,unsigned int const)\n"
  "    svlSampleImage::GetSubImage(svlProcInfo *,unsigned int const)\n" "    svlSampleImage::GetSubImage(svlProcInfo *)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned int arg3 ; int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlSampleImage_ImportData" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); result = (int)(arg1)->ImportData(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); result = (int)(arg1)->ImportData(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->ImportData(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned short *arg2 = (unsigned short *) 0 ;
  unsigned int arg3 ; int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned short *""'");  }
   arg2 = reinterpret_cast< unsigned short * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlSampleImage_ImportData" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); result = (int)(arg1)->ImportData(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned short *arg2 = (unsigned short *) 0 ;
  unsigned int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned short *""'");  }
   arg2 = reinterpret_cast< unsigned short * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); result = (int)(arg1)->ImportData(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned short *arg2 = (unsigned short *) 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned short *""'");  }
   arg2 = reinterpret_cast< unsigned short * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->ImportData(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int *arg2 = (unsigned int *) 0 ;
  unsigned int arg3 ; int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlSampleImage_ImportData" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); result = (int)(arg1)->ImportData(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int *arg2 = (unsigned int *) 0 ;
  unsigned int arg3 ; int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); result = (int)(arg1)->ImportData(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int *arg2 = (unsigned int *) 0 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->ImportData(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; float *arg2 = (float *) 0 ; unsigned int arg3 ;
  int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "float *""'");  }
   arg2 = reinterpret_cast< float * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlSampleImage_ImportData" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); result = (int)(arg1)->ImportData(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_10(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; float *arg2 = (float *) 0 ; unsigned int arg3 ;
  int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; int val4 ;
  int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "float *""'");  }
   arg2 = reinterpret_cast< float * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportData" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); result = (int)(arg1)->ImportData(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData__SWIG_11(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; float *arg2 = (float *) 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportData",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportData" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportData" "', argument " "2"" of type '" "float *""'");  }
   arg2 = reinterpret_cast< float * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportData" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->ImportData(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportData(PyObject *self, PyObject *args) { int argc; PyObject *argv[6]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportData__SWIG_2(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportData__SWIG_5(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportData__SWIG_8(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportData__SWIG_11(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportData__SWIG_7(self, args);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportData__SWIG_4(self, args);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportData__SWIG_10(self, args);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportData__SWIG_1(self, args);}  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlSampleImage_ImportData__SWIG_3(self, args);}  }  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlSampleImage_ImportData__SWIG_9(self, args);}  }  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlSampleImage_ImportData__SWIG_6(self, args);}  }  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlSampleImage_ImportData__SWIG_0(self, args);}  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_ImportData'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlSampleImage::ImportData(unsigned char *,unsigned int const,int const,unsigned int const)\n"
  "    svlSampleImage::ImportData(unsigned char *,unsigned int const,int const)\n"
  "    svlSampleImage::ImportData(unsigned char *,unsigned int const)\n"
  "    svlSampleImage::ImportData(unsigned short *,unsigned int const,int const,unsigned int const)\n"
  "    svlSampleImage::ImportData(unsigned short *,unsigned int const,int const)\n"
  "    svlSampleImage::ImportData(unsigned short *,unsigned int const)\n"
  "    svlSampleImage::ImportData(unsigned int *,unsigned int const,int const,unsigned int const)\n"
  "    svlSampleImage::ImportData(unsigned int *,unsigned int const,int const)\n"
  "    svlSampleImage::ImportData(unsigned int *,unsigned int const)\n"
  "    svlSampleImage::ImportData(float *,unsigned int const,int const,unsigned int const)\n"
  "    svlSampleImage::ImportData(float *,unsigned int const,int const)\n"
  "    svlSampleImage::ImportData(float *,unsigned int const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = (svlSampleImage *) 0 ;
  int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const *""'");  }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportImage" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->ImportImage((svlSampleImage const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = (svlSampleImage *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const *""'");  }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); result = (int)(arg1)->ImportImage((svlSampleImage const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = 0 ; int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSampleImage,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'"); }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportImage" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->ImportImage((svlSampleImage const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSampleImage,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'"); }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); result = (int)(arg1)->ImportImage((svlSampleImage const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = (svlSampleImage *) 0 ;
  unsigned int arg3 ; unsigned int arg4 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const *""'");  }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportImage" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlSampleImage_ImportImage" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); result = (int)(arg1)->ImportImage((svlSampleImage const *)arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = (svlSampleImage *) 0 ;
  unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const *""'");  }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportImage" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->ImportImage((svlSampleImage const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = 0 ; unsigned int arg3 ;
  unsigned int arg4 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSampleImage,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'"); }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportImage" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlSampleImage_ImportImage" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); result = (int)(arg1)->ImportImage((svlSampleImage const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleImage *arg2 = 0 ; unsigned int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportImage",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportImage" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSampleImage,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImage_ImportImage" "', argument " "2"" of type '" "svlSampleImage const &""'"); }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportImage" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->ImportImage((svlSampleImage const &)*arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportImage(PyObject *self, PyObject *args) { int argc; PyObject *argv[6]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImage, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImage_ImportImage__SWIG_1(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
        return _wrap_svlSampleImage_ImportImage__SWIG_3(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportImage__SWIG_2(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportImage__SWIG_0(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportImage__SWIG_5(self, args);}  }  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportImage__SWIG_7(self, args);}  }  }  }  }  if (argc == 5) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlSampleImage_ImportImage__SWIG_6(self, args);}  }  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImage, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlSampleImage_ImportImage__SWIG_4(self, args);}  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_ImportImage'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::ImportImage(svlSampleImage const *,int const)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const *)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const &,int const)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const &)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const *,unsigned int const,unsigned int const,int const)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const *,unsigned int const,unsigned int const)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const &,unsigned int const,unsigned int const,int const)\n"
  "    svlSampleImage::ImportImage(svlSampleImage const &,unsigned int const,unsigned int const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleMatrix *arg2 = (svlSampleMatrix *) 0 ;
  int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportMatrix",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportMatrix" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportMatrix" "', argument " "2"" of type '" "svlSampleMatrix const *""'");  }
   arg2 = reinterpret_cast< svlSampleMatrix * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportMatrix" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImage_ImportMatrix" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->ImportMatrix((svlSampleMatrix const *)arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleMatrix *arg2 = (svlSampleMatrix *) 0 ;
  int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportMatrix",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportMatrix" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportMatrix" "', argument " "2"" of type '" "svlSampleMatrix const *""'");  }
   arg2 = reinterpret_cast< svlSampleMatrix * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportMatrix" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->ImportMatrix((svlSampleMatrix const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportMatrix__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSampleMatrix *arg2 = (svlSampleMatrix *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportMatrix",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportMatrix" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportMatrix" "', argument " "2"" of type '" "svlSampleMatrix const *""'");  }
   arg2 = reinterpret_cast< svlSampleMatrix * >(argp2); result = (int)(arg1)->ImportMatrix((svlSampleMatrix const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportMatrix(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleMatrix, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImage_ImportMatrix__SWIG_2(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleMatrix, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportMatrix__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleMatrix, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImage_ImportMatrix__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_ImportMatrix'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlSampleImage::ImportMatrix(svlSampleMatrix const *,int const,unsigned int const)\n"
  "    svlSampleImage::ImportMatrix(svlSampleMatrix const *,int const)\n"
  "    svlSampleImage::ImportMatrix(svlSampleMatrix const *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportSample__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportSample",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportSample" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportSample" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->ImportSample((svlSample const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportSample__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImage *arg1 = (svlSampleImage *) 0 ; svlSample *arg2 = (svlSample *) 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImage_ImportSample",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImage_ImportSample" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImage_ImportSample" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImage_ImportSample" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->ImportSample((svlSample const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImage_ImportSample(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSample, 0); _v = SWIG_CheckState(res);
      if (_v) { return _wrap_svlSampleImage_ImportSample__SWIG_0(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSample, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImage_ImportSample__SWIG_1(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImage_ImportSample'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImage::ImportSample(svlSample const *)\n"
  "    svlSampleImage::ImportSample(svlSample const *,unsigned int const)\n"); return 0; }
SWIGINTERN PyObject *svlSampleImage_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlSampleImage, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlSampleImageRGB_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlSampleImageCustom< unsigned char,3,1 >::SWIGTEMPLATEDISAMBIGUATOR ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_Services(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; cmnClassServicesBase *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_Services",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_Services" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (cmnClassServicesBase *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->Services();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlSampleImageRGB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *result = 0 ;
  result = (svlSampleImageCustom< unsigned char,3,1 > *)new svlSampleImageCustom< unsigned char,3,1 >();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlSampleImageRGB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; bool arg1 ; bool val1 ; int ecode1 = 0 ; PyObject * obj0 = 0 ;
  svlSampleImageCustom< unsigned char,3,1 > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_svlSampleImageRGB",1,1,&obj0)) SWIG_fail; ecode1 = SWIG_AsVal_bool(obj0, &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_svlSampleImageRGB" "', argument " "1"" of type '" "bool""'"); }
    arg1 = static_cast< bool >(val1);
  result = (svlSampleImageCustom< unsigned char,3,1 > *)new svlSampleImageCustom< unsigned char,3,1 >(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlSampleImageRGB__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlSampleImageCustom< unsigned char,3,1 > *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_svlSampleImageRGB",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t,  0  | 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_svlSampleImageRGB" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const &""'");  }
   if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_svlSampleImageRGB" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const &""'"); }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (svlSampleImageCustom< unsigned char,3,1 > *)new svlSampleImageCustom< unsigned char,3,1 >((svlSampleImageCustom< unsigned char,3,1 > const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlSampleImageRGB(PyObject *self, PyObject *args) { int argc; PyObject *argv[2]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 0) {
    return _wrap_new_svlSampleImageRGB__SWIG_0(self, args);}  if (argc == 1) { int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_new_svlSampleImageRGB__SWIG_2(self, args);}  }  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_bool(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_svlSampleImageRGB__SWIG_1(self, args);}  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_svlSampleImageRGB'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::svlSampleImageCustom()\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::svlSampleImageCustom(bool)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::svlSampleImageCustom(svlSampleImageCustom< unsigned char,3,1 > const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_delete_svlSampleImageRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlSampleImageRGB",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlSampleImageRGB" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->SetSize((svlSample const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  svlSample *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSample,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "svlSample const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "svlSample const &""'"); }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->SetSize((svlSample const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->CopyOf((svlSample const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  svlSample *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSample,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "svlSample const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "svlSample const &""'"); }
   arg2 = reinterpret_cast< svlSample * >(argp2); result = (int)(arg1)->CopyOf((svlSample const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetUCharPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned char *)(arg1)->GetUCharPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetUCharPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned char *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetUCharPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetDataSize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetDataSize",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetDataSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetDataSize();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_IplImageRef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; IplImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_IplImageRef",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_IplImageRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_IplImageRef" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (IplImage *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->IplImageRef(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IplImage, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_IplImageRef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; IplImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_IplImageRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_IplImageRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (IplImage *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->IplImageRef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_IplImage, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_IplImageRef(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_IplImageRef__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_IplImageRef__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_IplImageRef'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::IplImageRef(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::IplImageRef() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CvMatRef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; cv::Mat result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CvMatRef",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CvMatRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_CvMatRef" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = ((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->CvMatRef(arg2);
  resultobj = SWIG_NewPointerObj((new cv::Mat(static_cast< const cv::Mat& >(result))), SWIGTYPE_p_cv__Mat, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CvMatRef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; cv::Mat result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CvMatRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CvMatRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = ((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->CvMatRef();
  resultobj = SWIG_NewPointerObj((new cv::Mat(static_cast< const cv::Mat& >(result))), SWIGTYPE_p_cv__Mat, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CvMatRef(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_CvMatRef__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_CvMatRef__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_CvMatRef'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::CvMatRef(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::CvMatRef() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetUCharPointer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned char *)(arg1)->GetUCharPointer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetUCharPointer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned char *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetUCharPointer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetUCharPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (unsigned char *)(arg1)->GetUCharPointer(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetUCharPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImageRGB_GetUCharPointer" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  result = (unsigned char *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetUCharPointer(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetUCharPointer(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetUCharPointer__SWIG_0(self, args);}  } 
  if (argc == 1) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetUCharPointer__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetUCharPointer__SWIG_2(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetUCharPointer__SWIG_3(self, args);}  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImageRGB_GetUCharPointer__SWIG_4(self, args);}  }  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImageRGB_GetUCharPointer__SWIG_5(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetUCharPointer'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetUCharPointer()\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetUCharPointer() const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetUCharPointer(unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetUCharPointer(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetUCharPointer(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetUCharPointer(unsigned int const,unsigned int const,unsigned int const) const\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); (arg1)->SetSize(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImageRGB_SetSize" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); (arg1)->SetSize(arg2,arg3,arg4); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  IplImage *arg2 = (IplImage *) 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetSize((IplImage const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  IplImage *arg2 = (IplImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); result = (int)(arg1)->SetSize((IplImage const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  cv::Mat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_SetSize" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetSize((cv::Mat const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  cv::Mat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_SetSize" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); result = (int)(arg1)->SetSize((cv::Mat const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetSize(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSample, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_SetSize__SWIG_0(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSample, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_SetSize__SWIG_1(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_SetSize__SWIG_5(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_SetSize__SWIG_7(self, args);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlSampleImageRGB_SetSize__SWIG_6(self, args);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlSampleImageRGB_SetSize__SWIG_4(self, args);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImageRGB_SetSize__SWIG_2(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImageRGB_SetSize__SWIG_3(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_SetSize'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(svlSample const *)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(svlSample const &)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(unsigned int const,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(IplImage const *,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(IplImage const *)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(cv::Mat const &,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetSize(cv::Mat const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  IplImage *arg2 = (IplImage *) 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CopyOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->CopyOf((IplImage const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  IplImage *arg2 = (IplImage *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_IplImage, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "IplImage const *""'");  }
   arg2 = reinterpret_cast< IplImage * >(argp2); result = (int)(arg1)->CopyOf((IplImage const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  cv::Mat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CopyOf",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->CopyOf((cv::Mat const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  cv::Mat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_CopyOf",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0  | 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_CopyOf" "', argument " "2"" of type '" "cv::Mat const &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); result = (int)(arg1)->CopyOf((cv::Mat const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_CopyOf(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSample, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_CopyOf__SWIG_0(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlSample, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_CopyOf__SWIG_1(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_CopyOf__SWIG_3(self, args);}  }  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_CopyOf__SWIG_5(self, args);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_cv__Mat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlSampleImageRGB_CopyOf__SWIG_4(self, args);}  }  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_IplImage, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlSampleImageRGB_CopyOf__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_CopyOf'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::CopyOf(svlSample const *)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::CopyOf(svlSample const &)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::CopyOf(IplImage const *,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::CopyOf(IplImage const *)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::CopyOf(cv::Mat const &,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::CopyOf(cv::Mat const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetWidth",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetWidth" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetWidth" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetWidth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetWidth",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetWidth" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetWidth();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetWidth(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetWidth__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetWidth__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetWidth'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetWidth(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetWidth() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetHeight",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetHeight" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetHeight" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetHeight(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetHeight",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetHeight" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetHeight();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetHeight(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetHeight__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetHeight__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetHeight'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetHeight(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetHeight() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetRowStride__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetRowStride",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetRowStride" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetRowStride" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetRowStride(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetRowStride__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetRowStride",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetRowStride" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetRowStride();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetRowStride(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetRowStride__SWIG_1(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetRowStride__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetRowStride'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetRowStride(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetRowStride() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetDataSize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetDataSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetDataSize" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetDataSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetDataSize(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetDataSize(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetDataSize__SWIG_0(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetDataSize__SWIG_1(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetDataSize'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetDataSize() const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetDataSize(unsigned int const) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetSubImage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetSubImage",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (svlSampleImage *)(arg1)->GetSubImage(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetSubImage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetSubImage",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (svlSampleImage *)(arg1)->GetSubImage(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetSubImage__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  svlProcInfo *arg2 = (svlProcInfo *) 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetSubImage",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (svlSampleImage *)(arg1)->GetSubImage(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetSubImage__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  svlProcInfo *arg2 = (svlProcInfo *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; svlSampleImage *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetSubImage",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_GetSubImage" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); result = (svlSampleImage *)(arg1)->GetSubImage(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleImage, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetSubImage(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlProcInfo, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetSubImage__SWIG_3(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlProcInfo, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlSampleImageRGB_GetSubImage__SWIG_2(self, args);}  }  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlSampleImageRGB_GetSubImage__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImageRGB_GetSubImage__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetSubImage'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetSubImage(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetSubImage(unsigned int const,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetSubImage(svlProcInfo *,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetSubImage(svlProcInfo *)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetMatrix__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  cv::Mat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetMatrix",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "2"" of type '" "cv::Mat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "2"" of type '" "cv::Mat &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetMatrix(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetMatrix__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  cv::Mat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_SetMatrix",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_cv__Mat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "2"" of type '" "cv::Mat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlSampleImageRGB_SetMatrix" "', argument " "2"" of type '" "cv::Mat &""'"); }
   arg2 = reinterpret_cast< cv::Mat * >(argp2); result = (int)(arg1)->SetMatrix(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_SetMatrix(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_cv__Mat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_SetMatrix__SWIG_3(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_cv__Mat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlSampleImageRGB_SetMatrix__SWIG_2(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_SetMatrix'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::SetMatrix(cv::Mat &,unsigned int)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::SetMatrix(cv::Mat &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetMatrixRef__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetMatrixRef",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetMatrixRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetMatrixRef" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); {   typedef vctDynamicMatrixRef< unsigned char > MatrixType;
    MatrixType ref((arg1)->GetMatrixRef(arg2)); npy_intp *sizes = PyDimMem_NEW(2); sizes[0] = ref.rows(); sizes[1] = ref.cols();
    int type = vctPythonType<MatrixType::value_type>(); resultobj = PyArray_SimpleNew(2, sizes, type);  
    const npy_intp size0 = ref.rows(); const npy_intp size1 = ref.cols(); const npy_intp stride0 = size1;
    const npy_intp stride1 = 1; const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(resultobj));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(ref); }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetMatrixRef__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetMatrixRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetMatrixRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1); {  
    typedef vctDynamicMatrixRef< unsigned char > MatrixType; MatrixType ref((arg1)->GetMatrixRef());
    npy_intp *sizes = PyDimMem_NEW(2); sizes[0] = ref.rows(); sizes[1] = ref.cols();
    int type = vctPythonType<MatrixType::value_type>(); resultobj = PyArray_SimpleNew(2, sizes, type);  
    const npy_intp size0 = ref.rows(); const npy_intp size1 = ref.cols(); const npy_intp stride0 = size1;
    const npy_intp stride1 = 1; const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(resultobj));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(ref); }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetMatrixRef__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; vctDynamicConstMatrixRef< unsigned char > result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetMatrixRef",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetMatrixRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetMatrixRef" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = ((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetMatrixRef(arg2); {  
    typedef vctDynamicConstMatrixRef< unsigned char > MatrixType; npy_intp *sizes = PyDimMem_NEW(2);
    sizes[0] = (&result)->rows(); sizes[1] = (&result)->cols();  int type = vctPythonType<MatrixType::value_type>();
    PyArray_Descr *descr = PyArray_DescrFromType(type);
    resultobj = PyArray_NewFromDescr(&PyArray_Type, descr,  2, sizes, NULL, NULL, NPY_CARRAY, NULL);
    PyArray_FLAGS(resultobj) &= ~NPY_WRITEABLE;   const npy_intp size0 = PyArray_DIM(resultobj, 0);
    const npy_intp size1 = PyArray_DIM(resultobj, 1);
    const npy_intp stride0 = PyArray_STRIDE(resultobj, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(resultobj, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(resultobj));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(result); }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetMatrixRef__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; vctDynamicConstMatrixRef< unsigned char > result;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetMatrixRef",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetMatrixRef" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = ((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetMatrixRef(); {  
    typedef vctDynamicConstMatrixRef< unsigned char > MatrixType; npy_intp *sizes = PyDimMem_NEW(2);
    sizes[0] = (&result)->rows(); sizes[1] = (&result)->cols();  int type = vctPythonType<MatrixType::value_type>();
    PyArray_Descr *descr = PyArray_DescrFromType(type);
    resultobj = PyArray_NewFromDescr(&PyArray_Type, descr,  2, sizes, NULL, NULL, NPY_CARRAY, NULL);
    PyArray_FLAGS(resultobj) &= ~NPY_WRITEABLE;   const npy_intp size0 = PyArray_DIM(resultobj, 0);
    const npy_intp size1 = PyArray_DIM(resultobj, 1);
    const npy_intp stride0 = PyArray_STRIDE(resultobj, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(resultobj, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(resultobj));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(result); }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetMatrixRef(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetMatrixRef__SWIG_1(self, args);}  }  if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetMatrixRef__SWIG_3(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetMatrixRef__SWIG_0(self, args);}  }  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetMatrixRef__SWIG_2(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetMatrixRef'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetMatrixRef(unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetMatrixRef()\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetMatrixRef(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetMatrixRef() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetPointer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (unsigned char *)(arg1)->GetPointer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned char *)(arg1)->GetPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetPointer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned char *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetPointer(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetPointer",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  result = (unsigned char *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetPointer();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (unsigned char *)(arg1)->GetPointer(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlSampleImageCustom< unsigned char,3,1 > *arg1 = (svlSampleImageCustom< unsigned char,3,1 > *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlSampleImageRGB_GetPointer",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "1"" of type '" "svlSampleImageCustom< unsigned char,3,1 > const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageCustom< unsigned char,3,1 > * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlSampleImageRGB_GetPointer" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  result = (unsigned char *)((svlSampleImageCustom< unsigned char,3,1 > const *)arg1)->GetPointer(arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlSampleImageRGB_GetPointer(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetPointer__SWIG_1(self, args);}  }  if (argc == 1) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlSampleImageRGB_GetPointer__SWIG_3(self, args);}  }  if (argc == 2) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetPointer__SWIG_0(self, args);}  }  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlSampleImageRGB_GetPointer__SWIG_2(self, args);}  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImageRGB_GetPointer__SWIG_4(self, args);}  }  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlSampleImageRGB_GetPointer__SWIG_5(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlSampleImageRGB_GetPointer'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlSampleImageCustom< unsigned char,3,1 >::GetPointer(unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetPointer()\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetPointer(unsigned int const) const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetPointer() const\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetPointer(unsigned int const,unsigned int const,unsigned int const)\n"
  "    svlSampleImageCustom< unsigned char,3,1 >::GetPointer(unsigned int const,unsigned int const,unsigned int const) const\n");
  return 0; }
SWIGINTERN PyObject *svlSampleImageRGB_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlSampleImageCustomT_unsigned_char_3_1_t, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_Internals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessing::Internals *result = 0 ; result = (svlImageProcessing::Internals *)new svlImageProcessing::Internals();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageProcessing__Internals, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_Internals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessing::Internals *arg1 = (svlImageProcessing::Internals *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_Internals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessing__Internals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_Internals" "', argument " "1"" of type '" "svlImageProcessing::Internals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessing::Internals * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_Internals_Get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessing::Internals *arg1 = (svlImageProcessing::Internals *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlImageProcessingInternals *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"Internals_Get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessing__Internals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Internals_Get" "', argument " "1"" of type '" "svlImageProcessing::Internals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessing::Internals * >(argp1); result = (svlImageProcessingInternals *)(arg1)->Get();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageProcessingInternals, 0 |  0 ); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_Internals_Set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessing::Internals *arg1 = (svlImageProcessing::Internals *) 0 ;
  svlImageProcessingInternals *arg2 = (svlImageProcessingInternals *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"Internals_Set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessing__Internals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Internals_Set" "', argument " "1"" of type '" "svlImageProcessing::Internals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessing::Internals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlImageProcessingInternals, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "Internals_Set" "', argument " "2"" of type '" "svlImageProcessingInternals *""'");  }
   arg2 = reinterpret_cast< svlImageProcessingInternals * >(argp2); (arg1)->Set(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Internals_Release(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessing::Internals *arg1 = (svlImageProcessing::Internals *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"Internals_Release",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessing__Internals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Internals_Release" "', argument " "1"" of type '" "svlImageProcessing::Internals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessing::Internals * >(argp1); (arg1)->Release(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *Internals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlImageProcessing__Internals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_Convolution__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; vctDynamicVector< double > arg5 ; vctDynamicVector< double > arg6 ; bool arg7 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  bool val7 ; int ecode7 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Convolution",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Convolution" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Convolution" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Convolution" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Convolution" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); {   typedef vctDynamicVector< double > VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj4) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4)
    && vctThrowUnlessDimension1(obj4) && vctThrowUnlessCorrectVectorSize(obj4, arg5)) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg5)->ForceAssign(tempContainer); }
   {   typedef vctDynamicVector< double > VectorType; if (!(   vctThrowUnlessIsPyArray(obj5)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5) && vctThrowUnlessDimension1(obj5)
    && vctThrowUnlessCorrectVectorSize(obj5, arg6)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg6)->ForceAssign(tempContainer); }
   ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "Convolution" "', argument " "7"" of type '" "bool""'"); }  
  arg7 = static_cast< bool >(val7); result = (int)svlImageProcessing::Convolution(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Convolution__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; vctDynamicVector< double > arg5 ; vctDynamicVector< double > arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Convolution",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Convolution" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Convolution" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Convolution" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Convolution" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); {   typedef vctDynamicVector< double > VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj4) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4)
    && vctThrowUnlessDimension1(obj4) && vctThrowUnlessCorrectVectorSize(obj4, arg5)) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg5)->ForceAssign(tempContainer); }
   {   typedef vctDynamicVector< double > VectorType; if (!(   vctThrowUnlessIsPyArray(obj5)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5) && vctThrowUnlessDimension1(obj5)
    && vctThrowUnlessCorrectVectorSize(obj5, arg6)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg6)->ForceAssign(tempContainer); }
   result = (int)svlImageProcessing::Convolution(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Convolution__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; vctDynamicMatrix< double > arg5 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Convolution",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Convolution" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Convolution" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Convolution" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Convolution" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); {   typedef vctDynamicMatrix< double > MatrixType;
    if (!(   vctThrowUnlessIsPyArray(obj4) && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4)
    && vctThrowUnlessDimension2(obj4) && vctThrowUnlessCorrectMatrixSize(obj4, arg5)) ) { return NULL; }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    (&arg5)->ForceAssign(tempContainer); }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Convolution" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); result = (int)svlImageProcessing::Convolution(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Convolution__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; vctDynamicMatrix< double > arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Convolution",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Convolution" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Convolution" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Convolution" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Convolution" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); {   typedef vctDynamicMatrix< double > MatrixType;
    if (!(   vctThrowUnlessIsPyArray(obj4) && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4)
    && vctThrowUnlessDimension2(obj4) && vctThrowUnlessCorrectMatrixSize(obj4, arg5)) ) { return NULL; }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    (&arg5)->ForceAssign(tempContainer); }  result = (int)svlImageProcessing::Convolution(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Convolution(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_vctDynamicMatrixT_double_t, 0); _v = SWIG_CheckState(res);
            if (_v) { return _wrap_Convolution__SWIG_3(self, args);}  }  }  }  }  }  if (argc == 6) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_ConvertPtr(argv[4], 0, SWIGTYPE_p_vctDynamicMatrixT_double_t, 0); _v = SWIG_CheckState(res);
            if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_Convolution__SWIG_2(self, args);}  }  }  }  }  }  }  if (argc == 6) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { { 
              if (!PyArray_Check(argv[4])) { _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0;
                  PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) { {  if (!PyArray_Check(argv[5])) { _v = 0; PyErr_Clear(); }
                 else {  if (PyArray_NDIM(argv[5]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) {
                return _wrap_Convolution__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { { 
              if (!PyArray_Check(argv[4])) { _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0;
                  PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) { {  if (!PyArray_Check(argv[5])) { _v = 0; PyErr_Clear(); }
                 else {  if (PyArray_NDIM(argv[5]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_Convolution__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Convolution'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::Convolution(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,vctDynamicVector< double >,vctDynamicVector< double >,bool)\n"
  "    svlImageProcessing::Convolution(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,vctDynamicVector< double >,vctDynamicVector< double >)\n"
  "    svlImageProcessing::Convolution(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,vctDynamicMatrix< double >,bool)\n"
  "    svlImageProcessing::Convolution(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,vctDynamicMatrix< double >)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_UnsharpMask__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; int arg5 ; double arg6 ; int arg7 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; int val5 ; int ecode5 = 0 ; double val6 ;
  int ecode6 = 0 ; int val7 ; int ecode7 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"UnsharpMask",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnsharpMask" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UnsharpMask" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "UnsharpMask" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UnsharpMask" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "UnsharpMask" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_double(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "UnsharpMask" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6); ecode7 = SWIG_AsVal_int(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "UnsharpMask" "', argument " "7"" of type '" "int""'"); }  
  arg7 = static_cast< int >(val7);
  result = (int)svlImageProcessing::UnsharpMask((svlSampleImage const *)arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_UnsharpMask__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; int arg5 ; double arg6 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; int val5 ; int ecode5 = 0 ; double val6 ;
  int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"UnsharpMask",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnsharpMask" "', argument " "1"" of type '" "svlSampleImage const *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "UnsharpMask" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "UnsharpMask" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UnsharpMask" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "UnsharpMask" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_double(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "UnsharpMask" "', argument " "6"" of type '" "double""'"); }  
  arg6 = static_cast< double >(val6);
  result = (int)svlImageProcessing::UnsharpMask((svlSampleImage const *)arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_UnsharpMask(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_UnsharpMask__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_double(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_int(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_UnsharpMask__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'UnsharpMask'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::UnsharpMask(svlSampleImage const *,unsigned int,svlSampleImage *,unsigned int,int,double,int)\n"
  "    svlImageProcessing::UnsharpMask(svlSampleImage const *,unsigned int,svlSampleImage *,unsigned int,int,double)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_Crop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; int arg5 ; int arg6 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; int val5 ; int ecode5 = 0 ; int val6 ; int ecode6 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Crop",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Crop" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Crop" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Crop" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Crop" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Crop" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Crop" "', argument " "6"" of type '" "int""'"); }  
  arg6 = static_cast< int >(val6); result = (int)svlImageProcessing::Crop(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Resize__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Resize",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resize" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resize" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Resize" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Resize" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_bool(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Resize" "', argument " "5"" of type '" "bool""'"); }  
  arg5 = static_cast< bool >(val5); result = (int)svlImageProcessing::Resize(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Resize__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; bool arg5 ; vctDynamicVector< unsigned char > *arg6 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; bool val5 ;
  int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Resize",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Resize" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Resize" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Resize" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Resize" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_bool(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Resize" "', argument " "5"" of type '" "bool""'"); }  
  arg5 = static_cast< bool >(val5); {   typedef vctDynamicVector< unsigned char > VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj5) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5)
    && vctThrowUnlessDimension1(obj5) && vctThrowUnlessCorrectVectorSize(obj5, *(arg6)) && vctThrowUnlessIsWritable(obj5)
    && vctThrowUnlessOwnsData(obj5, *(arg6)) && vctThrowUnlessNotReferenced(obj5, *(arg6))) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg6 = new VectorType(tempContainer); }
   result = (int)svlImageProcessing::Resize(arg1,arg2,arg3,arg4,arg5,*arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); {   typedef vctDynamicVector< unsigned char > VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj5, 0); const VectorType::size_type output_size = arg6->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj5, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg6));  
    delete arg6; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Resize(PyObject *self, PyObject *args) { int argc; PyObject *argv[7]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_Resize__SWIG_0(self, args);}  }  }  }  }  }  if (argc == 6) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { { 
                if (!PyArray_Check(argv[5])) { _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[5]) != 1) { _v = 0;
                    PyErr_Clear(); }  else { _v = 1; }  }  }  if (_v) { return _wrap_Resize__SWIG_1(self, args);}  }  }  }  }  }
     }  fail: SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Resize'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::Resize(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,bool)\n"
  "    svlImageProcessing::Resize(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,bool,vctDynamicVector< unsigned char > &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_Deinterlace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlImageProcessing::DI_Algorithm arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"Deinterlace",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Deinterlace" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Deinterlace" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "Deinterlace" "', argument " "3"" of type '" "svlImageProcessing::DI_Algorithm""'"); }
    arg3 = static_cast< svlImageProcessing::DI_Algorithm >(val3); result = (int)svlImageProcessing::Deinterlace(arg1,arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_DisparityMapToSurface(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleMatrixFloat *arg1 = (svlSampleMatrixFloat *) 0 ; svlSampleImage3DMap *arg2 = (svlSampleImage3DMap *) 0 ;
  svlCameraGeometry *arg3 = 0 ; svlRect *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"DisparityMapToSurface",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleMatrixFloat, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DisparityMapToSurface" "', argument " "1"" of type '" "svlSampleMatrixFloat *""'");  }
   arg1 = reinterpret_cast< svlSampleMatrixFloat * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImage3DMap, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "DisparityMapToSurface" "', argument " "2"" of type '" "svlSampleImage3DMap *""'");  }
   arg2 = reinterpret_cast< svlSampleImage3DMap * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_svlCameraGeometry,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "DisparityMapToSurface" "', argument " "3"" of type '" "svlCameraGeometry &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DisparityMapToSurface" "', argument " "3"" of type '" "svlCameraGeometry &""'"); }
   arg3 = reinterpret_cast< svlCameraGeometry * >(argp3); res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlRect,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "DisparityMapToSurface" "', argument " "4"" of type '" "svlRect &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "DisparityMapToSurface" "', argument " "4"" of type '" "svlRect &""'"); }
   arg4 = reinterpret_cast< svlRect * >(argp4); result = (int)svlImageProcessing::DisparityMapToSurface(arg1,arg2,*arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Rectify__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; std::string *arg5 = 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; int res5 = SWIG_OLDOBJ ; bool val6 ; int ecode6 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Rectify",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rectify" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rectify" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Rectify" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Rectify" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); { std::string *ptr = (std::string *)0; res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Rectify" "', argument " "5"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rectify" "', argument " "5"" of type '" "std::string const &""'"); }
     arg5 = ptr; }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Rectify" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6);
  result = (int)svlImageProcessing::Rectify(arg1,arg2,arg3,arg4,(std::string const &)*arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res5)) delete arg5; return resultobj; fail:
  if (SWIG_IsNewObj(res5)) delete arg5; return NULL; }
SWIGINTERN PyObject *_wrap_Rectify__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; std::string *arg5 = 0 ; bool arg6 ; svlImageProcessing::Internals *arg7 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  int res5 = SWIG_OLDOBJ ; bool val6 ; int ecode6 = 0 ; void *argp7 = 0 ; int res7 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Rectify",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Rectify" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Rectify" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Rectify" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Rectify" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); { std::string *ptr = (std::string *)0; res5 = SWIG_AsPtr_std_string(obj4, &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Rectify" "', argument " "5"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rectify" "', argument " "5"" of type '" "std::string const &""'"); }
     arg5 = ptr; }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Rectify" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); res7 = SWIG_ConvertPtr(obj6, &argp7, SWIGTYPE_p_svlImageProcessing__Internals,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "Rectify" "', argument " "7"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "Rectify" "', argument " "7"" of type '" "svlImageProcessing::Internals &""'"); }
   arg7 = reinterpret_cast< svlImageProcessing::Internals * >(argp7);
  result = (int)svlImageProcessing::Rectify(arg1,arg2,arg3,arg4,(std::string const &)*arg5,arg6,*arg7);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res5)) delete arg5; return resultobj; fail:
  if (SWIG_IsNewObj(res5)) delete arg5; return NULL; }
SWIGINTERN PyObject *_wrap_Rectify(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_Rectify__SWIG_0(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            int res = SWIG_AsPtr_std_string(argv[4], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
                int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
                int res = SWIG_ConvertPtr(argv[6], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
                _v = SWIG_CheckState(res); if (_v) { return _wrap_Rectify__SWIG_1(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'Rectify'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::Rectify(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,std::string const &,bool)\n"
  "    svlImageProcessing::Rectify(svlSampleImage *,unsigned int,svlSampleImage *,unsigned int,std::string const &,bool,svlImageProcessing::Internals &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_RectifyPython(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; bool arg5 ; svlImageProcessing::Internals *arg6 = 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ;
  void *argp6 = 0 ; int res6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectifyPython",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectifyPython" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectifyPython" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "RectifyPython" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RectifyPython" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_bool(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "RectifyPython" "', argument " "5"" of type '" "bool""'"); }  
  arg5 = static_cast< bool >(val5); res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_svlImageProcessing__Internals,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "RectifyPython" "', argument " "6"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RectifyPython" "', argument " "6"" of type '" "svlImageProcessing::Internals &""'"); }
   arg6 = reinterpret_cast< svlImageProcessing::Internals * >(argp6);
  result = (int)svlImageProcessing::Rectify(arg1,arg2,arg3,arg4,arg5,*arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SetExposure__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; double arg5 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  double val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"SetExposure",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SetExposure" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SetExposure" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SetExposure" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SetExposure" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "SetExposure" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5); result = (int)svlImageProcessing::SetExposure(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SetExposure__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; double arg3 ; double arg4 ; double arg5 ;
  svlImageProcessing::Internals *arg6 = 0 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ; void *argp6 = 0 ; int res6 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"SetExposure",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SetExposure" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SetExposure" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_double(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "SetExposure" "', argument " "3"" of type '" "double""'"); }  
  arg3 = static_cast< double >(val3); ecode4 = SWIG_AsVal_double(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SetExposure" "', argument " "4"" of type '" "double""'"); }  
  arg4 = static_cast< double >(val4); ecode5 = SWIG_AsVal_double(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "SetExposure" "', argument " "5"" of type '" "double""'"); }  
  arg5 = static_cast< double >(val5); res6 = SWIG_ConvertPtr(obj5, &argp6, SWIGTYPE_p_svlImageProcessing__Internals,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "SetExposure" "', argument " "6"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "SetExposure" "', argument " "6"" of type '" "svlImageProcessing::Internals &""'"); }
   arg6 = reinterpret_cast< svlImageProcessing::Internals * >(argp6);
  result = (int)svlImageProcessing::SetExposure(arg1,arg2,arg3,arg4,arg5,*arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SetExposure(PyObject *self, PyObject *args) { int argc; PyObject *argv[7]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_SetExposure__SWIG_0(self, args);}  }  }  }  }  }  if (argc == 6) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImage, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_double(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_double(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
              int res = SWIG_AsVal_double(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
              int res = SWIG_ConvertPtr(argv[5], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
              if (_v) { return _wrap_SetExposure__SWIG_1(self, args);}  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'SetExposure'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::SetExposure(svlSampleImage *,unsigned int,double,double,double)\n"
  "    svlImageProcessing::SetExposure(svlSampleImage *,unsigned int,double,double,double,svlImageProcessing::Internals &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_Dilate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Dilate",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Dilate" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Dilate" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Dilate" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Dilate" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Dilate" "', argument " "5"" of type '" "unsigned int""'"); }  
  arg5 = static_cast< unsigned int >(val5); result = (int)svlImageProcessing::Dilate(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Erode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; unsigned int val5 ; int ecode5 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Erode",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Erode" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Erode" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Erode" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Erode" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "Erode" "', argument " "5"" of type '" "unsigned int""'"); }  
  arg5 = static_cast< unsigned int >(val5); result = (int)svlImageProcessing::Erode(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_Blend(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; svlSampleImage *arg5 = (svlSampleImage *) 0 ; unsigned int arg6 ;
  svlSampleImage *arg7 = (svlSampleImage *) 0 ; unsigned int arg8 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ;
  int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ;
  unsigned int val6 ; int ecode6 = 0 ; void *argp7 = 0 ; int res7 = 0 ; unsigned int val8 ; int ecode8 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"Blend",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "Blend" "', argument " "1"" of type '" "svlSampleImage *""'");  } 
  arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "Blend" "', argument " "2"" of type '" "unsigned int""'"); }  
  arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "Blend" "', argument " "3"" of type '" "svlSampleImage *""'");  } 
  arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "Blend" "', argument " "4"" of type '" "unsigned int""'"); }  
  arg4 = static_cast< unsigned int >(val4); res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "Blend" "', argument " "5"" of type '" "svlSampleImage *""'");  } 
  arg5 = reinterpret_cast< svlSampleImage * >(argp5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "Blend" "', argument " "6"" of type '" "unsigned int""'"); }  
  arg6 = static_cast< unsigned int >(val6); res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "Blend" "', argument " "7"" of type '" "svlSampleImage *""'");  } 
  arg7 = reinterpret_cast< svlSampleImage * >(argp7); ecode8 = SWIG_AsVal_unsigned_SS_int(obj7, &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "Blend" "', argument " "8"" of type '" "unsigned int""'"); }  
  arg8 = static_cast< unsigned int >(val8); result = (int)svlImageProcessing::Blend(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_SwapColorChannels(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImage *arg1 = (svlSampleImage *) 0 ; unsigned int arg2 ; svlSampleImage *arg3 = (svlSampleImage *) 0 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"SwapColorChannels",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImage, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "SwapColorChannels" "', argument " "1"" of type '" "svlSampleImage *""'");  }
   arg1 = reinterpret_cast< svlSampleImage * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "SwapColorChannels" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImage, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "SwapColorChannels" "', argument " "3"" of type '" "svlSampleImage *""'");  }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "SwapColorChannels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)svlImageProcessing::SwapColorChannels(arg1,arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_LabelBlobs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8 *arg1 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg2 = (svlSampleImageMono32 *) 0 ;
  svlImageProcessing::Internals *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"LabelBlobs",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelBlobs" "', argument " "1"" of type '" "svlSampleImageMono8 const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LabelBlobs" "', argument " "2"" of type '" "svlSampleImageMono32 *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "LabelBlobs" "', argument " "3"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LabelBlobs" "', argument " "3"" of type '" "svlImageProcessing::Internals &""'"); }
   arg3 = reinterpret_cast< svlImageProcessing::Internals * >(argp3);
  result = (unsigned int)svlImageProcessing::LabelBlobs((svlSampleImageMono8 const *)arg1,arg2,*arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_LabelBlobs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8Stereo *arg1 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg2 = (svlSampleImageMono32Stereo *) 0 ; unsigned int arg3 ;
  svlImageProcessing::Internals *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"LabelBlobs",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "LabelBlobs" "', argument " "1"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "LabelBlobs" "', argument " "2"" of type '" "svlSampleImageMono32Stereo *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "LabelBlobs" "', argument " "3"" of type '" "unsigned int""'"); }  
  arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlImageProcessing__Internals,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "LabelBlobs" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "LabelBlobs" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'"); }
   arg4 = reinterpret_cast< svlImageProcessing::Internals * >(argp4);
  result = (unsigned int)svlImageProcessing::LabelBlobs((svlSampleImageMono8Stereo const *)arg1,arg2,arg3,*arg4);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_LabelBlobs(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
        if (_v) { return _wrap_LabelBlobs__SWIG_0(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
          _v = SWIG_CheckState(res); if (_v) { return _wrap_LabelBlobs__SWIG_1(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'LabelBlobs'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::LabelBlobs(svlSampleImageMono8 const *,svlSampleImageMono32 *,svlImageProcessing::Internals &)\n"
  "    svlImageProcessing::LabelBlobs(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo *,unsigned int const,svlImageProcessing::Internals &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8 *arg1 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg2 = (svlSampleImageMono32 *) 0 ;
  svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ; svlImageProcessing::Internals *arg4 = 0 ; unsigned int arg5 ;
  unsigned int arg6 ; double arg7 ; double arg8 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; unsigned int val6 ;
  int ecode6 = 0 ; double val7 ; int ecode7 = 0 ; double val8 ; int ecode8 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8 const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'"); }
   arg4 = reinterpret_cast< svlImageProcessing::Internals * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_double(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GetBlobsFromLabels" "', argument " "7"" of type '" "double""'"); }
    arg7 = static_cast< double >(val7); ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GetBlobsFromLabels" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8 const *)arg1,(svlSampleImageMono32 const *)arg2,arg3,*arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8 *arg1 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg2 = (svlSampleImageMono32 *) 0 ;
  svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ; svlImageProcessing::Internals *arg4 = 0 ; unsigned int arg5 ;
  unsigned int arg6 ; double arg7 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; unsigned int val6 ; int ecode6 = 0 ;
  double val7 ; int ecode7 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8 const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'"); }
   arg4 = reinterpret_cast< svlImageProcessing::Internals * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_double(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GetBlobsFromLabels" "', argument " "7"" of type '" "double""'"); }
    arg7 = static_cast< double >(val7);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8 const *)arg1,(svlSampleImageMono32 const *)arg2,arg3,*arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8 *arg1 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg2 = (svlSampleImageMono32 *) 0 ;
  svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ; svlImageProcessing::Internals *arg4 = 0 ; unsigned int arg5 ;
  unsigned int arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  void *argp4 = 0 ; int res4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; unsigned int val6 ; int ecode6 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8 const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'"); }
   arg4 = reinterpret_cast< svlImageProcessing::Internals * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8 const *)arg1,(svlSampleImageMono32 const *)arg2,arg3,*arg4,arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8 *arg1 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg2 = (svlSampleImageMono32 *) 0 ;
  svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ; svlImageProcessing::Internals *arg4 = 0 ; unsigned int arg5 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8 const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'"); }
   arg4 = reinterpret_cast< svlImageProcessing::Internals * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8 const *)arg1,(svlSampleImageMono32 const *)arg2,arg3,*arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8 *arg1 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg2 = (svlSampleImageMono32 *) 0 ;
  svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ; svlImageProcessing::Internals *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8 const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8 * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "svlImageProcessing::Internals &""'"); }
   arg4 = reinterpret_cast< svlImageProcessing::Internals * >(argp4);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8 const *)arg1,(svlSampleImageMono32 const *)arg2,arg3,*arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_5(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8Stereo *arg1 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg2 = (svlSampleImageMono32Stereo *) 0 ; svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ;
  unsigned int arg4 ; svlImageProcessing::Internals *arg5 = 0 ; unsigned int arg6 ; unsigned int arg7 ; double arg8 ;
  double arg9 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; unsigned int val7 ;
  int ecode7 = 0 ; double val8 ; int ecode8 = 0 ; double val9 ; int ecode9 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  PyObject * obj7 = 0 ; PyObject * obj8 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'"); }
   arg5 = reinterpret_cast< svlImageProcessing::Internals * >(argp5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GetBlobsFromLabels" "', argument " "7"" of type '" "unsigned int""'"); }
    arg7 = static_cast< unsigned int >(val7); ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GetBlobsFromLabels" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8); ecode9 = SWIG_AsVal_double(obj8, &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "GetBlobsFromLabels" "', argument " "9"" of type '" "double""'"); }
    arg9 = static_cast< double >(val9);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8Stereo const *)arg1,(svlSampleImageMono32Stereo const *)arg2,arg3,arg4,*arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_6(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8Stereo *arg1 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg2 = (svlSampleImageMono32Stereo *) 0 ; svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ;
  unsigned int arg4 ; svlImageProcessing::Internals *arg5 = 0 ; unsigned int arg6 ; unsigned int arg7 ; double arg8 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ;
  int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; unsigned int val7 ; int ecode7 = 0 ;
  double val8 ; int ecode8 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'"); }
   arg5 = reinterpret_cast< svlImageProcessing::Internals * >(argp5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GetBlobsFromLabels" "', argument " "7"" of type '" "unsigned int""'"); }
    arg7 = static_cast< unsigned int >(val7); ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "GetBlobsFromLabels" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8Stereo const *)arg1,(svlSampleImageMono32Stereo const *)arg2,arg3,arg4,*arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_7(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8Stereo *arg1 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg2 = (svlSampleImageMono32Stereo *) 0 ; svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ;
  unsigned int arg4 ; svlImageProcessing::Internals *arg5 = 0 ; unsigned int arg6 ; unsigned int arg7 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  void *argp5 = 0 ; int res5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; unsigned int val7 ; int ecode7 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'"); }
   arg5 = reinterpret_cast< svlImageProcessing::Internals * >(argp5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "GetBlobsFromLabels" "', argument " "7"" of type '" "unsigned int""'"); }
    arg7 = static_cast< unsigned int >(val7);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8Stereo const *)arg1,(svlSampleImageMono32Stereo const *)arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8Stereo *arg1 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg2 = (svlSampleImageMono32Stereo *) 0 ; svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ;
  unsigned int arg4 ; svlImageProcessing::Internals *arg5 = 0 ; unsigned int arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'"); }
   arg5 = reinterpret_cast< svlImageProcessing::Internals * >(argp5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "GetBlobsFromLabels" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8Stereo const *)arg1,(svlSampleImageMono32Stereo const *)arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels__SWIG_9(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlSampleImageMono8Stereo *arg1 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg2 = (svlSampleImageMono32Stereo *) 0 ; svlSampleBlobs *arg3 = (svlSampleBlobs *) 0 ;
  unsigned int arg4 ; svlImageProcessing::Internals *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; void *argp5 = 0 ; int res5 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"GetBlobsFromLabels",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "GetBlobsFromLabels" "', argument " "1"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg1 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "GetBlobsFromLabels" "', argument " "2"" of type '" "svlSampleImageMono32Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "GetBlobsFromLabels" "', argument " "3"" of type '" "svlSampleBlobs *""'");  }
   arg3 = reinterpret_cast< svlSampleBlobs * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "GetBlobsFromLabels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  res5 = SWIG_ConvertPtr(obj4, &argp5, SWIGTYPE_p_svlImageProcessing__Internals,  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'");  }
   if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "GetBlobsFromLabels" "', argument " "5"" of type '" "svlImageProcessing::Internals &""'"); }
   arg5 = reinterpret_cast< svlImageProcessing::Internals * >(argp5);
  result = (int)svlImageProcessing::GetBlobsFromLabels((svlSampleImageMono8Stereo const *)arg1,(svlSampleImageMono32Stereo const *)arg2,arg3,arg4,*arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_GetBlobsFromLabels(PyObject *self, PyObject *args) { int argc; PyObject *argv[10]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) {
          void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
          _v = SWIG_CheckState(res); if (_v) { return _wrap_GetBlobsFromLabels__SWIG_4(self, args);}  }  }  }  } 
  if (argc == 5) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res); }  if (_v) { return _wrap_GetBlobsFromLabels__SWIG_3(self, args);}  }  }  }  }  } 
  if (argc == 5) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
            if (_v) { return _wrap_GetBlobsFromLabels__SWIG_9(self, args);}  }  }  }  }  }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
            if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_GetBlobsFromLabels__SWIG_8(self, args);}  }  }  }  }  }  }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) {
          void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res); }  if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res); }  if (_v) { return _wrap_GetBlobsFromLabels__SWIG_2(self, args);}  }  }  }  }  }  } 
  if (argc == 7) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res);
        if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res); }  if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res); }  if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res); }  if (_v) { return _wrap_GetBlobsFromLabels__SWIG_1(self, args);}  }  }  }  }  }  }
     }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
            if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_GetBlobsFromLabels__SWIG_7(self, args);}  }  }  }  }  }  }  }  if (argc == 8) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res);
        if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
            if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_double(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                    return _wrap_GetBlobsFromLabels__SWIG_6(self, args);}  }  }  }  }  }  }  }  }  if (argc == 8) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) {
          void *vptr = 0; int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0);
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL);
              _v = SWIG_CheckState(res); }  if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL);
                _v = SWIG_CheckState(res); }  if (_v) { { int res = SWIG_AsVal_double(argv[6], NULL);
                  _v = SWIG_CheckState(res); }  if (_v) { { int res = SWIG_AsVal_double(argv[7], NULL);
                    _v = SWIG_CheckState(res); }  if (_v) { return _wrap_GetBlobsFromLabels__SWIG_0(self, args);}  }  }  }  }  }
         }  }  }  if (argc == 9) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_svlImageProcessing__Internals, 0); _v = SWIG_CheckState(res);
            if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_double(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                      return _wrap_GetBlobsFromLabels__SWIG_5(self, args);}  }  }  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'GetBlobsFromLabels'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8 const *,svlSampleImageMono32 const *,svlSampleBlobs *,svlImageProcessing::Internals &,unsigned int,unsigned int,double,double)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8 const *,svlSampleImageMono32 const *,svlSampleBlobs *,svlImageProcessing::Internals &,unsigned int,unsigned int,double)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8 const *,svlSampleImageMono32 const *,svlSampleBlobs *,svlImageProcessing::Internals &,unsigned int,unsigned int)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8 const *,svlSampleImageMono32 const *,svlSampleBlobs *,svlImageProcessing::Internals &,unsigned int)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8 const *,svlSampleImageMono32 const *,svlSampleBlobs *,svlImageProcessing::Internals &)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo const *,svlSampleBlobs *,unsigned int const,svlImageProcessing::Internals &,unsigned int,unsigned int,double,double)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo const *,svlSampleBlobs *,unsigned int const,svlImageProcessing::Internals &,unsigned int,unsigned int,double)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo const *,svlSampleBlobs *,unsigned int const,svlImageProcessing::Internals &,unsigned int,unsigned int)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo const *,svlSampleBlobs *,unsigned int const,svlImageProcessing::Internals &,unsigned int)\n"
  "    svlImageProcessing::GetBlobsFromLabels(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo const *,svlSampleBlobs *,unsigned int const,svlImageProcessing::Internals &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_delete_svlImageProcessingInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlImageProcessingInternals *arg1 = (svlImageProcessingInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlImageProcessingInternals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingInternals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlImageProcessingInternals" "', argument " "1"" of type '" "svlImageProcessingInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingInternals * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *svlImageProcessingInternals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlImageProcessingInternals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_dgeev_(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  char *arg1 = (char *) 0 ; char *arg2 = (char *) 0 ; CISSTNETLIB_INTEGER *arg3 = (CISSTNETLIB_INTEGER *) 0 ;
  CISSTNETLIB_DOUBLE *arg4 = (CISSTNETLIB_DOUBLE *) 0 ; CISSTNETLIB_INTEGER *arg5 = (CISSTNETLIB_INTEGER *) 0 ;
  CISSTNETLIB_DOUBLE *arg6 = (CISSTNETLIB_DOUBLE *) 0 ; CISSTNETLIB_DOUBLE *arg7 = (CISSTNETLIB_DOUBLE *) 0 ;
  CISSTNETLIB_DOUBLE *arg8 = (CISSTNETLIB_DOUBLE *) 0 ; CISSTNETLIB_INTEGER *arg9 = (CISSTNETLIB_INTEGER *) 0 ;
  CISSTNETLIB_DOUBLE *arg10 = (CISSTNETLIB_DOUBLE *) 0 ; CISSTNETLIB_INTEGER *arg11 = (CISSTNETLIB_INTEGER *) 0 ;
  CISSTNETLIB_DOUBLE *arg12 = (CISSTNETLIB_DOUBLE *) 0 ; CISSTNETLIB_INTEGER *arg13 = (CISSTNETLIB_INTEGER *) 0 ;
  CISSTNETLIB_INTEGER *arg14 = (CISSTNETLIB_INTEGER *) 0 ; int res1 ; char *buf1 = 0 ; int alloc1 = 0 ; int res2 ;
  char *buf2 = 0 ; int alloc2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ;
  int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ; void *argp7 = 0 ; int res7 = 0 ; void *argp8 = 0 ; int res8 = 0 ;
  void *argp9 = 0 ; int res9 = 0 ; void *argp10 = 0 ; int res10 = 0 ; void *argp11 = 0 ; int res11 = 0 ; void *argp12 = 0 ;
  int res12 = 0 ; void *argp13 = 0 ; int res13 = 0 ; void *argp14 = 0 ; int res14 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; PyObject * obj8 = 0 ; PyObject * obj9 = 0 ; PyObject * obj10 = 0 ;
  PyObject * obj11 = 0 ; PyObject * obj12 = 0 ; PyObject * obj13 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"dgeev_",14,14,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8,&obj9,&obj10,&obj11,&obj12,&obj13)) SWIG_fail;
  res1 = SWIG_AsCharPtrAndSize(obj0, &buf1, NULL, &alloc1); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dgeev_" "', argument " "1"" of type '" "char *""'"); } 
  arg1 = reinterpret_cast< char * >(buf1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dgeev_" "', argument " "2"" of type '" "char *""'"); } 
  arg2 = reinterpret_cast< char * >(buf2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_CISSTNETLIB_INTEGER, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dgeev_" "', argument " "3"" of type '" "CISSTNETLIB_INTEGER *""'");  }
   arg3 = reinterpret_cast< CISSTNETLIB_INTEGER * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_CISSTNETLIB_DOUBLE, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dgeev_" "', argument " "4"" of type '" "CISSTNETLIB_DOUBLE *""'");  }
   arg4 = reinterpret_cast< CISSTNETLIB_DOUBLE * >(argp4);
  res5 = SWIG_ConvertPtr(obj4, &argp5,SWIGTYPE_p_CISSTNETLIB_INTEGER, 0 |  0 ); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dgeev_" "', argument " "5"" of type '" "CISSTNETLIB_INTEGER *""'");  }
   arg5 = reinterpret_cast< CISSTNETLIB_INTEGER * >(argp5);
  res6 = SWIG_ConvertPtr(obj5, &argp6,SWIGTYPE_p_CISSTNETLIB_DOUBLE, 0 |  0 ); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "dgeev_" "', argument " "6"" of type '" "CISSTNETLIB_DOUBLE *""'");  }
   arg6 = reinterpret_cast< CISSTNETLIB_DOUBLE * >(argp6);
  res7 = SWIG_ConvertPtr(obj6, &argp7,SWIGTYPE_p_CISSTNETLIB_DOUBLE, 0 |  0 ); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "dgeev_" "', argument " "7"" of type '" "CISSTNETLIB_DOUBLE *""'");  }
   arg7 = reinterpret_cast< CISSTNETLIB_DOUBLE * >(argp7);
  res8 = SWIG_ConvertPtr(obj7, &argp8,SWIGTYPE_p_CISSTNETLIB_DOUBLE, 0 |  0 ); if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "dgeev_" "', argument " "8"" of type '" "CISSTNETLIB_DOUBLE *""'");  }
   arg8 = reinterpret_cast< CISSTNETLIB_DOUBLE * >(argp8);
  res9 = SWIG_ConvertPtr(obj8, &argp9,SWIGTYPE_p_CISSTNETLIB_INTEGER, 0 |  0 ); if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "dgeev_" "', argument " "9"" of type '" "CISSTNETLIB_INTEGER *""'");  }
   arg9 = reinterpret_cast< CISSTNETLIB_INTEGER * >(argp9);
  res10 = SWIG_ConvertPtr(obj9, &argp10,SWIGTYPE_p_CISSTNETLIB_DOUBLE, 0 |  0 ); if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "dgeev_" "', argument " "10"" of type '" "CISSTNETLIB_DOUBLE *""'");  }
   arg10 = reinterpret_cast< CISSTNETLIB_DOUBLE * >(argp10);
  res11 = SWIG_ConvertPtr(obj10, &argp11,SWIGTYPE_p_CISSTNETLIB_INTEGER, 0 |  0 ); if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "dgeev_" "', argument " "11"" of type '" "CISSTNETLIB_INTEGER *""'");  }
   arg11 = reinterpret_cast< CISSTNETLIB_INTEGER * >(argp11);
  res12 = SWIG_ConvertPtr(obj11, &argp12,SWIGTYPE_p_CISSTNETLIB_DOUBLE, 0 |  0 ); if (!SWIG_IsOK(res12)) {
    SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "dgeev_" "', argument " "12"" of type '" "CISSTNETLIB_DOUBLE *""'");  }
   arg12 = reinterpret_cast< CISSTNETLIB_DOUBLE * >(argp12);
  res13 = SWIG_ConvertPtr(obj12, &argp13,SWIGTYPE_p_CISSTNETLIB_INTEGER, 0 |  0 ); if (!SWIG_IsOK(res13)) {
    SWIG_exception_fail(SWIG_ArgError(res13), "in method '" "dgeev_" "', argument " "13"" of type '" "CISSTNETLIB_INTEGER *""'");  }
   arg13 = reinterpret_cast< CISSTNETLIB_INTEGER * >(argp13);
  res14 = SWIG_ConvertPtr(obj13, &argp14,SWIGTYPE_p_CISSTNETLIB_INTEGER, 0 |  0 ); if (!SWIG_IsOK(res14)) {
    SWIG_exception_fail(SWIG_ArgError(res14), "in method '" "dgeev_" "', argument " "14"" of type '" "CISSTNETLIB_INTEGER *""'");  }
   arg14 = reinterpret_cast< CISSTNETLIB_INTEGER * >(argp14);
  svlImageProcessingHelper::dgeev_(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12,arg13,arg14);
  resultobj = SWIG_Py_Void(); if (alloc1 == SWIG_NEWOBJ) delete[] buf1; if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj; fail: if (alloc1 == SWIG_NEWOBJ) delete[] buf1; if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionRGB__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ;
  vctDynamicVector< int > *arg5 = 0 ; bool arg6 ; bool arg7 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionRGB",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionRGB" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionRGB" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionRGB" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionRGB" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicVector< int > VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg5 = new VectorType(tempContainer); }
   ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionRGB" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ConvolutionRGB" "', argument " "7"" of type '" "bool""'"); }  
  arg7 = static_cast< bool >(val7); svlImageProcessingHelper::ConvolutionRGB(arg1,arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicVector< int > VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj4, 0); const VectorType::size_type output_size = arg5->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg5));  
    delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionRGBA__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ;
  vctDynamicVector< int > *arg5 = 0 ; bool arg6 ; bool arg7 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionRGBA",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionRGBA" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionRGBA" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionRGBA" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionRGBA" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicVector< int > VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg5 = new VectorType(tempContainer); }
   ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionRGBA" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ConvolutionRGBA" "', argument " "7"" of type '" "bool""'"); }  
  arg7 = static_cast< bool >(val7); svlImageProcessingHelper::ConvolutionRGBA(arg1,arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicVector< int > VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj4, 0); const VectorType::size_type output_size = arg5->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg5));  
    delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionMono8__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ;
  vctDynamicVector< int > *arg5 = 0 ; bool arg6 ; bool arg7 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionMono8",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionMono8" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionMono8" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionMono8" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionMono8" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicVector< int > VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg5 = new VectorType(tempContainer); }
   ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionMono8" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ConvolutionMono8" "', argument " "7"" of type '" "bool""'"); }  
  arg7 = static_cast< bool >(val7); svlImageProcessingHelper::ConvolutionMono8(arg1,arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicVector< int > VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj4, 0); const VectorType::size_type output_size = arg5->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg5));  
    delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionMono16__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned short *arg1 = (unsigned short *) 0 ; unsigned short *arg2 = (unsigned short *) 0 ; int arg3 ; int arg4 ;
  vctDynamicVector< int > *arg5 = 0 ; bool arg6 ; bool arg7 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionMono16",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionMono16" "', argument " "1"" of type '" "unsigned short *""'");  }
   arg1 = reinterpret_cast< unsigned short * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionMono16" "', argument " "2"" of type '" "unsigned short *""'");  }
   arg2 = reinterpret_cast< unsigned short * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionMono16" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionMono16" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicVector< int > VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg5 = new VectorType(tempContainer); }
   ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionMono16" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ConvolutionMono16" "', argument " "7"" of type '" "bool""'"); }  
  arg7 = static_cast< bool >(val7); svlImageProcessingHelper::ConvolutionMono16(arg1,arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicVector< int > VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj4, 0); const VectorType::size_type output_size = arg5->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg5));  
    delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionMono32__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ; unsigned int *arg2 = (unsigned int *) 0 ; int arg3 ; int arg4 ;
  vctDynamicVector< int > *arg5 = 0 ; bool arg6 ; bool arg7 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionMono32",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionMono32" "', argument " "1"" of type '" "unsigned int *""'");  }
   arg1 = reinterpret_cast< unsigned int * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionMono32" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionMono32" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionMono32" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicVector< int > VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  arg5 = new VectorType(tempContainer); }
   ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionMono32" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "ConvolutionMono32" "', argument " "7"" of type '" "bool""'"); }  
  arg7 = static_cast< bool >(val7); svlImageProcessingHelper::ConvolutionMono32(arg1,arg2,arg3,arg4,*arg5,arg6,arg7);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicVector< int > VectorType;
    const VectorType::size_type input_size = PyArray_DIM(obj4, 0); const VectorType::size_type output_size = arg5->size();
    if (input_size != output_size) {    npy_intp *sizes = PyDimMem_NEW(1);              
      sizes[0] = output_size;                          PyArray_Dims dims;                               dims.ptr = sizes;
      dims.len = 1; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(*(arg5));  
    delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionRGB__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ;
  vctDynamicMatrix< int > *arg5 = 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionRGB",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionRGB" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionRGB" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionRGB" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionRGB" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicMatrix< int > MatrixType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4) && vctThrowUnlessDimension2(obj4)
    && vctThrowUnlessCorrectMatrixSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj4, 0);
    const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    arg5 = new MatrixType(tempContainer); }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionRGB" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); svlImageProcessingHelper::ConvolutionRGB(arg1,arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicMatrix< int > MatrixType;
    const MatrixType::size_type input_size0 = PyArray_DIM(obj4, 0);
    const MatrixType::size_type input_size1 = PyArray_DIM(obj4, 1); const MatrixType::size_type output_size0 = arg5->sizes()[0];
    const MatrixType::size_type output_size1 = arg5->sizes()[1]; if (   input_size0 != output_size0
    || input_size1 != output_size1) {    npy_intp *sizes = PyDimMem_NEW(2);              
      sizes[0] = output_size0;                         sizes[1] = output_size1; PyArray_Dims dims;                              
      dims.ptr = sizes; dims.len = 2; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(*(arg5));   delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionRGB(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 2) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_ConvolutionRGB__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_ConvolutionRGB__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ConvolutionRGB'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::ConvolutionRGB(unsigned char *,unsigned char *,int const,int const,vctDynamicVector< int > &,bool,bool)\n"
  "    svlImageProcessingHelper::ConvolutionRGB(unsigned char *,unsigned char *,int const,int const,vctDynamicMatrix< int > &,bool)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ConvolutionRGBA__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ;
  vctDynamicMatrix< int > *arg5 = 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionRGBA",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionRGBA" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionRGBA" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionRGBA" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionRGBA" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicMatrix< int > MatrixType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4) && vctThrowUnlessDimension2(obj4)
    && vctThrowUnlessCorrectMatrixSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj4, 0);
    const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    arg5 = new MatrixType(tempContainer); }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionRGBA" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); svlImageProcessingHelper::ConvolutionRGBA(arg1,arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicMatrix< int > MatrixType;
    const MatrixType::size_type input_size0 = PyArray_DIM(obj4, 0);
    const MatrixType::size_type input_size1 = PyArray_DIM(obj4, 1); const MatrixType::size_type output_size0 = arg5->sizes()[0];
    const MatrixType::size_type output_size1 = arg5->sizes()[1]; if (   input_size0 != output_size0
    || input_size1 != output_size1) {    npy_intp *sizes = PyDimMem_NEW(2);              
      sizes[0] = output_size0;                         sizes[1] = output_size1; PyArray_Dims dims;                              
      dims.ptr = sizes; dims.len = 2; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(*(arg5));   delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionRGBA(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 2) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_ConvolutionRGBA__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_ConvolutionRGBA__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ConvolutionRGBA'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::ConvolutionRGBA(unsigned char *,unsigned char *,int const,int const,vctDynamicVector< int > &,bool,bool)\n"
  "    svlImageProcessingHelper::ConvolutionRGBA(unsigned char *,unsigned char *,int const,int const,vctDynamicMatrix< int > &,bool)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ConvolutionMono8__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ;
  vctDynamicMatrix< int > *arg5 = 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionMono8",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionMono8" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionMono8" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionMono8" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionMono8" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicMatrix< int > MatrixType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4) && vctThrowUnlessDimension2(obj4)
    && vctThrowUnlessCorrectMatrixSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj4, 0);
    const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    arg5 = new MatrixType(tempContainer); }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionMono8" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); svlImageProcessingHelper::ConvolutionMono8(arg1,arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicMatrix< int > MatrixType;
    const MatrixType::size_type input_size0 = PyArray_DIM(obj4, 0);
    const MatrixType::size_type input_size1 = PyArray_DIM(obj4, 1); const MatrixType::size_type output_size0 = arg5->sizes()[0];
    const MatrixType::size_type output_size1 = arg5->sizes()[1]; if (   input_size0 != output_size0
    || input_size1 != output_size1) {    npy_intp *sizes = PyDimMem_NEW(2);              
      sizes[0] = output_size0;                         sizes[1] = output_size1; PyArray_Dims dims;                              
      dims.ptr = sizes; dims.len = 2; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(*(arg5));   delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionMono8(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 2) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_ConvolutionMono8__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_char, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_ConvolutionMono8__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ConvolutionMono8'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::ConvolutionMono8(unsigned char *,unsigned char *,int const,int const,vctDynamicVector< int > &,bool,bool)\n"
  "    svlImageProcessingHelper::ConvolutionMono8(unsigned char *,unsigned char *,int const,int const,vctDynamicMatrix< int > &,bool)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ConvolutionMono16__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned short *arg1 = (unsigned short *) 0 ; unsigned short *arg2 = (unsigned short *) 0 ; int arg3 ; int arg4 ;
  vctDynamicMatrix< int > *arg5 = 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionMono16",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_short, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionMono16" "', argument " "1"" of type '" "unsigned short *""'");  }
   arg1 = reinterpret_cast< unsigned short * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_short, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionMono16" "', argument " "2"" of type '" "unsigned short *""'");  }
   arg2 = reinterpret_cast< unsigned short * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionMono16" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionMono16" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicMatrix< int > MatrixType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4) && vctThrowUnlessDimension2(obj4)
    && vctThrowUnlessCorrectMatrixSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj4, 0);
    const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    arg5 = new MatrixType(tempContainer); }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionMono16" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); svlImageProcessingHelper::ConvolutionMono16(arg1,arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicMatrix< int > MatrixType;
    const MatrixType::size_type input_size0 = PyArray_DIM(obj4, 0);
    const MatrixType::size_type input_size1 = PyArray_DIM(obj4, 1); const MatrixType::size_type output_size0 = arg5->sizes()[0];
    const MatrixType::size_type output_size1 = arg5->sizes()[1]; if (   input_size0 != output_size0
    || input_size1 != output_size1) {    npy_intp *sizes = PyDimMem_NEW(2);              
      sizes[0] = output_size0;                         sizes[1] = output_size1; PyArray_Dims dims;                              
      dims.ptr = sizes; dims.len = 2; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(*(arg5));   delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionMono16(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 2) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_ConvolutionMono16__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_short, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_ConvolutionMono16__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ConvolutionMono16'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::ConvolutionMono16(unsigned short *,unsigned short *,int const,int const,vctDynamicVector< int > &,bool,bool)\n"
  "    svlImageProcessingHelper::ConvolutionMono16(unsigned short *,unsigned short *,int const,int const,vctDynamicMatrix< int > &,bool)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_ConvolutionMono32__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned int *arg1 = (unsigned int *) 0 ; unsigned int *arg2 = (unsigned int *) 0 ; int arg3 ; int arg4 ;
  vctDynamicMatrix< int > *arg5 = 0 ; bool arg6 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ;
  int ecode3 = 0 ; int val4 ; int ecode4 = 0 ; bool val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ConvolutionMono32",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_int, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ConvolutionMono32" "', argument " "1"" of type '" "unsigned int *""'");  }
   arg1 = reinterpret_cast< unsigned int * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ConvolutionMono32" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ConvolutionMono32" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ConvolutionMono32" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); {   typedef vctDynamicMatrix< int > MatrixType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj4) && vctThrowUnlessDimension2(obj4)
    && vctThrowUnlessCorrectMatrixSize(obj4, *(arg5)) && vctThrowUnlessIsWritable(obj4) && vctThrowUnlessOwnsData(obj4, *(arg5))
    && vctThrowUnlessNotReferenced(obj4, *(arg5))) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj4, 0);
    const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    arg5 = new MatrixType(tempContainer); }  ecode6 = SWIG_AsVal_bool(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ConvolutionMono32" "', argument " "6"" of type '" "bool""'"); }  
  arg6 = static_cast< bool >(val6); svlImageProcessingHelper::ConvolutionMono32(arg1,arg2,arg3,arg4,*arg5,arg6);
  resultobj = SWIG_Py_Void(); {   typedef vctDynamicMatrix< int > MatrixType;
    const MatrixType::size_type input_size0 = PyArray_DIM(obj4, 0);
    const MatrixType::size_type input_size1 = PyArray_DIM(obj4, 1); const MatrixType::size_type output_size0 = arg5->sizes()[0];
    const MatrixType::size_type output_size1 = arg5->sizes()[1]; if (   input_size0 != output_size0
    || input_size1 != output_size1) {    npy_intp *sizes = PyDimMem_NEW(2);              
      sizes[0] = output_size0;                         sizes[1] = output_size1; PyArray_Dims dims;                              
      dims.ptr = sizes; dims.len = 2; PyArray_Resize((PyArrayObject *) obj4, &dims, 0, NPY_CORDER); }   
    const npy_intp size0 = PyArray_DIM(obj4, 0); const npy_intp size1 = PyArray_DIM(obj4, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj4, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj4, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj4));
    vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    tempContainer.Assign(*(arg5));   delete arg5; }  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ConvolutionMono32(PyObject *self, PyObject *args) { int argc; PyObject *argv[8]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res);
      if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 2) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_ConvolutionMono32__SWIG_1(self, args);}  }  }  }  }  }  }  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_unsigned_int, 0); _v = SWIG_CheckState(res); if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[4])) {
                _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[4]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }  }
               }  if (_v) { { int res = SWIG_AsVal_bool(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_ConvolutionMono32__SWIG_0(self, args);}  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'ConvolutionMono32'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::ConvolutionMono32(unsigned int *,unsigned int *,int const,int const,vctDynamicVector< int > &,bool,bool)\n"
  "    svlImageProcessingHelper::ConvolutionMono32(unsigned int *,unsigned int *,int const,int const,vctDynamicMatrix< int > &,bool)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_UnsharpMaskBlurRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ; int arg3 ; int arg4 ; int arg5 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; int val3 ; int ecode3 = 0 ; int val4 ; int ecode4 = 0 ;
  int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"UnsharpMaskBlurRGB",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnsharpMaskBlurRGB" "', argument " "1"" of type '" "unsigned char const *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnsharpMaskBlurRGB" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "UnsharpMaskBlurRGB" "', argument " "3"" of type '" "int""'"); }  
  arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UnsharpMaskBlurRGB" "', argument " "4"" of type '" "int""'"); }  
  arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "UnsharpMaskBlurRGB" "', argument " "5"" of type '" "int""'"); }  
  arg5 = static_cast< int >(val5);
  svlImageProcessingHelper::UnsharpMaskBlurRGB((unsigned char const *)arg1,arg2,arg3,arg4,arg5); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_UnsharpMaskSharpenRGB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned char *arg2 = (unsigned char *) 0 ;
  unsigned char *arg3 = (unsigned char *) 0 ; int arg4 ; int arg5 ; int arg6 ; int arg7 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; int val4 ; int ecode4 = 0 ; int val5 ; int ecode5 = 0 ;
  int val6 ; int ecode6 = 0 ; int val7 ; int ecode7 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"UnsharpMaskSharpenRGB",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "UnsharpMaskSharpenRGB" "', argument " "1"" of type '" "unsigned char const *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "UnsharpMaskSharpenRGB" "', argument " "2"" of type '" "unsigned char const *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "UnsharpMaskSharpenRGB" "', argument " "3"" of type '" "unsigned char *""'");  }
   arg3 = reinterpret_cast< unsigned char * >(argp3); ecode4 = SWIG_AsVal_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "UnsharpMaskSharpenRGB" "', argument " "4"" of type '" "int""'"); }
    arg4 = static_cast< int >(val4); ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "UnsharpMaskSharpenRGB" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "UnsharpMaskSharpenRGB" "', argument " "6"" of type '" "int""'"); }
    arg6 = static_cast< int >(val6); ecode7 = SWIG_AsVal_int(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "UnsharpMaskSharpenRGB" "', argument " "7"" of type '" "int""'"); }
    arg7 = static_cast< int >(val7);
  svlImageProcessingHelper::UnsharpMaskSharpenRGB((unsigned char const *)arg1,(unsigned char const *)arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ResampleMono8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned char *arg4 = (unsigned char *) 0 ; unsigned int arg5 ; unsigned int arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ResampleMono8",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResampleMono8" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResampleMono8" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ResampleMono8" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ResampleMono8" "', argument " "4"" of type '" "unsigned char *""'");  }
   arg4 = reinterpret_cast< unsigned char * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ResampleMono8" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ResampleMono8" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); svlImageProcessingHelper::ResampleMono8(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ResampleAndInterpolateHMono8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ; unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ResampleAndInterpolateHMono8",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResampleAndInterpolateHMono8" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResampleAndInterpolateHMono8" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ResampleAndInterpolateHMono8" "', argument " "3"" of type '" "unsigned char *""'");  }
   arg3 = reinterpret_cast< unsigned char * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ResampleAndInterpolateHMono8" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ResampleAndInterpolateHMono8" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); svlImageProcessingHelper::ResampleAndInterpolateHMono8(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ResampleAndInterpolateVMono8(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ; unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ResampleAndInterpolateVMono8",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResampleAndInterpolateVMono8" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResampleAndInterpolateVMono8" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ResampleAndInterpolateVMono8" "', argument " "3"" of type '" "unsigned char *""'");  }
   arg3 = reinterpret_cast< unsigned char * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ResampleAndInterpolateVMono8" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ResampleAndInterpolateVMono8" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); svlImageProcessingHelper::ResampleAndInterpolateVMono8(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ResampleRGB24(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ; unsigned int arg3 ;
  unsigned char *arg4 = (unsigned char *) 0 ; unsigned int arg5 ; unsigned int arg6 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ResampleRGB24",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResampleRGB24" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResampleRGB24" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ResampleRGB24" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ResampleRGB24" "', argument " "4"" of type '" "unsigned char *""'");  }
   arg4 = reinterpret_cast< unsigned char * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ResampleRGB24" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "ResampleRGB24" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); svlImageProcessingHelper::ResampleRGB24(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ResampleAndInterpolateHRGB24(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ; unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ResampleAndInterpolateHRGB24",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResampleAndInterpolateHRGB24" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResampleAndInterpolateHRGB24" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ResampleAndInterpolateHRGB24" "', argument " "3"" of type '" "unsigned char *""'");  }
   arg3 = reinterpret_cast< unsigned char * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ResampleAndInterpolateHRGB24" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ResampleAndInterpolateHRGB24" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); svlImageProcessingHelper::ResampleAndInterpolateHRGB24(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ResampleAndInterpolateVRGB24(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ;
  unsigned char *arg3 = (unsigned char *) 0 ; unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ResampleAndInterpolateVRGB24",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ResampleAndInterpolateVRGB24" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ResampleAndInterpolateVRGB24" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_unsigned_char, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ResampleAndInterpolateVRGB24" "', argument " "3"" of type '" "unsigned char *""'");  }
   arg3 = reinterpret_cast< unsigned char * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ResampleAndInterpolateVRGB24" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ResampleAndInterpolateVRGB24" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); svlImageProcessingHelper::ResampleAndInterpolateVRGB24(arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_DeinterlaceBlending(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"DeinterlaceBlending",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DeinterlaceBlending" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DeinterlaceBlending" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DeinterlaceBlending" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); svlImageProcessingHelper::DeinterlaceBlending(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_DeinterlaceDiscarding(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"DeinterlaceDiscarding",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DeinterlaceDiscarding" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DeinterlaceDiscarding" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DeinterlaceDiscarding" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); svlImageProcessingHelper::DeinterlaceDiscarding(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_DeinterlaceAdaptiveBlending(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"DeinterlaceAdaptiveBlending",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DeinterlaceAdaptiveBlending" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DeinterlaceAdaptiveBlending" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DeinterlaceAdaptiveBlending" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); svlImageProcessingHelper::DeinterlaceAdaptiveBlending(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_DeinterlaceAdaptiveDiscarding(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned char *arg1 = (unsigned char *) 0 ; unsigned int arg2 ; unsigned int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"DeinterlaceAdaptiveDiscarding",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_unsigned_char, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "DeinterlaceAdaptiveDiscarding" "', argument " "1"" of type '" "unsigned char *""'");  }
   arg1 = reinterpret_cast< unsigned char * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "DeinterlaceAdaptiveDiscarding" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "DeinterlaceAdaptiveDiscarding" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); svlImageProcessingHelper::DeinterlaceAdaptiveDiscarding(arg1,arg2,arg3);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_RectificationInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *result = 0 ;
  result = (svlImageProcessingHelper::RectificationInternals *)new svlImageProcessingHelper::RectificationInternals();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_RectificationInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_RectificationInternals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_RectificationInternals" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Generate__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; svlSampleCameraGeometry *arg4 = 0 ; unsigned int arg5 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Generate",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Generate" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_Generate" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RectificationInternals_Generate" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlSampleCameraGeometry,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "RectificationInternals_Generate" "', argument " "4"" of type '" "svlSampleCameraGeometry const &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RectificationInternals_Generate" "', argument " "4"" of type '" "svlSampleCameraGeometry const &""'"); }
   arg4 = reinterpret_cast< svlSampleCameraGeometry * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "RectificationInternals_Generate" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5);
  result = (bool)(arg1)->Generate(arg2,arg3,(svlSampleCameraGeometry const &)*arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Generate__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; svlSampleCameraGeometry *arg4 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Generate",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Generate" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_Generate" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RectificationInternals_Generate" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); res4 = SWIG_ConvertPtr(obj3, &argp4, SWIGTYPE_p_svlSampleCameraGeometry,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "RectificationInternals_Generate" "', argument " "4"" of type '" "svlSampleCameraGeometry const &""'");  }
   if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RectificationInternals_Generate" "', argument " "4"" of type '" "svlSampleCameraGeometry const &""'"); }
   arg4 = reinterpret_cast< svlSampleCameraGeometry * >(argp4);
  result = (bool)(arg1)->Generate(arg2,arg3,(svlSampleCameraGeometry const &)*arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Generate(PyObject *self, PyObject *args) { int argc; PyObject *argv[6];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_svlSampleCameraGeometry, 0); _v = SWIG_CheckState(res); if (_v) {
            return _wrap_RectificationInternals_Generate__SWIG_1(self, args);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_svlSampleCameraGeometry, 0); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_RectificationInternals_Generate__SWIG_0(self, args);}  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'RectificationInternals_Generate'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::RectificationInternals::Generate(unsigned int,unsigned int,svlSampleCameraGeometry const &,unsigned int)\n"
  "    svlImageProcessingHelper::RectificationInternals::Generate(unsigned int,unsigned int,svlSampleCameraGeometry const &)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Load__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  std::string *arg2 = 0 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Load",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Load" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_Load" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RectificationInternals_Load" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RectificationInternals_Load" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (bool)(arg1)->Load((std::string const &)*arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Load__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  std::string *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  bool result; if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Load",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Load" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_Load" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "RectificationInternals_Load" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  result = (bool)(arg1)->Load((std::string const &)*arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Load(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { return _wrap_RectificationInternals_Load__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_RectificationInternals_Load__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'RectificationInternals_Load'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlImageProcessingHelper::RectificationInternals::Load(std::string const &,int)\n"
  "    svlImageProcessingHelper::RectificationInternals::Load(std::string const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_RectificationInternals_SetFromCameraCalibrationPython(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; vct3x3 arg4 ; vct2 arg5 ; vct2 arg6 ; vctFixedSizeVector< double,7 > arg7 ;
  double arg8 ; unsigned int arg9 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ;
  int ecode3 = 0 ; double val8 ; int ecode8 = 0 ; unsigned int val9 ; int ecode9 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; PyObject * obj8 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_SetFromCameraCalibrationPython",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_SetFromCameraCalibrationPython" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_SetFromCameraCalibrationPython" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RectificationInternals_SetFromCameraCalibrationPython" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); {   typedef vct3x3 MatrixType; if (!(   vctThrowUnlessIsPyArray(obj3)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj3) && vctThrowUnlessDimension2(obj3)
    && vctThrowUnlessCorrectMatrixSize(obj3, arg4)) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj3, 0);
    const npy_intp size1 = PyArray_DIM(obj3, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj3, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj3, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj3));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    (&arg4)->ForceAssign(tempContainer); }  {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, arg5)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg5)->ForceAssign(tempContainer); }
   {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj5)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5) && vctThrowUnlessDimension1(obj5)
    && vctThrowUnlessCorrectVectorSize(obj5, arg6)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg6)->ForceAssign(tempContainer); }
   {   typedef vctFixedSizeVector< double,7 > VectorType; if (!(   vctThrowUnlessIsPyArray(obj6)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj6) && vctThrowUnlessDimension1(obj6)
    && vctThrowUnlessCorrectVectorSize(obj6, arg7)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj6, 0);
    const npy_intp stride = PyArray_STRIDE(obj6, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj6));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg7)->ForceAssign(tempContainer); }
   ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "RectificationInternals_SetFromCameraCalibrationPython" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8); ecode9 = SWIG_AsVal_unsigned_SS_int(obj8, &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "RectificationInternals_SetFromCameraCalibrationPython" "', argument " "9"" of type '" "unsigned int""'"); }
    arg9 = static_cast< unsigned int >(val9);
  result = (bool)(arg1)->SetFromCameraCalibration(arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_SetFromCameraCalibration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int arg2 ; unsigned int arg3 ; vct3x3 arg4 ; vct2 arg5 ; vct2 arg6 ; vctFixedSizeVector< double,7 > arg7 ;
  double arg8 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  double val8 ; int ecode8 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_SetFromCameraCalibration",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_SetFromCameraCalibration" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_SetFromCameraCalibration" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RectificationInternals_SetFromCameraCalibration" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); {   typedef vct3x3 MatrixType; if (!(   vctThrowUnlessIsPyArray(obj3)
    && vctThrowUnlessIsSameTypeArray<MatrixType::value_type>(obj3) && vctThrowUnlessDimension2(obj3)
    && vctThrowUnlessCorrectMatrixSize(obj3, arg4)) ) { return NULL; }    const npy_intp size0 = PyArray_DIM(obj3, 0);
    const npy_intp size1 = PyArray_DIM(obj3, 1);
    const npy_intp stride0 = PyArray_STRIDE(obj3, 0) / sizeof(MatrixType::value_type);
    const npy_intp stride1 = PyArray_STRIDE(obj3, 1) / sizeof(MatrixType::value_type);
    const MatrixType::pointer data = reinterpret_cast<MatrixType::pointer>(PyArray_DATA(obj3));
    const vctDynamicMatrixRef<MatrixType::value_type> tempContainer(size0, size1, stride0, stride1, data); 
    (&arg4)->ForceAssign(tempContainer); }  {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj4)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4) && vctThrowUnlessDimension1(obj4)
    && vctThrowUnlessCorrectVectorSize(obj4, arg5)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg5)->ForceAssign(tempContainer); }
   {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj5)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5) && vctThrowUnlessDimension1(obj5)
    && vctThrowUnlessCorrectVectorSize(obj5, arg6)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg6)->ForceAssign(tempContainer); }
   {   typedef vctFixedSizeVector< double,7 > VectorType; if (!(   vctThrowUnlessIsPyArray(obj6)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj6) && vctThrowUnlessDimension1(obj6)
    && vctThrowUnlessCorrectVectorSize(obj6, arg7)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj6, 0);
    const npy_intp stride = PyArray_STRIDE(obj6, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj6));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg7)->ForceAssign(tempContainer); }
   ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "RectificationInternals_SetFromCameraCalibration" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8); result = (bool)(arg1)->SetFromCameraCalibration(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_TransposeLUTArray2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ; unsigned int arg3 ; unsigned int arg4 ; unsigned int arg5 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  unsigned int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_TransposeLUTArray2",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_TransposeLUTArray2" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_TransposeLUTArray2" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "RectificationInternals_TransposeLUTArray2" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "RectificationInternals_TransposeLUTArray2" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "RectificationInternals_TransposeLUTArray2" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); (arg1)->TransposeLUTArray2(arg2,arg3,arg4,arg5); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Width_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Width_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_Width_set" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); if (arg1) (arg1)->Width = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Width_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Width_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int) ((arg1)->Width); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Height_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Height_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_Height_set" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); if (arg1) (arg1)->Height = arg2; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_Height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_Height_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_Height_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int) ((arg1)->Height); resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxDest_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxDest_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxDest_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_idxDest_set" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); if (arg1) (arg1)->idxDest = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxDest_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxDest_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxDest_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int *) ((arg1)->idxDest);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxDestSize_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxDestSize_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxDestSize_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_idxDestSize_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->idxDestSize = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxDestSize_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxDestSize_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxDestSize_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->idxDestSize);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc1_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc1_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_idxSrc1_set" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); if (arg1) (arg1)->idxSrc1 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc1_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc1_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int *) ((arg1)->idxSrc1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc1Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc1Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc1Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_idxSrc1Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->idxSrc1Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc1Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc1Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc1Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->idxSrc1Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc2_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc2_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_idxSrc2_set" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); if (arg1) (arg1)->idxSrc2 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc2_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc2_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int *) ((arg1)->idxSrc2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc2Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc2Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc2Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_idxSrc2Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->idxSrc2Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc2Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc2Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc2Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->idxSrc2Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc3_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc3_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc3_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_idxSrc3_set" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); if (arg1) (arg1)->idxSrc3 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc3_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc3_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc3_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int *) ((arg1)->idxSrc3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc3Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc3Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc3Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_idxSrc3Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->idxSrc3Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc3Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc3Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc3Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->idxSrc3Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc4_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc4_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc4_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_int, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_idxSrc4_set" "', argument " "2"" of type '" "unsigned int *""'");  }
   arg2 = reinterpret_cast< unsigned int * >(argp2); if (arg1) (arg1)->idxSrc4 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc4_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc4_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc4_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned int *) ((arg1)->idxSrc4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_int, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc4Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc4Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc4Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_idxSrc4Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->idxSrc4Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_idxSrc4Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_idxSrc4Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_idxSrc4Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->idxSrc4Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc1_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc1_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_blendSrc1_set" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); if (arg1) (arg1)->blendSrc1 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc1_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc1_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned char *) ((arg1)->blendSrc1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc1Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc1Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc1Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_blendSrc1Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->blendSrc1Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc1Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc1Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc1Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->blendSrc1Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc2_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc2_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc2_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_blendSrc2_set" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); if (arg1) (arg1)->blendSrc2 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc2_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc2_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc2_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned char *) ((arg1)->blendSrc2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc2Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc2Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc2Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_blendSrc2Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->blendSrc2Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc2Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc2Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc2Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->blendSrc2Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc3_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc3_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc3_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_blendSrc3_set" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); if (arg1) (arg1)->blendSrc3 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc3_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc3_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc3_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned char *) ((arg1)->blendSrc3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc3Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc3Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc3Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_blendSrc3Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->blendSrc3Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc3Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc3Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc3Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->blendSrc3Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc4_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc4_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc4_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_unsigned_char, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "RectificationInternals_blendSrc4_set" "', argument " "2"" of type '" "unsigned char *""'");  }
   arg2 = reinterpret_cast< unsigned char * >(argp2); if (arg1) (arg1)->blendSrc4 = arg2; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc4_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; unsigned char *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc4_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc4_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1);
  result = (unsigned char *) ((arg1)->blendSrc4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_unsigned_char, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc4Size_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ; int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc4Size_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc4Size_set" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "RectificationInternals_blendSrc4Size_set" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); if (arg1) (arg1)->blendSrc4Size = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_RectificationInternals_blendSrc4Size_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::RectificationInternals *arg1 = (svlImageProcessingHelper::RectificationInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"RectificationInternals_blendSrc4Size_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "RectificationInternals_blendSrc4Size_get" "', argument " "1"" of type '" "svlImageProcessingHelper::RectificationInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::RectificationInternals * >(argp1); result = (int) ((arg1)->blendSrc4Size);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *RectificationInternals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlImageProcessingHelper__RectificationInternals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ExposureInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *result = 0 ;
  result = (svlImageProcessingHelper::ExposureInternals *)new svlImageProcessingHelper::ExposureInternals();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_SetBrightness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; double arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_SetBrightness",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_SetBrightness" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExposureInternals_SetBrightness" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); (arg1)->SetBrightness(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_GetBrightness(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_GetBrightness",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_GetBrightness" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); result = (double)(arg1)->GetBrightness();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_SetContrast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; double arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_SetContrast",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_SetContrast" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExposureInternals_SetContrast" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); (arg1)->SetContrast(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_GetContrast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_GetContrast",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_GetContrast" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); result = (double)(arg1)->GetContrast();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_SetGamma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; double arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_SetGamma",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_SetGamma" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ExposureInternals_SetGamma" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); (arg1)->SetGamma(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_GetGamma(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_GetGamma",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_GetGamma" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); result = (double)(arg1)->GetGamma();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_CalculateCurve(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_CalculateCurve",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_CalculateCurve" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); (arg1)->CalculateCurve();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_Curve_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ;
  vctDynamicVector< unsigned char > arg2 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_Curve_set",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_Curve_set" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); {  
    typedef vctDynamicVector< unsigned char > VectorType; if (!(   vctThrowUnlessIsPyArray(obj1)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj1) && vctThrowUnlessDimension1(obj1)
    && vctThrowUnlessCorrectVectorSize(obj1, arg2)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg2)->ForceAssign(tempContainer); }
   if (arg1) (arg1)->Curve = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_ExposureInternals_Curve_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; vctDynamicVector< unsigned char > result;
  if(!PyArg_UnpackTuple(args,(char *)"ExposureInternals_Curve_get",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ExposureInternals_Curve_get" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); result =  ((arg1)->Curve); {  
    typedef vctDynamicVector< unsigned char > VectorType;  npy_intp* sizes = PyDimMem_NEW(1); sizes[0] = (&result)->size();
    int type = vctPythonType<VectorType::value_type>(); resultobj = PyArray_SimpleNew(1, sizes, type);  
    const npy_intp size = (&result)->size(); const npy_intp stride = 1;
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(resultobj));
    vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  tempContainer.Assign(result); } 
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_ExposureInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::ExposureInternals *arg1 = (svlImageProcessingHelper::ExposureInternals *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_ExposureInternals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ExposureInternals" "', argument " "1"" of type '" "svlImageProcessingHelper::ExposureInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::ExposureInternals * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *ExposureInternals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlImageProcessingHelper__ExposureInternals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_BlobDetectorInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::BlobDetectorInternals *result = 0 ;
  result = (svlImageProcessingHelper::BlobDetectorInternals *)new svlImageProcessingHelper::BlobDetectorInternals();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_BlobDetectorInternals_CalculateLabels__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::BlobDetectorInternals *arg1 = (svlImageProcessingHelper::BlobDetectorInternals *) 0 ;
  svlSampleImageMono8 *arg2 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg3 = (svlSampleImageMono32 *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"BlobDetectorInternals_CalculateLabels",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "1"" of type '" "svlImageProcessingHelper::BlobDetectorInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::BlobDetectorInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "2"" of type '" "svlSampleImageMono8 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono8 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "3"" of type '" "svlSampleImageMono32 *""'");  }
   arg3 = reinterpret_cast< svlSampleImageMono32 * >(argp3);
  result = (unsigned int)(arg1)->CalculateLabels((svlSampleImageMono8 const *)arg2,arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_BlobDetectorInternals_CalculateLabels__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::BlobDetectorInternals *arg1 = (svlImageProcessingHelper::BlobDetectorInternals *) 0 ;
  svlSampleImageMono8Stereo *arg2 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg3 = (svlSampleImageMono32Stereo *) 0 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"BlobDetectorInternals_CalculateLabels",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "1"" of type '" "svlImageProcessingHelper::BlobDetectorInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::BlobDetectorInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "2"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "3"" of type '" "svlSampleImageMono32Stereo *""'");  }
   arg3 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "BlobDetectorInternals_CalculateLabels" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  result = (unsigned int)(arg1)->CalculateLabels((svlSampleImageMono8Stereo const *)arg2,arg3,arg4);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_BlobDetectorInternals_CalculateLabels(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_BlobDetectorInternals_CalculateLabels__SWIG_0(self, args);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }
           if (_v) { return _wrap_BlobDetectorInternals_CalculateLabels__SWIG_1(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BlobDetectorInternals_CalculateLabels'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::BlobDetectorInternals::CalculateLabels(svlSampleImageMono8 const *,svlSampleImageMono32 *)\n"
  "    svlImageProcessingHelper::BlobDetectorInternals::CalculateLabels(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo *,unsigned int const)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_BlobDetectorInternals_GetBlobs__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::BlobDetectorInternals *arg1 = (svlImageProcessingHelper::BlobDetectorInternals *) 0 ;
  svlSampleImageMono8 *arg2 = (svlSampleImageMono8 *) 0 ; svlSampleImageMono32 *arg3 = (svlSampleImageMono32 *) 0 ;
  svlSampleBlobs *arg4 = (svlSampleBlobs *) 0 ; unsigned int arg5 ; unsigned int arg6 ; double arg7 ; double arg8 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ;
  int res4 = 0 ; unsigned int val5 ; int ecode5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; double val7 ; int ecode7 = 0 ;
  double val8 ; int ecode8 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"BlobDetectorInternals_GetBlobs",8,8,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "1"" of type '" "svlImageProcessingHelper::BlobDetectorInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::BlobDetectorInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono8, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "2"" of type '" "svlSampleImageMono8 const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono8 * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImageMono32, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "3"" of type '" "svlSampleImageMono32 const *""'");  }
   arg3 = reinterpret_cast< svlSampleImageMono32 * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "4"" of type '" "svlSampleBlobs *""'");  }
   arg4 = reinterpret_cast< svlSampleBlobs * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_double(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "7"" of type '" "double""'"); }
    arg7 = static_cast< double >(val7); ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8);
  result = (bool)(arg1)->GetBlobs((svlSampleImageMono8 const *)arg2,(svlSampleImageMono32 const *)arg3,arg4,arg5,arg6,arg7,arg8);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_BlobDetectorInternals_GetBlobs__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::BlobDetectorInternals *arg1 = (svlImageProcessingHelper::BlobDetectorInternals *) 0 ;
  svlSampleImageMono8Stereo *arg2 = (svlSampleImageMono8Stereo *) 0 ;
  svlSampleImageMono32Stereo *arg3 = (svlSampleImageMono32Stereo *) 0 ; svlSampleBlobs *arg4 = (svlSampleBlobs *) 0 ;
  unsigned int arg5 ; unsigned int arg6 ; unsigned int arg7 ; double arg8 ; double arg9 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; unsigned int val5 ;
  int ecode5 = 0 ; unsigned int val6 ; int ecode6 = 0 ; unsigned int val7 ; int ecode7 = 0 ; double val8 ; int ecode8 = 0 ;
  double val9 ; int ecode9 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; PyObject * obj6 = 0 ; PyObject * obj7 = 0 ; PyObject * obj8 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"BlobDetectorInternals_GetBlobs",9,9,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6,&obj7,&obj8)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "1"" of type '" "svlImageProcessingHelper::BlobDetectorInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::BlobDetectorInternals * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSampleImageMono8Stereo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "2"" of type '" "svlSampleImageMono8Stereo const *""'");  }
   arg2 = reinterpret_cast< svlSampleImageMono8Stereo * >(argp2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_svlSampleImageMono32Stereo, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "3"" of type '" "svlSampleImageMono32Stereo const *""'");  }
   arg3 = reinterpret_cast< svlSampleImageMono32Stereo * >(argp3);
  res4 = SWIG_ConvertPtr(obj3, &argp4,SWIGTYPE_p_svlSampleBlobs, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "4"" of type '" "svlSampleBlobs *""'");  }
   arg4 = reinterpret_cast< svlSampleBlobs * >(argp4); ecode5 = SWIG_AsVal_unsigned_SS_int(obj4, &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "5"" of type '" "unsigned int""'"); }
    arg5 = static_cast< unsigned int >(val5); ecode6 = SWIG_AsVal_unsigned_SS_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "6"" of type '" "unsigned int""'"); }
    arg6 = static_cast< unsigned int >(val6); ecode7 = SWIG_AsVal_unsigned_SS_int(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "7"" of type '" "unsigned int""'"); }
    arg7 = static_cast< unsigned int >(val7); ecode8 = SWIG_AsVal_double(obj7, &val8); if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "8"" of type '" "double""'"); }
    arg8 = static_cast< double >(val8); ecode9 = SWIG_AsVal_double(obj8, &val9); if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "BlobDetectorInternals_GetBlobs" "', argument " "9"" of type '" "double""'"); }
    arg9 = static_cast< double >(val9);
  result = (bool)(arg1)->GetBlobs((svlSampleImageMono8Stereo const *)arg2,(svlSampleImageMono32Stereo const *)arg3,arg4,arg5,arg6,arg7,arg8,arg9);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_BlobDetectorInternals_GetBlobs(PyObject *self, PyObject *args) { int argc; PyObject *argv[10];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 9) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 8) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono8, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImageMono32, 0);
        _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_double(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_double(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                    return _wrap_BlobDetectorInternals_GetBlobs__SWIG_0(self, args);}  }  }  }  }  }  }  }  }  if (argc == 9) {
    int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlSampleImageMono8Stereo, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImageMono32Stereo, 0);
        _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_svlSampleBlobs, 0); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_unsigned_SS_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_unsigned_SS_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_unsigned_SS_int(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                    int res = SWIG_AsVal_double(argv[7], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                      int res = SWIG_AsVal_double(argv[8], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                      return _wrap_BlobDetectorInternals_GetBlobs__SWIG_1(self, args);}  }  }  }  }  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'BlobDetectorInternals_GetBlobs'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlImageProcessingHelper::BlobDetectorInternals::GetBlobs(svlSampleImageMono8 const *,svlSampleImageMono32 const *,svlSampleBlobs *,unsigned int,unsigned int,double,double)\n"
  "    svlImageProcessingHelper::BlobDetectorInternals::GetBlobs(svlSampleImageMono8Stereo const *,svlSampleImageMono32Stereo const *,svlSampleBlobs *,unsigned int const,unsigned int,unsigned int,double,double)\n");
  return 0; }
SWIGINTERN PyObject *_wrap_delete_BlobDetectorInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::BlobDetectorInternals *arg1 = (svlImageProcessingHelper::BlobDetectorInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_BlobDetectorInternals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_BlobDetectorInternals" "', argument " "1"" of type '" "svlImageProcessingHelper::BlobDetectorInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::BlobDetectorInternals * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *BlobDetectorInternals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlImageProcessingHelper__BlobDetectorInternals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_EllipseFitterInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlImageProcessingHelper::EllipseFitterInternals *result = 0 ;
  result = (svlImageProcessingHelper::EllipseFitterInternals *)new svlImageProcessingHelper::EllipseFitterInternals();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageProcessingHelper__EllipseFitterInternals, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_EllipseFitterInternals(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  svlImageProcessingHelper::EllipseFitterInternals *arg1 = (svlImageProcessingHelper::EllipseFitterInternals *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_EllipseFitterInternals",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlImageProcessingHelper__EllipseFitterInternals, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_EllipseFitterInternals" "', argument " "1"" of type '" "svlImageProcessingHelper::EllipseFitterInternals *""'");  }
   arg1 = reinterpret_cast< svlImageProcessingHelper::EllipseFitterInternals * >(argp1); delete arg1;
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *EllipseFitterInternals_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlImageProcessingHelper__EllipseFitterInternals, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlVideoCodecCVI::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Services(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  cmnClassServicesBase *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Services",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Services" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1);
  result = (cmnClassServicesBase *)((svlVideoCodecCVI const *)arg1)->Services();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlVideoCodecCVI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *result = 0 ; result = (svlVideoCodecCVI *)new svlVideoCodecCVI();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlVideoCodecCVI, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlVideoCodecCVI(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlVideoCodecCVI",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlVideoCodecCVI" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; std::string *arg2 = 0 ; unsigned int *arg3 = 0 ; unsigned int *arg4 = 0 ;
  double *arg5 = 0 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int temp3 ; int res3 = 0 ;
  unsigned int temp4 ; int res4 = 0 ; double temp5 ; int res5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Open",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Open" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_Open" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_Open" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  if (!(SWIG_IsOK((res3 = SWIG_ConvertPtr(obj2,SWIG_as_voidptrptr(&arg3),SWIGTYPE_p_unsigned_int,0))))) {
    unsigned int val; int ecode = SWIG_AsVal_unsigned_SS_int(obj2, &val); if (!SWIG_IsOK(ecode)) {
      SWIG_exception_fail(SWIG_ArgError(ecode), "in method '" "svlVideoCodecCVI_Open" "', argument " "3"" of type '" "unsigned int""'"); }
     temp3 = static_cast< unsigned int >(val); arg3 = &temp3; res3 = SWIG_AddTmpMask(ecode); } 
  if (!(SWIG_IsOK((res4 = SWIG_ConvertPtr(obj3,SWIG_as_voidptrptr(&arg4),SWIGTYPE_p_unsigned_int,0))))) { unsigned int val;
    int ecode = SWIG_AsVal_unsigned_SS_int(obj3, &val); if (!SWIG_IsOK(ecode)) {
      SWIG_exception_fail(SWIG_ArgError(ecode), "in method '" "svlVideoCodecCVI_Open" "', argument " "4"" of type '" "unsigned int""'"); }
     temp4 = static_cast< unsigned int >(val); arg4 = &temp4; res4 = SWIG_AddTmpMask(ecode); } 
  if (!(SWIG_IsOK((res5 = SWIG_ConvertPtr(obj4,SWIG_as_voidptrptr(&arg5),SWIGTYPE_p_double,0))))) { double val;
    int ecode = SWIG_AsVal_double(obj4, &val); if (!SWIG_IsOK(ecode)) {
      SWIG_exception_fail(SWIG_ArgError(ecode), "in method '" "svlVideoCodecCVI_Open" "', argument " "5"" of type '" "double""'"); }
     temp5 = static_cast< double >(val); arg5 = &temp5; res5 = SWIG_AddTmpMask(ecode); } 
  result = (int)(arg1)->Open((std::string const &)*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsTmpObj(res3)) {
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_unsigned_SS_int((*arg3))); }  else {
    int new_flags = SWIG_IsNewObj(res3) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg3), SWIGTYPE_p_unsigned_int, new_flags)); } 
  if (SWIG_IsTmpObj(res4)) { resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_unsigned_SS_int((*arg4))); }  else {
    int new_flags = SWIG_IsNewObj(res4) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg4), SWIGTYPE_p_unsigned_int, new_flags)); } 
  if (SWIG_IsTmpObj(res5)) { resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_From_double((*arg5))); }  else {
    int new_flags = SWIG_IsNewObj(res5) ? (SWIG_POINTER_OWN |  0 ) :  0 ;
    resultobj = SWIG_Python_AppendOutput(resultobj, SWIG_NewPointerObj((void*)(arg5), SWIGTYPE_p_double, new_flags)); } 
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Create(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; std::string *arg2 = 0 ; unsigned int arg3 ; unsigned int arg4 ;
  double arg5 ; void *argp1 = 0 ; int res1 = 0 ; int res2 = SWIG_OLDOBJ ; unsigned int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Create",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Create" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_Create" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_Create" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVideoCodecCVI_Create" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlVideoCodecCVI_Create" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_double(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlVideoCodecCVI_Create" "', argument " "5"" of type '" "double""'"); }
    arg5 = static_cast< double >(val5); result = (int)(arg1)->Create((std::string const &)*arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail:
  if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Close",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Close" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (int)(arg1)->Close();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetBegPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetBegPos",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetBegPos" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (int)((svlVideoCodecCVI const *)arg1)->GetBegPos();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetEndPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetEndPos",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetEndPos" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (int)((svlVideoCodecCVI const *)arg1)->GetEndPos();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetPos",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetPos" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (int)((svlVideoCodecCVI const *)arg1)->GetPos();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetPos",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetPos" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetPos" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (int)(arg1)->SetPos(arg2); resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetBegTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result; if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetBegTime",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetBegTime" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (double)((svlVideoCodecCVI const *)arg1)->GetBegTime();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetEndTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result; if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetEndTime",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetEndTime" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (double)((svlVideoCodecCVI const *)arg1)->GetEndTime();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetTimeAtPos(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetTimeAtPos",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetTimeAtPos" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_GetTimeAtPos" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (double)((svlVideoCodecCVI const *)arg1)->GetTimeAtPos(arg2);
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetPosAtTime(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; double arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetPosAtTime",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetPosAtTime" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_GetPosAtTime" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (int)((svlVideoCodecCVI const *)arg1)->GetPosAtTime(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetCompression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlVideoIO::Compression *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetCompression",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetCompression" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1);
  result = (svlVideoIO::Compression *)((svlVideoCodecCVI const *)arg1)->GetCompression();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlVideoIO__Compression, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetCompression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ;
  svlVideoIO::Compression *arg2 = (svlVideoIO::Compression *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetCompression",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetCompression" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlVideoIO__Compression, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_SetCompression" "', argument " "2"" of type '" "svlVideoIO::Compression const *""'");  }
   arg2 = reinterpret_cast< svlVideoIO::Compression * >(argp2);
  result = (int)(arg1)->SetCompression((svlVideoIO::Compression const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_DialogCompression(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_DialogCompression",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_DialogCompression" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (int)(arg1)->DialogCompression();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result; if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetTimestamp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetTimestamp" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); result = (double)((svlVideoCodecCVI const *)arg1)->GetTimestamp();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; double arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetTimestamp",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetTimestamp" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetTimestamp" "', argument " "2"" of type '" "double""'"); }
    arg2 = static_cast< double >(val2); result = (int)(arg1)->SetTimestamp(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Read__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; svlProcInfo *arg2 = (svlProcInfo *) 0 ;
  svlSampleImage *arg3 = 0 ; unsigned int arg4 ; bool arg5 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; bool val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Read",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Read" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_Read" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_svlSampleImage,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlVideoCodecCVI_Read" "', argument " "3"" of type '" "svlSampleImage &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_Read" "', argument " "3"" of type '" "svlSampleImage &""'"); }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlVideoCodecCVI_Read" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); ecode5 = SWIG_AsVal_bool(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlVideoCodecCVI_Read" "', argument " "5"" of type '" "bool""'"); }
    arg5 = static_cast< bool >(val5); result = (int)(arg1)->Read(arg2,*arg3,arg4,arg5);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Read__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; svlProcInfo *arg2 = (svlProcInfo *) 0 ;
  svlSampleImage *arg3 = 0 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Read",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Read" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_Read" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_svlSampleImage,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlVideoCodecCVI_Read" "', argument " "3"" of type '" "svlSampleImage &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_Read" "', argument " "3"" of type '" "svlSampleImage &""'"); }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlVideoCodecCVI_Read" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->Read(arg2,*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Read(PyObject *self, PyObject *args) { int argc; PyObject *argv[6]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 5) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVideoCodecCVI, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlProcInfo, 0); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }
           if (_v) { return _wrap_svlVideoCodecCVI_Read__SWIG_1(self, args);}  }  }  }  }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVideoCodecCVI, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlProcInfo, 0); _v = SWIG_CheckState(res);
      if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_svlSampleImage, 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }
           if (_v) { { int res = SWIG_AsVal_bool(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) {
              return _wrap_svlVideoCodecCVI_Read__SWIG_0(self, args);}  }  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVideoCodecCVI_Read'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVideoCodecCVI::Read(svlProcInfo *,svlSampleImage &,unsigned int const,bool const)\n"
  "    svlVideoCodecCVI::Read(svlProcInfo *,svlSampleImage &,unsigned int const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_Write(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; svlProcInfo *arg2 = (svlProcInfo *) 0 ; svlSampleImage *arg3 = 0 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_Write",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_Write" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlProcInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_Write" "', argument " "2"" of type '" "svlProcInfo *""'");  }
   arg2 = reinterpret_cast< svlProcInfo * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_svlSampleImage,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlVideoCodecCVI_Write" "', argument " "3"" of type '" "svlSampleImage const &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_Write" "', argument " "3"" of type '" "svlSampleImage const &""'"); }
   arg3 = reinterpret_cast< svlSampleImage * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlVideoCodecCVI_Write" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->Write(arg2,(svlSampleImage const &)*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetExtension(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetExtension",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetExtension" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_SetExtension" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_SetExtension" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->SetExtension((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetEncoderID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int temp2 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetEncoderID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetEncoderID" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetEncoderID" "', argument " "2"" of type '" "int""'"); }
    temp2 = static_cast< int >(val2); arg2 = &temp2; (arg1)->SetEncoderID((int const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetCompressionLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int temp2 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetCompressionLevel",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetCompressionLevel" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetCompressionLevel" "', argument " "2"" of type '" "int""'"); }
    temp2 = static_cast< int >(val2); arg2 = &temp2; (arg1)->SetCompressionLevel((int const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetQualityBased(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  bool temp2 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetQualityBased",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetQualityBased" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetQualityBased" "', argument " "2"" of type '" "bool""'"); }
    temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->SetQualityBased((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetTargetQuantizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  double temp2 ; double val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetTargetQuantizer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetTargetQuantizer" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_double(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetTargetQuantizer" "', argument " "2"" of type '" "double""'"); }
    temp2 = static_cast< double >(val2); arg2 = &temp2; (arg1)->SetTargetQuantizer((double const &)*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetDatarate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int temp2 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetDatarate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetDatarate" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetDatarate" "', argument " "2"" of type '" "int""'"); }
    temp2 = static_cast< int >(val2); arg2 = &temp2; (arg1)->SetDatarate((int const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_SetKeyFrameEvery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  int temp2 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_SetKeyFrameEvery",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_SetKeyFrameEvery" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVideoCodecCVI_SetKeyFrameEvery" "', argument " "2"" of type '" "int""'"); }
    temp2 = static_cast< int >(val2); arg2 = &temp2; (arg1)->SetKeyFrameEvery((int const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_IsCompressionLevelEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_IsCompressionLevelEnabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_IsCompressionLevelEnabled" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_IsCompressionLevelEnabled" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_IsCompressionLevelEnabled" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlVideoCodecCVI const *)arg1)->IsCompressionLevelEnabled(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_IsEncoderListEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_IsEncoderListEnabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_IsEncoderListEnabled" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_IsEncoderListEnabled" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_IsEncoderListEnabled" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlVideoCodecCVI const *)arg1)->IsEncoderListEnabled(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_IsTargetQuantizerEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_IsTargetQuantizerEnabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_IsTargetQuantizerEnabled" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_IsTargetQuantizerEnabled" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_IsTargetQuantizerEnabled" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlVideoCodecCVI const *)arg1)->IsTargetQuantizerEnabled(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_IsDatarateEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_IsDatarateEnabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_IsDatarateEnabled" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_IsDatarateEnabled" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_IsDatarateEnabled" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlVideoCodecCVI const *)arg1)->IsDatarateEnabled(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_IsKeyFrameEveryEnabled(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_IsKeyFrameEveryEnabled",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_IsKeyFrameEveryEnabled" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_IsKeyFrameEveryEnabled" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_IsKeyFrameEveryEnabled" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlVideoCodecCVI const *)arg1)->IsKeyFrameEveryEnabled(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetCompressionLevel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetCompressionLevel",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetCompressionLevel" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetCompressionLevel" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetCompressionLevel" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetCompressionLevel(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetEncoderList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetEncoderList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetEncoderList" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetEncoderList" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetEncoderList" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetEncoderList(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetEncoderID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetEncoderID",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetEncoderID" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetEncoderID" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetEncoderID" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetEncoderID(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetQualityBased(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetQualityBased",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetQualityBased" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetQualityBased" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetQualityBased" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetQualityBased(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetTargetQuantizer(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; double *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetTargetQuantizer",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetTargetQuantizer" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_double,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetTargetQuantizer" "', argument " "2"" of type '" "double &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetTargetQuantizer" "', argument " "2"" of type '" "double &""'"); }
   arg2 = reinterpret_cast< double * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetTargetQuantizer(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetDatarate(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetDatarate",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetDatarate" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetDatarate" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetDatarate" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetDatarate(*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_GetKeyFrameEvery(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; int *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_GetKeyFrameEvery",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_GetKeyFrameEvery" "', argument " "1"" of type '" "svlVideoCodecCVI const *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_GetKeyFrameEvery" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_GetKeyFrameEvery" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); ((svlVideoCodecCVI const *)arg1)->GetKeyFrameEvery(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVideoCodecCVI_ReadPython(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVideoCodecCVI *arg1 = (svlVideoCodecCVI *) 0 ; svlSampleImage *arg2 = 0 ; unsigned int arg3 ;
  bool arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; bool val4 ;
  int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVideoCodecCVI_ReadPython",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVideoCodecCVI, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVideoCodecCVI_ReadPython" "', argument " "1"" of type '" "svlVideoCodecCVI *""'");  }
   arg1 = reinterpret_cast< svlVideoCodecCVI * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlSampleImage,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVideoCodecCVI_ReadPython" "', argument " "2"" of type '" "svlSampleImage &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVideoCodecCVI_ReadPython" "', argument " "2"" of type '" "svlSampleImage &""'"); }
   arg2 = reinterpret_cast< svlSampleImage * >(argp2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVideoCodecCVI_ReadPython" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); ecode4 = SWIG_AsVal_bool(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlVideoCodecCVI_ReadPython" "', argument " "4"" of type '" "bool""'"); }
    arg4 = static_cast< bool >(val4); result = (int)svlVideoCodecCVI_ReadPython(arg1,*arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *svlVideoCodecCVI_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlVideoCodecCVI, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterImageWindow_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterImageWindow::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterImageWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterImageWindow *result = 0 ; result = (svlFilterImageWindow *)new svlFilterImageWindow();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterImageWindow, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterImageWindow(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterImageWindow",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterImageWindow" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_SetPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; int arg2 ; int arg3 ; unsigned int arg4 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_SetPosition",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->SetPosition(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_SetPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; int arg2 ; int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_SetPosition",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageWindow_SetPosition" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->SetPosition(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_SetPosition(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterImageWindow_SetPosition__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterImageWindow_SetPosition__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageWindow_SetPosition'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageWindow::SetPosition(int const,int const,unsigned int const)\n"
  "    svlFilterImageWindow::SetPosition(int const,int const)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_GetPosition__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; int *arg2 = 0 ; int *arg3 = 0 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_GetPosition",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "1"" of type '" "svlFilterImageWindow const *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetPosition" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "3"" of type '" "int &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetPosition" "', argument " "3"" of type '" "int &""'"); }
   arg3 = reinterpret_cast< int * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)((svlFilterImageWindow const *)arg1)->GetPosition(*arg2,*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_GetPosition__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; int *arg2 = 0 ; int *arg3 = 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_GetPosition",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "1"" of type '" "svlFilterImageWindow const *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetPosition" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlFilterImageWindow_GetPosition" "', argument " "3"" of type '" "int &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetPosition" "', argument " "3"" of type '" "int &""'"); }
   arg3 = reinterpret_cast< int * >(argp3); result = (int)((svlFilterImageWindow const *)arg1)->GetPosition(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_GetPosition(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0); _v = SWIG_CheckState(res); if (_v) {
          return _wrap_svlFilterImageWindow_GetPosition__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0); _v = SWIG_CheckState(res); if (_v) {
        void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0); _v = SWIG_CheckState(res); if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterImageWindow_GetPosition__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageWindow_GetPosition'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageWindow::GetPosition(int &,int &,unsigned int) const\n"
  "    svlFilterImageWindow::GetPosition(int &,int &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_SetEventHandler(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ;
  svlWindowEventHandlerBase *arg2 = (svlWindowEventHandlerBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_SetEventHandler",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_SetEventHandler" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlWindowEventHandlerBase, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_SetEventHandler" "', argument " "2"" of type '" "svlWindowEventHandlerBase *""'");  }
   arg2 = reinterpret_cast< svlWindowEventHandlerBase * >(argp2); (arg1)->SetEventHandler(arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_SetFullScreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; bool temp2 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_SetFullScreen",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_SetFullScreen" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageWindow_SetFullScreen" "', argument " "2"" of type '" "bool""'"); }
    temp2 = static_cast< bool >(val2); arg2 = &temp2; (arg1)->SetFullScreen((bool const &)*arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_SetTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; int res2 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_SetTitle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_SetTitle" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); { std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_SetTitle" "', argument " "2"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_SetTitle" "', argument " "2"" of type '" "std::string const &""'"); }
     arg2 = ptr; }  (arg1)->SetTitle((std::string const &)*arg2); resultobj = SWIG_Py_Void();
  if (SWIG_IsNewObj(res2)) delete arg2; return resultobj; fail: if (SWIG_IsNewObj(res2)) delete arg2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_GetIsVisible(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_GetIsVisible",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_GetIsVisible" "', argument " "1"" of type '" "svlFilterImageWindow const *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_GetIsVisible" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetIsVisible" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlFilterImageWindow const *)arg1)->GetIsVisible(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_GetFullScreen(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; bool *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_GetFullScreen",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_GetFullScreen" "', argument " "1"" of type '" "svlFilterImageWindow const *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_bool,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_GetFullScreen" "', argument " "2"" of type '" "bool &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetFullScreen" "', argument " "2"" of type '" "bool &""'"); }
   arg2 = reinterpret_cast< bool * >(argp2); ((svlFilterImageWindow const *)arg1)->GetFullScreen(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_GetTitle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; std::string *arg2 = 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_GetTitle",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_GetTitle" "', argument " "1"" of type '" "svlFilterImageWindow const *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_std__string,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterImageWindow_GetTitle" "', argument " "2"" of type '" "std::string &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterImageWindow_GetTitle" "', argument " "2"" of type '" "std::string &""'"); }
   arg2 = reinterpret_cast< std::string * >(argp2); ((svlFilterImageWindow const *)arg1)->GetTitle(*arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_Show__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; unsigned int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_Show",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_Show" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageWindow_Show" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); (arg1)->Show(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_Show__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_Show",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_Show" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); (arg1)->Show(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_Show(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlFilterImageWindow_Show__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageWindow_Show__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageWindow_Show'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageWindow::Show(unsigned int)\n" "    svlFilterImageWindow::Show()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_Hide__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; unsigned int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_Hide",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_Hide" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageWindow_Hide" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); (arg1)->Hide(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_Hide__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageWindow *arg1 = (svlFilterImageWindow *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageWindow_Hide",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageWindow, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageWindow_Hide" "', argument " "1"" of type '" "svlFilterImageWindow *""'");  }
   arg1 = reinterpret_cast< svlFilterImageWindow * >(argp1); (arg1)->Hide(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageWindow_Hide(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlFilterImageWindow_Hide__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageWindow, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageWindow_Hide__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageWindow_Hide'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageWindow::Hide(unsigned int)\n" "    svlFilterImageWindow::Hide()\n");
  return 0; }
SWIGINTERN PyObject *svlFilterImageWindow_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterImageWindow, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterImageCameraCalibrationOpenCV::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterImageCameraCalibrationOpenCV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *result = 0 ;
  result = (svlFilterImageCameraCalibrationOpenCV *)new svlFilterImageCameraCalibrationOpenCV();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterImageCameraCalibrationOpenCV(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterImageCameraCalibrationOpenCV",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterImageCameraCalibrationOpenCV" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); delete arg1; resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImages__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  std::string arg2 ; std::string arg3 ; std::string arg4 ; int arg5 ; int arg6 ; bool arg7 ; void *argp1 = 0 ; int res1 = 0 ;
  int val5 ; int ecode5 = 0 ; int val6 ; int ecode6 = 0 ; bool val7 ; int ecode7 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ;
  PyObject * obj6 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_ProcessImages",7,7,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5,&obj6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "2"" of type '" "std::string""'");  }
     arg2 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "3"" of type '" "std::string""'");  }
     arg3 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj3, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "4"" of type '" "std::string""'");  }
     arg4 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "6"" of type '" "int""'"); }
    arg6 = static_cast< int >(val6); ecode7 = SWIG_AsVal_bool(obj6, &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "7"" of type '" "bool""'"); }
    arg7 = static_cast< bool >(val7); result = (bool)(arg1)->ProcessImages(arg2,arg3,arg4,arg5,arg6,arg7);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImages__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  std::string arg2 ; std::string arg3 ; std::string arg4 ; int arg5 ; int arg6 ; void *argp1 = 0 ; int res1 = 0 ; int val5 ;
  int ecode5 = 0 ; int val6 ; int ecode6 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_ProcessImages",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "2"" of type '" "std::string""'");  }
     arg2 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "3"" of type '" "std::string""'");  }
     arg3 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj3, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "4"" of type '" "std::string""'");  }
     arg4 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); ecode6 = SWIG_AsVal_int(obj5, &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImages" "', argument " "6"" of type '" "int""'"); }
    arg6 = static_cast< int >(val6); result = (bool)(arg1)->ProcessImages(arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImages(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[8]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 7) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 6) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); } 
            if (_v) { { int res = SWIG_AsVal_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                return _wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImages__SWIG_1(self, args);}  }  }  }  }  }  } 
  if (argc == 7) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                int res = SWIG_AsVal_int(argv[5], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
                  int res = SWIG_AsVal_bool(argv[6], NULL); _v = SWIG_CheckState(res); }  if (_v) {
                  return _wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImages__SWIG_0(self, args);}  }  }  }  }  }  }  } 
  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageCameraCalibrationOpenCV_ProcessImages'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterImageCameraCalibrationOpenCV::ProcessImages(std::string,std::string,std::string,int,int,bool)\n"
  "    svlFilterImageCameraCalibrationOpenCV::ProcessImages(std::string,std::string,std::string,int,int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImage__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  std::string arg2 ; std::string arg3 ; std::string arg4 ; int arg5 ; vctDynamicVector< vctInt2 > arg6 ; void *argp1 = 0 ;
  int res1 = 0 ; int val5 ; int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; PyObject * obj4 = 0 ; PyObject * obj5 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_ProcessImage",6,6,&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "2"" of type '" "std::string""'");  }
     arg2 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "3"" of type '" "std::string""'");  }
     arg3 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj3, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "4"" of type '" "std::string""'");  }
     arg4 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); {   typedef vctDynamicVector< vctInt2 > VectorType; if (!(   vctThrowUnlessIsPyArray(obj5)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj5) && vctThrowUnlessDimension1(obj5)
    && vctThrowUnlessCorrectVectorSize(obj5, arg6)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj5, 0);
    const npy_intp stride = PyArray_STRIDE(obj5, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj5));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg6)->ForceAssign(tempContainer); }
   result = (bool)(arg1)->ProcessImage(arg2,arg3,arg4,arg5,arg6); resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImage__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  std::string arg2 ; std::string arg3 ; std::string arg4 ; int arg5 ; void *argp1 = 0 ; int res1 = 0 ; int val5 ;
  int ecode5 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_ProcessImage",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "2"" of type '" "std::string""'");  }
     arg2 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj2, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "3"" of type '" "std::string""'");  }
     arg3 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj3, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "4"" of type '" "std::string""'");  }
     arg4 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  ecode5 = SWIG_AsVal_int(obj4, &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "svlFilterImageCameraCalibrationOpenCV_ProcessImage" "', argument " "5"" of type '" "int""'"); }
    arg5 = static_cast< int >(val5); result = (bool)(arg1)->ProcessImage(arg2,arg3,arg4,arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImage(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[7]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 6) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 5) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0);
    _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0));
      _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res); if (_v) { int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); } 
            if (_v) { return _wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImage__SWIG_1(self, args);}  }  }  }  }  } 
  if (argc == 6) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0); _v = SWIG_CheckState(res);
    if (_v) { int res = SWIG_AsPtr_std_string(argv[1], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
        int res = SWIG_AsPtr_std_string(argv[2], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) {
          int res = SWIG_AsPtr_std_string(argv[3], (std::string**)(0)); _v = SWIG_CheckState(res); if (_v) { {
              int res = SWIG_AsVal_int(argv[4], NULL); _v = SWIG_CheckState(res); }  if (_v) { {  if (!PyArray_Check(argv[5])) {
                  _v = 0; PyErr_Clear(); }  else {  if (PyArray_NDIM(argv[5]) != 1) { _v = 0; PyErr_Clear(); }  else { _v = 1; }
                   }  }  if (_v) { return _wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImage__SWIG_0(self, args);}  }  }  }
         }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageCameraCalibrationOpenCV_ProcessImage'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterImageCameraCalibrationOpenCV::ProcessImage(std::string,std::string,std::string,int,vctDynamicVector< vctInt2 >)\n"
  "    svlFilterImageCameraCalibrationOpenCV::ProcessImage(std::string,std::string,std::string,int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_Reset(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_Reset",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_Reset" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); (arg1)->Reset(); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); result = (bool)(arg1)->RunCameraCalibration(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_SetBoardSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  int arg2 ; int arg3 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_SetBoardSize",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetBoardSize" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetBoardSize" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetBoardSize" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); (arg1)->SetBoardSize(arg2,arg3); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_SetSquareSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  float arg2 ; void *argp1 = 0 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_SetSquareSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetSquareSize" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); ecode2 = SWIG_AsVal_float(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetSquareSize" "', argument " "2"" of type '" "float""'"); }
    arg2 = static_cast< float >(val2); (arg1)->SetSquareSize(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_GetImages(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  SwigValueWrapper< std::vector< svlSampleImageRGB,std::allocator< svlSampleImageRGB > > > result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_GetImages",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_GetImages" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); result = (arg1)->GetImages();
  resultobj = SWIG_NewPointerObj((new std::vector< svlSampleImageRGB,std::allocator< svlSampleImageRGB > >(static_cast< const std::vector< svlSampleImageRGB,std::allocator< svlSampleImageRGB > >& >(result))), SWIGTYPE_p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  int arg2 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  svlSampleCameraGeometry *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (svlSampleCameraGeometry *)(arg1)->GetCameraGeometry(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleCameraGeometry, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; svlSampleCameraGeometry *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1);
  result = (svlSampleCameraGeometry *)(arg1)->GetCameraGeometry();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlSampleCameraGeometry, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0);
    _v = SWIG_CheckState(res); if (_v) {
      return _wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry__SWIG_1(self, args);}  }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterImageCameraCalibrationOpenCV::GetCameraGeometry(int)\n"
  "    svlFilterImageCameraCalibrationOpenCV::GetCameraGeometry()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  vct2 arg2 ; vct2 arg3 ; double arg4 ; vctFixedSizeVector< double,7 > arg5 ; void *argp1 = 0 ; int res1 = 0 ; double val4 ;
  int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; PyObject * obj4 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry",5,5,&obj0,&obj1,&obj2,&obj3,&obj4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); {   typedef vct2 VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj1) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj1)
    && vctThrowUnlessDimension1(obj1) && vctThrowUnlessCorrectVectorSize(obj1, arg2)) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj1, 0);
    const npy_intp stride = PyArray_STRIDE(obj1, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj1));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg2)->ForceAssign(tempContainer); }
   {   typedef vct2 VectorType; if (!(   vctThrowUnlessIsPyArray(obj2)
    && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj2) && vctThrowUnlessDimension1(obj2)
    && vctThrowUnlessCorrectVectorSize(obj2, arg3)) ) { return NULL; }    const npy_intp size = PyArray_DIM(obj2, 0);
    const npy_intp stride = PyArray_STRIDE(obj2, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj2));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg3)->ForceAssign(tempContainer); }
   ecode4 = SWIG_AsVal_double(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry" "', argument " "4"" of type '" "double""'"); }
    arg4 = static_cast< double >(val4); {   typedef vctFixedSizeVector< double,7 > VectorType;
    if (!(   vctThrowUnlessIsPyArray(obj4) && vctThrowUnlessIsSameTypeArray<VectorType::value_type>(obj4)
    && vctThrowUnlessDimension1(obj4) && vctThrowUnlessCorrectVectorSize(obj4, arg5)) ) { return NULL; }   
    const npy_intp size = PyArray_DIM(obj4, 0);
    const npy_intp stride = PyArray_STRIDE(obj4, 0) / sizeof(VectorType::value_type);
    const VectorType::pointer data = reinterpret_cast<VectorType::pointer>(PyArray_DATA(obj4));
    const vctDynamicVectorRef<VectorType::value_type> tempContainer(size, data, stride);  (&arg5)->ForceAssign(tempContainer); }
   (arg1)->SetCameraGeometry(arg2,arg3,arg4,arg5); resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_PrintCalibrationParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_PrintCalibrationParameters",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_PrintCalibrationParameters" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); (arg1)->PrintCalibrationParameters();
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  std::string arg2 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1); { std::string *ptr = (std::string *)0;
    int res = SWIG_AsPtr_std_string(obj1, &ptr); if (!SWIG_IsOK(res) || !ptr) {
      SWIG_exception_fail(SWIG_ArgError((ptr ? res : SWIG_TypeError)), "in method '" "svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters" "', argument " "2"" of type '" "std::string""'");  }
     arg2 = *ptr; if (SWIG_IsNewObj(res)) delete ptr; }  (arg1)->WriteToFileCalibrationParameters(arg2);
  resultobj = SWIG_Py_Void(); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraCalibrationReprojectionError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_GetCameraCalibrationReprojectionError",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_GetCameraCalibrationReprojectionError" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1);
  result = (double)(arg1)->GetCameraCalibrationReprojectionError(); resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterImageCameraCalibrationOpenCV_GetHandEyeCalibrationError(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterImageCameraCalibrationOpenCV *arg1 = (svlFilterImageCameraCalibrationOpenCV *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterImageCameraCalibrationOpenCV_GetHandEyeCalibrationError",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterImageCameraCalibrationOpenCV_GetHandEyeCalibrationError" "', argument " "1"" of type '" "svlFilterImageCameraCalibrationOpenCV *""'");  }
   arg1 = reinterpret_cast< svlFilterImageCameraCalibrationOpenCV * >(argp1);
  result = (double)(arg1)->GetHandEyeCalibrationError(); resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *svlFilterImageCameraCalibrationOpenCV_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterImageCameraCalibrationOpenCV, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlFilterSourceVideoCapture::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceVideoCapture__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *result = 0 ;
  result = (svlFilterSourceVideoCapture *)new svlFilterSourceVideoCapture();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterSourceVideoCapture, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceVideoCapture__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned int arg1 ; unsigned int val1 ; int ecode1 = 0 ; PyObject * obj0 = 0 ;
  svlFilterSourceVideoCapture *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_svlFilterSourceVideoCapture",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_svlFilterSourceVideoCapture" "', argument " "1"" of type '" "unsigned int""'"); }
    arg1 = static_cast< unsigned int >(val1); result = (svlFilterSourceVideoCapture *)new svlFilterSourceVideoCapture(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterSourceVideoCapture, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterSourceVideoCapture(PyObject *self, PyObject *args) { int argc; PyObject *argv[2];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 1) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 0) {
    return _wrap_new_svlFilterSourceVideoCapture__SWIG_0(self, args);}  if (argc == 1) { int _v; {
      int res = SWIG_AsVal_unsigned_SS_int(argv[0], NULL); _v = SWIG_CheckState(res); }  if (_v) {
      return _wrap_new_svlFilterSourceVideoCapture__SWIG_1(self, args);}  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'new_svlFilterSourceVideoCapture'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::svlFilterSourceVideoCapture()\n"
  "    svlFilterSourceVideoCapture::svlFilterSourceVideoCapture(unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_delete_svlFilterSourceVideoCapture(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterSourceVideoCapture",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterSourceVideoCapture" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_EnumerateDevices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_EnumerateDevices",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_EnumerateDevices" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->EnumerateDevices();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetChannelCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetChannelCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetChannelCount" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SetChannelCount" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SetChannelCount(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogSetup__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogSetup",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogSetup" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_DialogSetup" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogSetup(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogSetup__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogSetup",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogSetup" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->DialogSetup();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogSetup(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogSetup__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogSetup__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_DialogSetup'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::DialogSetup(unsigned int)\n"
  "    svlFilterSourceVideoCapture::DialogSetup()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogDevice(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogDevice",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogDevice" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->DialogDevice();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogInput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogInput",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogInput" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_DialogInput" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogInput(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogFormat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_DialogFormat" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogFormat(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogFormat",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->DialogFormat();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogFormat(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogFormat__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogFormat__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_DialogFormat'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::DialogFormat(unsigned int)\n"
  "    svlFilterSourceVideoCapture::DialogFormat()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogTrigger__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogTrigger",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogTrigger" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_DialogTrigger" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogTrigger(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogTrigger__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogTrigger",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogTrigger" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->DialogTrigger();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogTrigger(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogTrigger__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogTrigger__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_DialogTrigger'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::DialogTrigger(unsigned int)\n"
  "    svlFilterSourceVideoCapture::DialogTrigger()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogImageProperties__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogImageProperties",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogImageProperties" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_DialogImageProperties" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->DialogImageProperties(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogImageProperties__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_DialogImageProperties",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_DialogImageProperties" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->DialogImageProperties();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_DialogImageProperties(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_DialogImageProperties__SWIG_1(self, args);}  }
   if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoCapture_DialogImageProperties__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_DialogImageProperties'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::DialogImageProperties(unsigned int)\n"
  "    svlFilterSourceVideoCapture::DialogImageProperties()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetDeviceList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::DeviceInfo **arg2 = (svlFilterSourceVideoCapture::DeviceInfo **) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetDeviceList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetDeviceList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetDeviceList" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::DeviceInfo **""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::DeviceInfo ** >(argp2);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetDeviceList(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_ReleaseDeviceList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::DeviceInfo *arg2 = (svlFilterSourceVideoCapture::DeviceInfo *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_ReleaseDeviceList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_ReleaseDeviceList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__DeviceInfo, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_ReleaseDeviceList" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::DeviceInfo *""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::DeviceInfo * >(argp2);
  ((svlFilterSourceVideoCapture const *)arg1)->ReleaseDeviceList(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintDeviceList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; bool arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_PrintDeviceList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_PrintDeviceList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_PrintDeviceList" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); result = (int)(arg1)->PrintDeviceList(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintDeviceList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_PrintDeviceList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_PrintDeviceList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->PrintDeviceList();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintDeviceList(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_PrintDeviceList__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoCapture_PrintDeviceList__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_PrintDeviceList'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::PrintDeviceList(bool)\n"
  "    svlFilterSourceVideoCapture::PrintDeviceList()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintInputList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int arg2 ; bool arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; bool val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_PrintInputList",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_PrintInputList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_PrintInputList" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_bool(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_PrintInputList" "', argument " "3"" of type '" "bool""'"); }
    arg3 = static_cast< bool >(val3); result = (int)(arg1)->PrintInputList(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintInputList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_PrintInputList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_PrintInputList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_PrintInputList" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (int)(arg1)->PrintInputList(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintInputList(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoCapture_PrintInputList__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_bool(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoCapture_PrintInputList__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_PrintInputList'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::PrintInputList(int,bool)\n"
  "    svlFilterSourceVideoCapture::PrintInputList(int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDevice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int arg2 ; int arg3 ;
  unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ;
  unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ;
  int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetDevice",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->SetDevice(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDevice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int arg2 ; int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetDevice",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->SetDevice(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDevice__SWIG_2(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetDevice",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SetDevice" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); result = (int)(arg1)->SetDevice(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDevice(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlFilterSourceVideoCapture_SetDevice__SWIG_2(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoCapture_SetDevice__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlFilterSourceVideoCapture_SetDevice__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_SetDevice'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::SetDevice(int,int,unsigned int)\n"
  "    svlFilterSourceVideoCapture::SetDevice(int,int)\n" "    svlFilterSourceVideoCapture::SetDevice(int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetDevice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int *arg2 = 0 ;
  int *arg3 = 0 ; unsigned int arg4 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ; unsigned int val4 ; int ecode4 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetDevice",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "3"" of type '" "int &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "3"" of type '" "int &""'"); }
   arg3 = reinterpret_cast< int * >(argp3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetDevice(*arg2,*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetDevice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; int *arg2 = 0 ;
  int *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetDevice",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_int,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "2"" of type '" "int &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "2"" of type '" "int &""'"); }
   arg2 = reinterpret_cast< int * >(argp2); res3 = SWIG_ConvertPtr(obj2, &argp3, SWIGTYPE_p_int,  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "3"" of type '" "int &""'");  }
   if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetDevice" "', argument " "3"" of type '" "int &""'"); }
   arg3 = reinterpret_cast< int * >(argp3); result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetDevice(*arg2,*arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetDevice(PyObject *self, PyObject *args) { int argc; PyObject *argv[5];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetDevice__SWIG_1(self, args);}  }  }  } 
  if (argc == 4) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0);
      _v = SWIG_CheckState(res); if (_v) { void *vptr = 0; int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_int, 0);
        _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }
           if (_v) { return _wrap_svlFilterSourceVideoCapture_GetDevice__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetDevice'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::GetDevice(int &,int &,unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetDevice(int &,int &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetFormatList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat **arg2 = (svlFilterSourceVideoCapture::ImageFormat **) 0 ; unsigned int arg3 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetFormatList",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetFormatList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetFormatList" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat **""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat ** >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_GetFormatList" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetFormatList(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetFormatList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat **arg2 = (svlFilterSourceVideoCapture::ImageFormat **) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetFormatList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetFormatList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetFormatList" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat **""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat ** >(argp2);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetFormatList(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetFormatList(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetFormatList__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_GetFormatList__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetFormatList'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::GetFormatList(svlFilterSourceVideoCapture::ImageFormat **,unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetFormatList(svlFilterSourceVideoCapture::ImageFormat **) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_ReleaseFormatList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = (svlFilterSourceVideoCapture::ImageFormat *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_ReleaseFormatList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_ReleaseFormatList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_ReleaseFormatList" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat *""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  ((svlFilterSourceVideoCapture const *)arg1)->ReleaseFormatList(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintFormatList__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_PrintFormatList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_PrintFormatList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_PrintFormatList" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->PrintFormatList(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintFormatList__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_PrintFormatList",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_PrintFormatList" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->PrintFormatList();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_PrintFormatList(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_PrintFormatList__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_PrintFormatList__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_PrintFormatList'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::PrintFormatList(unsigned int)\n"
  "    svlFilterSourceVideoCapture::PrintFormatList()\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SelectFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SelectFormat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SelectFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SelectFormat" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_SelectFormat" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SelectFormat(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SelectFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SelectFormat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SelectFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SelectFormat" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SelectFormat(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SelectFormat(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_SelectFormat__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlFilterSourceVideoCapture_SelectFormat__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_SelectFormat'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::SelectFormat(unsigned int,unsigned int)\n"
  "    svlFilterSourceVideoCapture::SelectFormat(unsigned int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetFormat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat const &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)(arg1)->SetFormat((svlFilterSourceVideoCapture::ImageFormat const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetFormat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat const &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  result = (int)(arg1)->SetFormat((svlFilterSourceVideoCapture::ImageFormat const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetFormat(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_SetFormat__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_SetFormat__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_SetFormat'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::SetFormat(svlFilterSourceVideoCapture::ImageFormat const &,unsigned int)\n"
  "    svlFilterSourceVideoCapture::SetFormat(svlFilterSourceVideoCapture::ImageFormat const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetFormat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetFormat(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetFormat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetFormat(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetFormat(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetFormat__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_GetFormat__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetFormat'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::GetFormat(svlFilterSourceVideoCapture::ImageFormat &,unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetFormat(svlFilterSourceVideoCapture::ImageFormat &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetTrigger__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetTrigger",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger const &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)(arg1)->SetTrigger((svlFilterSourceVideoCapture::ExternalTrigger const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetTrigger__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetTrigger",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger const &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2);
  result = (int)(arg1)->SetTrigger((svlFilterSourceVideoCapture::ExternalTrigger const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetTrigger(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_SetTrigger__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_SetTrigger__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_SetTrigger'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::SetTrigger(svlFilterSourceVideoCapture::ExternalTrigger const &,unsigned int)\n"
  "    svlFilterSourceVideoCapture::SetTrigger(svlFilterSourceVideoCapture::ExternalTrigger const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetTrigger__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetTrigger",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetTrigger(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetTrigger__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetTrigger",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetTrigger(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetTrigger(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetTrigger__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_GetTrigger__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetTrigger'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::GetTrigger(svlFilterSourceVideoCapture::ExternalTrigger &,unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetTrigger(svlFilterSourceVideoCapture::ExternalTrigger &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetImageProperties__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetImageProperties",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties const &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)(arg1)->SetImageProperties((svlFilterSourceVideoCapture::ImageProperties const &)*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetImageProperties__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetImageProperties",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties const &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties const &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  result = (int)(arg1)->SetImageProperties((svlFilterSourceVideoCapture::ImageProperties const &)*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetImageProperties(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_SetImageProperties__SWIG_1(self, args);}  }
     }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0); _v = SWIG_CheckState(res); if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_SetImageProperties__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_SetImageProperties'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::SetImageProperties(svlFilterSourceVideoCapture::ImageProperties const &,unsigned int)\n"
  "    svlFilterSourceVideoCapture::SetImageProperties(svlFilterSourceVideoCapture::ImageProperties const &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetImageProperties__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetImageProperties",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetImageProperties(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetImageProperties__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetImageProperties",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  result = (int)((svlFilterSourceVideoCapture const *)arg1)->GetImageProperties(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetImageProperties(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[4]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetImageProperties__SWIG_1(self, args);}  }
     }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0); _v = SWIG_CheckState(res); if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlFilterSourceVideoCapture_GetImageProperties__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetImageProperties'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlFilterSourceVideoCapture::GetImageProperties(svlFilterSourceVideoCapture::ImageProperties &,unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetImageProperties(svlFilterSourceVideoCapture::ImageProperties &) const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetPixelTypeName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture::PixelType arg1 ; void *argp1 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::string result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetPixelTypeName",1,1,&obj0)) SWIG_fail; {
    res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__PixelType,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetPixelTypeName" "', argument " "1"" of type '" "svlFilterSourceVideoCapture::PixelType""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetPixelTypeName" "', argument " "1"" of type '" "svlFilterSourceVideoCapture::PixelType""'"); }
     else { svlFilterSourceVideoCapture::PixelType * temp = reinterpret_cast< svlFilterSourceVideoCapture::PixelType * >(argp1);
      arg1 = *temp; if (SWIG_IsNewObj(res1)) delete temp; }  }  result = svlFilterSourceVideoCapture::GetPixelTypeName(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetPatternTypeName(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture::PatternType arg1 ; void *argp1 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  std::string result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetPatternTypeName",1,1,&obj0)) SWIG_fail;
  { res1 = SWIG_ConvertPtr(obj0, &argp1, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__PatternType,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetPatternTypeName" "', argument " "1"" of type '" "svlFilterSourceVideoCapture::PatternType""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterSourceVideoCapture_GetPatternTypeName" "', argument " "1"" of type '" "svlFilterSourceVideoCapture::PatternType""'"); }
     else {
      svlFilterSourceVideoCapture::PatternType * temp = reinterpret_cast< svlFilterSourceVideoCapture::PatternType * >(argp1);
      arg1 = *temp; if (SWIG_IsNewObj(res1)) delete temp; }  }  result = svlFilterSourceVideoCapture::GetPatternTypeName(arg1);
  resultobj = SWIG_From_std_string(static_cast< std::string >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetWidth",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetWidth" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_GetWidth" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((svlFilterSourceVideoCapture const *)arg1)->GetWidth(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetWidth",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetWidth" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  result = (unsigned int)((svlFilterSourceVideoCapture const *)arg1)->GetWidth();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetWidth(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetWidth__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_GetWidth__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetWidth'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::GetWidth(unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetWidth() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  unsigned int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetHeight",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetHeight" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_GetHeight" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  result = (unsigned int)((svlFilterSourceVideoCapture const *)arg1)->GetHeight(arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; unsigned int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_GetHeight",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_GetHeight" "', argument " "1"" of type '" "svlFilterSourceVideoCapture const *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1);
  result = (unsigned int)((svlFilterSourceVideoCapture const *)arg1)->GetHeight();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_GetHeight(PyObject *self, PyObject *args) { int argc; PyObject *argv[3];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_GetHeight__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_GetHeight__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_GetHeight'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::GetHeight(unsigned int) const\n"
  "    svlFilterSourceVideoCapture::GetHeight() const\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SaveSettings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; char *arg2 = (char *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SaveSettings",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SaveSettings" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_SaveSettings" "', argument " "2"" of type '" "char const *""'"); }
   arg2 = reinterpret_cast< char * >(buf2); result = (int)(arg1)->SaveSettings((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_LoadSettings(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; char *arg2 = (char *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_LoadSettings",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_LoadSettings" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); res2 = SWIG_AsCharPtrAndSize(obj1, &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterSourceVideoCapture_LoadSettings" "', argument " "2"" of type '" "char const *""'"); }
   arg2 = reinterpret_cast< char * >(buf2); result = (int)(arg1)->LoadSettings((char const *)arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return resultobj; fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDefaultSettings__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; unsigned int arg2 ;
  void *argp1 = 0 ; int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetDefaultSettings",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetDefaultSettings" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterSourceVideoCapture_SetDefaultSettings" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SetDefaultSettings(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDefaultSettings__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterSourceVideoCapture *arg1 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterSourceVideoCapture_SetDefaultSettings",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterSourceVideoCapture_SetDefaultSettings" "', argument " "1"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg1 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp1); result = (int)(arg1)->SetDefaultSettings();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterSourceVideoCapture_SetDefaultSettings(PyObject *self, PyObject *args) { int argc;
  PyObject *argv[3]; int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { return _wrap_svlFilterSourceVideoCapture_SetDefaultSettings__SWIG_1(self, args);}  } 
  if (argc == 2) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlFilterSourceVideoCapture, 0);
    _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); } 
      if (_v) { return _wrap_svlFilterSourceVideoCapture_SetDefaultSettings__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlFilterSourceVideoCapture_SetDefaultSettings'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlFilterSourceVideoCapture::SetDefaultSettings(unsigned int)\n"
  "    svlFilterSourceVideoCapture::SetDefaultSettings()\n"); return 0; }
SWIGINTERN PyObject *svlFilterSourceVideoCapture_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterSourceVideoCapture, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ;
  result = (cmnClassServicesBase *)svlVidCapSrcBase::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlVidCapSrcBase(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlVidCapSrcBase",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlVidCapSrcBase" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetPlatformType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlFilterSourceVideoCapture::PlatformType result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetPlatformType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetPlatformType" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (arg1)->GetPlatformType();
  resultobj = SWIG_NewPointerObj((new svlFilterSourceVideoCapture::PlatformType(static_cast< const svlFilterSourceVideoCapture::PlatformType& >(result))), SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__PlatformType, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetStreamCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; unsigned int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetStreamCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetStreamCount" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_SetStreamCount" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SetStreamCount(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetDeviceList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::DeviceInfo **arg2 = (svlFilterSourceVideoCapture::DeviceInfo **) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetDeviceList",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetDeviceList" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetDeviceList" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::DeviceInfo **""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::DeviceInfo ** >(argp2); result = (int)(arg1)->GetDeviceList(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_Open(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_Open",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_Open" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (int)(arg1)->Open();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_Close(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_Close",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_Close" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); (arg1)->Close(); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_Start(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_Start",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_Start" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (int)(arg1)->Start();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetLatestFrame__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; bool arg2 ; unsigned int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; bool val2 ; int ecode2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; svlImageRGB *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetLatestFrame",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetLatestFrame" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_GetLatestFrame" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_GetLatestFrame" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (svlImageRGB *)(arg1)->GetLatestFrame(arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageRGB, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetLatestFrame__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  bool val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; svlImageRGB *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetLatestFrame",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetLatestFrame" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_GetLatestFrame" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); result = (svlImageRGB *)(arg1)->GetLatestFrame(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlImageRGB, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetLatestFrame(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlVidCapSrcBase_GetLatestFrame__SWIG_1(self, args);}  }  }  if (argc == 3) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_bool(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlVidCapSrcBase_GetLatestFrame__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_GetLatestFrame'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlVidCapSrcBase::GetLatestFrame(bool,unsigned int)\n"
  "    svlVidCapSrcBase::GetLatestFrame(bool)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_Stop(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_Stop",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_Stop" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (int)(arg1)->Stop();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_IsRunning(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_IsRunning",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_IsRunning" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (bool)(arg1)->IsRunning();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetDevice__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; int arg2 ; int arg3 ; unsigned int arg4 ;
  void *argp1 = 0 ; int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; unsigned int val4 ; int ecode4 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; PyObject * obj3 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetDevice",4,4,&obj0,&obj1,&obj2,&obj3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); ecode4 = SWIG_AsVal_unsigned_SS_int(obj3, &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "4"" of type '" "unsigned int""'"); }
    arg4 = static_cast< unsigned int >(val4); result = (int)(arg1)->SetDevice(arg2,arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetDevice__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; int arg2 ; int arg3 ; void *argp1 = 0 ;
  int res1 = 0 ; int val2 ; int ecode2 = 0 ; int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetDevice",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_int(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "2"" of type '" "int""'"); }
    arg2 = static_cast< int >(val2); ecode3 = SWIG_AsVal_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_SetDevice" "', argument " "3"" of type '" "int""'"); }
    arg3 = static_cast< int >(val3); result = (int)(arg1)->SetDevice(arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetDevice(PyObject *self, PyObject *args) { int argc; PyObject *argv[5]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 4) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 3) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { { int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) {
          return _wrap_svlVidCapSrcBase_SetDevice__SWIG_1(self, args);}  }  }  }  if (argc == 4) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
          int res = SWIG_AsVal_int(argv[2], NULL); _v = SWIG_CheckState(res); }  if (_v) { {
            int res = SWIG_AsVal_unsigned_SS_int(argv[3], NULL); _v = SWIG_CheckState(res); }  if (_v) {
            return _wrap_svlVidCapSrcBase_SetDevice__SWIG_0(self, args);}  }  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_SetDevice'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlVidCapSrcBase::SetDevice(int,int,unsigned int)\n"
  "    svlVidCapSrcBase::SetDevice(int,int)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetWidth__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; unsigned int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetWidth",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetWidth" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_GetWidth" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->GetWidth(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetWidth__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetWidth",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetWidth" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (int)(arg1)->GetWidth();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetWidth(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlVidCapSrcBase_GetWidth__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlVidCapSrcBase_GetWidth__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_GetWidth'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlVidCapSrcBase::GetWidth(unsigned int)\n" "    svlVidCapSrcBase::GetWidth()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetHeight__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; unsigned int arg2 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetHeight",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetHeight" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_GetHeight" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->GetHeight(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetHeight__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetHeight",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetHeight" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); result = (int)(arg1)->GetHeight();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetHeight(PyObject *self, PyObject *args) { int argc; PyObject *argv[3]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 2) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 1) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { return _wrap_svlVidCapSrcBase_GetHeight__SWIG_1(self, args);}  }  if (argc == 2) { int _v; void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res); if (_v) { {
        int res = SWIG_AsVal_unsigned_SS_int(argv[1], NULL); _v = SWIG_CheckState(res); }  if (_v) {
        return _wrap_svlVidCapSrcBase_GetHeight__SWIG_0(self, args);}  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_GetHeight'.\n"
  "  Possible C/C++ prototypes are:\n" "    svlVidCapSrcBase::GetHeight(unsigned int)\n" "    svlVidCapSrcBase::GetHeight()\n");
  return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetFormatList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ; unsigned int arg2 ;
  svlFilterSourceVideoCapture::ImageFormat **arg3 = (svlFilterSourceVideoCapture::ImageFormat **) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; unsigned int val2 ; int ecode2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; PyObject * obj0 = 0 ;
  PyObject * obj1 = 0 ; PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetFormatList",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetFormatList" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlVidCapSrcBase_GetFormatList" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2);
  res3 = SWIG_ConvertPtr(obj2, &argp3,SWIGTYPE_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "svlVidCapSrcBase_GetFormatList" "', argument " "3"" of type '" "svlFilterSourceVideoCapture::ImageFormat **""'");  }
   arg3 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat ** >(argp3);
  result = (int)(arg1)->GetFormatList(arg2,arg3); resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetFormat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetFormat(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetFormat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_SetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2); result = (int)(arg1)->SetFormat(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetFormat(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlVidCapSrcBase_SetFormat__SWIG_1(self, args);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlVidCapSrcBase_SetFormat__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_SetFormat'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVidCapSrcBase::SetFormat(svlFilterSourceVideoCapture::ImageFormat &,unsigned int)\n"
  "    svlVidCapSrcBase::SetFormat(svlFilterSourceVideoCapture::ImageFormat &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetFormat__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  int result; if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetFormat",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->GetFormat(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetFormat__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageFormat *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetFormat",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat,  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_GetFormat" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageFormat &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageFormat * >(argp2); result = (int)(arg1)->GetFormat(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetFormat(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlVidCapSrcBase_GetFormat__SWIG_1(self, args);}  }  }  if (argc == 3) {
    int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlVidCapSrcBase_GetFormat__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_GetFormat'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVidCapSrcBase::GetFormat(svlFilterSourceVideoCapture::ImageFormat &,unsigned int)\n"
  "    svlVidCapSrcBase::GetFormat(svlFilterSourceVideoCapture::ImageFormat &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetImageProperties__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetImageProperties",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetImageProperties(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetImageProperties__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetImageProperties",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_SetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  result = (int)(arg1)->SetImageProperties(*arg2); resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetImageProperties(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlVidCapSrcBase_SetImageProperties__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlVidCapSrcBase_SetImageProperties__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_SetImageProperties'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVidCapSrcBase::SetImageProperties(svlFilterSourceVideoCapture::ImageProperties &,unsigned int)\n"
  "    svlVidCapSrcBase::SetImageProperties(svlFilterSourceVideoCapture::ImageProperties &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetImageProperties__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetImageProperties",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->GetImageProperties(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetImageProperties__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ImageProperties *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetImageProperties",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_GetImageProperties" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ImageProperties &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ImageProperties * >(argp2);
  result = (int)(arg1)->GetImageProperties(*arg2); resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetImageProperties(PyObject *self, PyObject *args) { int argc; PyObject *argv[4];
  int ii; if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlVidCapSrcBase_GetImageProperties__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlVidCapSrcBase_GetImageProperties__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_GetImageProperties'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVidCapSrcBase::GetImageProperties(svlFilterSourceVideoCapture::ImageProperties &,unsigned int)\n"
  "    svlVidCapSrcBase::GetImageProperties(svlFilterSourceVideoCapture::ImageProperties &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetTrigger__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetTrigger",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->SetTrigger(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetTrigger__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_SetTrigger",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_SetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2); result = (int)(arg1)->SetTrigger(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_SetTrigger(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlVidCapSrcBase_SetTrigger__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlVidCapSrcBase_SetTrigger__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_SetTrigger'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVidCapSrcBase::SetTrigger(svlFilterSourceVideoCapture::ExternalTrigger &,unsigned int)\n"
  "    svlVidCapSrcBase::SetTrigger(svlFilterSourceVideoCapture::ExternalTrigger &)\n"); return 0; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetTrigger__SWIG_0(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; unsigned int arg3 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; unsigned int val3 ; int ecode3 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  PyObject * obj2 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetTrigger",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2);
  ecode3 = SWIG_AsVal_unsigned_SS_int(obj2, &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "3"" of type '" "unsigned int""'"); }
    arg3 = static_cast< unsigned int >(val3); result = (int)(arg1)->GetTrigger(*arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetTrigger__SWIG_1(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcBase *arg1 = (svlVidCapSrcBase *) 0 ;
  svlFilterSourceVideoCapture::ExternalTrigger *arg2 = 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcBase_GetTrigger",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "1"" of type '" "svlVidCapSrcBase *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcBase * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'");  }
   if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlVidCapSrcBase_GetTrigger" "', argument " "2"" of type '" "svlFilterSourceVideoCapture::ExternalTrigger &""'"); }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture::ExternalTrigger * >(argp2); result = (int)(arg1)->GetTrigger(*arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcBase_GetTrigger(PyObject *self, PyObject *args) { int argc; PyObject *argv[4]; int ii;
  if (!PyTuple_Check(args)) SWIG_fail; argc = args ? (int)PyObject_Length(args) : 0;
  for (ii = 0; (ii < 3) && (ii < argc); ii++) { argv[ii] = PyTuple_GET_ITEM(args,ii); }  if (argc == 2) { int _v;
    void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0); _v = SWIG_CheckState(res);
    if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { return _wrap_svlVidCapSrcBase_GetTrigger__SWIG_1(self, args);}  }  } 
  if (argc == 3) { int _v; void *vptr = 0; int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_svlVidCapSrcBase, 0);
    _v = SWIG_CheckState(res); if (_v) { void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0);
      _v = SWIG_CheckState(res); if (_v) { { int res = SWIG_AsVal_unsigned_SS_int(argv[2], NULL); _v = SWIG_CheckState(res); } 
        if (_v) { return _wrap_svlVidCapSrcBase_GetTrigger__SWIG_0(self, args);}  }  }  }  fail:
  SWIG_SetErrorMsg(PyExc_NotImplementedError,"Wrong number or type of arguments for overloaded function 'svlVidCapSrcBase_GetTrigger'.\n"
  "  Possible C/C++ prototypes are:\n"
  "    svlVidCapSrcBase::GetTrigger(svlFilterSourceVideoCapture::ExternalTrigger &,unsigned int)\n"
  "    svlVidCapSrcBase::GetTrigger(svlFilterSourceVideoCapture::ExternalTrigger &)\n"); return 0; }
SWIGINTERN PyObject *svlVidCapSrcBase_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlVidCapSrcBase, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_svlVidCapSrcDialogThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; unsigned int arg1 ; unsigned int val1 ; int ecode1 = 0 ; PyObject * obj0 = 0 ;
  svlVidCapSrcDialogThread *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"new_svlVidCapSrcDialogThread",1,1,&obj0)) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int(obj0, &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_svlVidCapSrcDialogThread" "', argument " "1"" of type '" "unsigned int""'"); }
    arg1 = static_cast< unsigned int >(val1); result = (svlVidCapSrcDialogThread *)new svlVidCapSrcDialogThread(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlVidCapSrcDialogThread, SWIG_POINTER_NEW |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlVidCapSrcDialogThread(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcDialogThread *arg1 = (svlVidCapSrcDialogThread *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"delete_svlVidCapSrcDialogThread",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcDialogThread, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlVidCapSrcDialogThread" "', argument " "1"" of type '" "svlVidCapSrcDialogThread *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcDialogThread * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcDialogThread_Proc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcDialogThread *arg1 = (svlVidCapSrcDialogThread *) 0 ;
  svlFilterSourceVideoCapture *arg2 = (svlFilterSourceVideoCapture *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; void *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcDialogThread_Proc",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcDialogThread, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcDialogThread_Proc" "', argument " "1"" of type '" "svlVidCapSrcDialogThread *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcDialogThread * >(argp1);
  res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlFilterSourceVideoCapture, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlVidCapSrcDialogThread_Proc" "', argument " "2"" of type '" "svlFilterSourceVideoCapture *""'");  }
   arg2 = reinterpret_cast< svlFilterSourceVideoCapture * >(argp2); result = (void *)(arg1)->Proc(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 ); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcDialogThread_WaitForInit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcDialogThread *arg1 = (svlVidCapSrcDialogThread *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcDialogThread_WaitForInit",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcDialogThread, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcDialogThread_WaitForInit" "', argument " "1"" of type '" "svlVidCapSrcDialogThread *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcDialogThread * >(argp1); result = (bool)(arg1)->WaitForInit();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlVidCapSrcDialogThread_Kill(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlVidCapSrcDialogThread *arg1 = (svlVidCapSrcDialogThread *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlVidCapSrcDialogThread_Kill",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlVidCapSrcDialogThread, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlVidCapSrcDialogThread_Kill" "', argument " "1"" of type '" "svlVidCapSrcDialogThread *""'");  }
   arg1 = reinterpret_cast< svlVidCapSrcDialogThread * >(argp1); (arg1)->Kill(); resultobj = SWIG_Py_Void(); return resultobj;
  fail: return NULL; }
SWIGINTERN PyObject *svlVidCapSrcDialogThread_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlVidCapSrcDialogThread, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_svlFilterOutput_ClassServices(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; cmnClassServicesBase *result = 0 ; result = (cmnClassServicesBase *)svlFilterOutput::ClassServices();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_Services(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  cmnClassServicesBase *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_Services",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_Services" "', argument " "1"" of type '" "svlFilterOutput const *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1);
  result = (cmnClassServicesBase *)((svlFilterOutput const *)arg1)->Services();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_cmnClassServicesBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_new_svlFilterOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterBase *arg1 = (svlFilterBase *) 0 ; bool arg2 ; std::string *arg3 = 0 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ;
  int ecode2 = 0 ; int res3 = SWIG_OLDOBJ ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; PyObject * obj2 = 0 ;
  svlFilterOutput *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"new_svlFilterOutput",3,3,&obj0,&obj1,&obj2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterBase, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_svlFilterOutput" "', argument " "1"" of type '" "svlFilterBase *""'");  }
   arg1 = reinterpret_cast< svlFilterBase * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_svlFilterOutput" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); { std::string *ptr = (std::string *)0; res3 = SWIG_AsPtr_std_string(obj2, &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_svlFilterOutput" "', argument " "3"" of type '" "std::string const &""'"); }
     if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_svlFilterOutput" "', argument " "3"" of type '" "std::string const &""'"); }
     arg3 = ptr; }  result = (svlFilterOutput *)new svlFilterOutput(arg1,arg2,(std::string const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterOutput, SWIG_POINTER_NEW |  0 );
  if (SWIG_IsNewObj(res3)) delete arg3; return resultobj; fail: if (SWIG_IsNewObj(res3)) delete arg3; return NULL; }
SWIGINTERN PyObject *_wrap_delete_svlFilterOutput(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"delete_svlFilterOutput",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, SWIG_POINTER_DISOWN |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_svlFilterOutput" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); delete arg1; resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_IsTrunk(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; bool result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_IsTrunk",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_IsTrunk" "', argument " "1"" of type '" "svlFilterOutput const *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (bool)((svlFilterOutput const *)arg1)->IsTrunk();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; svlStreamType result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetType",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetType" "', argument " "1"" of type '" "svlFilterOutput const *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = ((svlFilterOutput const *)arg1)->GetType();
  resultobj = SWIG_NewPointerObj((new svlStreamType(static_cast< const svlStreamType& >(result))), SWIGTYPE_p_svlStreamType, SWIG_POINTER_OWN |  0 );
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetFilter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ;
  svlFilterBase *result = 0 ; if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetFilter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetFilter" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (svlFilterBase *)(arg1)->GetFilter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetConnectedFilter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlFilterBase *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetConnectedFilter",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetConnectedFilter" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (svlFilterBase *)(arg1)->GetConnectedFilter();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterBase, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_SetType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; svlStreamType arg2 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_SetType",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_SetType" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); {
    res2 = SWIG_ConvertPtr(obj1, &argp2, SWIGTYPE_p_svlStreamType,  0  | 0); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterOutput_SetType" "', argument " "2"" of type '" "svlStreamType""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "svlFilterOutput_SetType" "', argument " "2"" of type '" "svlStreamType""'"); }
     else { svlStreamType * temp = reinterpret_cast< svlStreamType * >(argp2); arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp; }  }  result = (int)(arg1)->SetType(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_IsConnected(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; bool result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_IsConnected",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_IsConnected" "', argument " "1"" of type '" "svlFilterOutput const *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (bool)((svlFilterOutput const *)arg1)->IsConnected();
  resultobj = SWIG_From_bool(static_cast< bool >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetConnection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; svlFilterInput *result = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetConnection",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetConnection" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (svlFilterInput *)(arg1)->GetConnection();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_svlFilterInput, 0 |  0 ); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetDroppedSampleCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetDroppedSampleCount",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetDroppedSampleCount" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (int)(arg1)->GetDroppedSampleCount();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetBufferUsage(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; int result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetBufferUsage",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetBufferUsage" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (int)(arg1)->GetBufferUsage();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetBufferUsageRatio(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetBufferUsageRatio",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetBufferUsageRatio" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (double)(arg1)->GetBufferUsageRatio();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_SetThreadCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_SetThreadCount",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_SetThreadCount" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterOutput_SetThreadCount" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SetThreadCount(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_SetBufferSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; unsigned int arg2 ; void *argp1 = 0 ; int res1 = 0 ;
  unsigned int val2 ; int ecode2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_SetBufferSize",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_SetBufferSize" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); ecode2 = SWIG_AsVal_unsigned_SS_int(obj1, &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterOutput_SetBufferSize" "', argument " "2"" of type '" "unsigned int""'"); }
    arg2 = static_cast< unsigned int >(val2); result = (int)(arg1)->SetBufferSize(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_SetBlock(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; bool arg2 ; void *argp1 = 0 ; int res1 = 0 ; bool val2 ; int ecode2 = 0 ;
  PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_SetBlock",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_SetBlock" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); ecode2 = SWIG_AsVal_bool(obj1, &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "svlFilterOutput_SetBlock" "', argument " "2"" of type '" "bool""'"); }
    arg2 = static_cast< bool >(val2); result = (int)(arg1)->SetBlock(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_ConnectInternal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; svlFilterInput *arg2 = (svlFilterInput *) 0 ;
  void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_ConnectInternal",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_ConnectInternal" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlFilterInput, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterOutput_ConnectInternal" "', argument " "2"" of type '" "svlFilterInput *""'");  }
   arg2 = reinterpret_cast< svlFilterInput * >(argp2); result = (int)(arg1)->ConnectInternal(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_Connect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; svlFilterInput *arg2 = (svlFilterInput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_Connect",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_Connect" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlFilterInput, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterOutput_Connect" "', argument " "2"" of type '" "svlFilterInput *""'");  }
   arg2 = reinterpret_cast< svlFilterInput * >(argp2); result = (int)(arg1)->Connect(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_Disconnect(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ; PyObject * obj0 = 0 ; int result;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_Disconnect",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_Disconnect" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (int)(arg1)->Disconnect();
  resultobj = SWIG_From_int(static_cast< int >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_SetupSample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ;
  int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_SetupSample",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_SetupSample" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterOutput_SetupSample" "', argument " "2"" of type '" "svlSample *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); (arg1)->SetupSample(arg2); resultobj = SWIG_Py_Void(); return resultobj; fail:
  return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_PushSample(PyObject *SWIGUNUSEDPARM(self), PyObject *args) { PyObject *resultobj = 0;
  svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; svlSample *arg2 = (svlSample *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; PyObject * obj0 = 0 ; PyObject * obj1 = 0 ;
  if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_PushSample",2,2,&obj0,&obj1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_PushSample" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); res2 = SWIG_ConvertPtr(obj1, &argp2,SWIGTYPE_p_svlSample, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "svlFilterOutput_PushSample" "', argument " "2"" of type '" "svlSample const *""'");  }
   arg2 = reinterpret_cast< svlSample * >(argp2); (arg1)->PushSample((svlSample const *)arg2); resultobj = SWIG_Py_Void();
  return resultobj; fail: return NULL; }
SWIGINTERN PyObject *_wrap_svlFilterOutput_GetTimestamp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0; svlFilterOutput *arg1 = (svlFilterOutput *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  PyObject * obj0 = 0 ; double result; if(!PyArg_UnpackTuple(args,(char *)"svlFilterOutput_GetTimestamp",1,1,&obj0)) SWIG_fail;
  res1 = SWIG_ConvertPtr(obj0, &argp1,SWIGTYPE_p_svlFilterOutput, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "svlFilterOutput_GetTimestamp" "', argument " "1"" of type '" "svlFilterOutput *""'");  }
   arg1 = reinterpret_cast< svlFilterOutput * >(argp1); result = (double)(arg1)->GetTimestamp();
  resultobj = SWIG_From_double(static_cast< double >(result)); return resultobj; fail: return NULL; }
SWIGINTERN PyObject *svlFilterOutput_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!PyArg_UnpackTuple(args,(char*)"swigregister", 1, 1,&obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_svlFilterOutput, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

static PyMethodDef SwigMethods[] = {
	 { (char *)"SWIG_PyInstanceMethod_New", (PyCFunction)SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { (char *)"delete_SwigPyIterator", _wrap_delete_SwigPyIterator, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_value", _wrap_SwigPyIterator_value, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_incr", _wrap_SwigPyIterator_incr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_decr", _wrap_SwigPyIterator_decr, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_distance", _wrap_SwigPyIterator_distance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_equal", _wrap_SwigPyIterator_equal, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_copy", _wrap_SwigPyIterator_copy, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_next", _wrap_SwigPyIterator_next, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___next__", _wrap_SwigPyIterator___next__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_previous", _wrap_SwigPyIterator_previous, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_advance", _wrap_SwigPyIterator_advance, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___eq__", _wrap_SwigPyIterator___eq__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___ne__", _wrap_SwigPyIterator___ne__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___iadd__", _wrap_SwigPyIterator___iadd__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___isub__", _wrap_SwigPyIterator___isub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___add__", _wrap_SwigPyIterator___add__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator___sub__", _wrap_SwigPyIterator___sub__, METH_VARARGS, NULL},
	 { (char *)"SwigPyIterator_swigregister", SwigPyIterator_swigregister, METH_VARARGS, NULL},
	 { (char *)"ios_base_register_callback", _wrap_ios_base_register_callback, METH_VARARGS, NULL},
	 { (char *)"ios_base_flags", _wrap_ios_base_flags, METH_VARARGS, NULL},
	 { (char *)"ios_base_setf", _wrap_ios_base_setf, METH_VARARGS, NULL},
	 { (char *)"ios_base_unsetf", _wrap_ios_base_unsetf, METH_VARARGS, NULL},
	 { (char *)"ios_base_precision", _wrap_ios_base_precision, METH_VARARGS, NULL},
	 { (char *)"ios_base_width", _wrap_ios_base_width, METH_VARARGS, NULL},
	 { (char *)"ios_base_sync_with_stdio", _wrap_ios_base_sync_with_stdio, METH_VARARGS, NULL},
	 { (char *)"ios_base_imbue", _wrap_ios_base_imbue, METH_VARARGS, NULL},
	 { (char *)"ios_base_getloc", _wrap_ios_base_getloc, METH_VARARGS, NULL},
	 { (char *)"ios_base_xalloc", _wrap_ios_base_xalloc, METH_VARARGS, NULL},
	 { (char *)"ios_base_iword", _wrap_ios_base_iword, METH_VARARGS, NULL},
	 { (char *)"ios_base_pword", _wrap_ios_base_pword, METH_VARARGS, NULL},
	 { (char *)"delete_ios_base", _wrap_delete_ios_base, METH_VARARGS, NULL},
	 { (char *)"ios_base_swigregister", ios_base_swigregister, METH_VARARGS, NULL},
	 { (char *)"ios_rdstate", _wrap_ios_rdstate, METH_VARARGS, NULL},
	 { (char *)"ios_clear", _wrap_ios_clear, METH_VARARGS, NULL},
	 { (char *)"ios_setstate", _wrap_ios_setstate, METH_VARARGS, NULL},
	 { (char *)"ios_good", _wrap_ios_good, METH_VARARGS, NULL},
	 { (char *)"ios_eof", _wrap_ios_eof, METH_VARARGS, NULL},
	 { (char *)"ios_fail", _wrap_ios_fail, METH_VARARGS, NULL},
	 { (char *)"ios_bad", _wrap_ios_bad, METH_VARARGS, NULL},
	 { (char *)"ios_exceptions", _wrap_ios_exceptions, METH_VARARGS, NULL},
	 { (char *)"new_ios", _wrap_new_ios, METH_VARARGS, NULL},
	 { (char *)"delete_ios", _wrap_delete_ios, METH_VARARGS, NULL},
	 { (char *)"ios_tie", _wrap_ios_tie, METH_VARARGS, NULL},
	 { (char *)"ios_rdbuf", _wrap_ios_rdbuf, METH_VARARGS, NULL},
	 { (char *)"ios_copyfmt", _wrap_ios_copyfmt, METH_VARARGS, NULL},
	 { (char *)"ios_fill", _wrap_ios_fill, METH_VARARGS, NULL},
	 { (char *)"ios_imbue", _wrap_ios_imbue, METH_VARARGS, NULL},
	 { (char *)"ios_narrow", _wrap_ios_narrow, METH_VARARGS, NULL},
	 { (char *)"ios_widen", _wrap_ios_widen, METH_VARARGS, NULL},
	 { (char *)"ios_swigregister", ios_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_streambuf", _wrap_delete_streambuf, METH_VARARGS, NULL},
	 { (char *)"streambuf_pubimbue", _wrap_streambuf_pubimbue, METH_VARARGS, NULL},
	 { (char *)"streambuf_getloc", _wrap_streambuf_getloc, METH_VARARGS, NULL},
	 { (char *)"streambuf_pubsetbuf", _wrap_streambuf_pubsetbuf, METH_VARARGS, NULL},
	 { (char *)"streambuf_pubseekoff", _wrap_streambuf_pubseekoff, METH_VARARGS, NULL},
	 { (char *)"streambuf_pubseekpos", _wrap_streambuf_pubseekpos, METH_VARARGS, NULL},
	 { (char *)"streambuf_pubsync", _wrap_streambuf_pubsync, METH_VARARGS, NULL},
	 { (char *)"streambuf_in_avail", _wrap_streambuf_in_avail, METH_VARARGS, NULL},
	 { (char *)"streambuf_snextc", _wrap_streambuf_snextc, METH_VARARGS, NULL},
	 { (char *)"streambuf_sbumpc", _wrap_streambuf_sbumpc, METH_VARARGS, NULL},
	 { (char *)"streambuf_sgetc", _wrap_streambuf_sgetc, METH_VARARGS, NULL},
	 { (char *)"streambuf_sgetn", _wrap_streambuf_sgetn, METH_VARARGS, NULL},
	 { (char *)"streambuf_sputbackc", _wrap_streambuf_sputbackc, METH_VARARGS, NULL},
	 { (char *)"streambuf_sungetc", _wrap_streambuf_sungetc, METH_VARARGS, NULL},
	 { (char *)"streambuf_sputc", _wrap_streambuf_sputc, METH_VARARGS, NULL},
	 { (char *)"streambuf_sputn", _wrap_streambuf_sputn, METH_VARARGS, NULL},
	 { (char *)"streambuf_swigregister", streambuf_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ostream", _wrap_new_ostream, METH_VARARGS, NULL},
	 { (char *)"delete_ostream", _wrap_delete_ostream, METH_VARARGS, NULL},
	 { (char *)"ostream___lshift__", _wrap_ostream___lshift__, METH_VARARGS, NULL},
	 { (char *)"ostream_put", _wrap_ostream_put, METH_VARARGS, NULL},
	 { (char *)"ostream_write", _wrap_ostream_write, METH_VARARGS, NULL},
	 { (char *)"ostream_flush", _wrap_ostream_flush, METH_VARARGS, NULL},
	 { (char *)"ostream_tellp", _wrap_ostream_tellp, METH_VARARGS, NULL},
	 { (char *)"ostream_seekp", _wrap_ostream_seekp, METH_VARARGS, NULL},
	 { (char *)"ostream_swigregister", ostream_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_istream", _wrap_new_istream, METH_VARARGS, NULL},
	 { (char *)"delete_istream", _wrap_delete_istream, METH_VARARGS, NULL},
	 { (char *)"istream___rshift__", _wrap_istream___rshift__, METH_VARARGS, NULL},
	 { (char *)"istream_gcount", _wrap_istream_gcount, METH_VARARGS, NULL},
	 { (char *)"istream_get", _wrap_istream_get, METH_VARARGS, NULL},
	 { (char *)"istream_getline", _wrap_istream_getline, METH_VARARGS, NULL},
	 { (char *)"istream_ignore", _wrap_istream_ignore, METH_VARARGS, NULL},
	 { (char *)"istream_peek", _wrap_istream_peek, METH_VARARGS, NULL},
	 { (char *)"istream_read", _wrap_istream_read, METH_VARARGS, NULL},
	 { (char *)"istream_readsome", _wrap_istream_readsome, METH_VARARGS, NULL},
	 { (char *)"istream_putback", _wrap_istream_putback, METH_VARARGS, NULL},
	 { (char *)"istream_unget", _wrap_istream_unget, METH_VARARGS, NULL},
	 { (char *)"istream_sync", _wrap_istream_sync, METH_VARARGS, NULL},
	 { (char *)"istream_tellg", _wrap_istream_tellg, METH_VARARGS, NULL},
	 { (char *)"istream_seekg", _wrap_istream_seekg, METH_VARARGS, NULL},
	 { (char *)"istream_swigregister", istream_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_iostream", _wrap_new_iostream, METH_VARARGS, NULL},
	 { (char *)"delete_iostream", _wrap_delete_iostream, METH_VARARGS, NULL},
	 { (char *)"iostream_swigregister", iostream_swigregister, METH_VARARGS, NULL},
	 { (char *)"endl", _wrap_endl, METH_VARARGS, (char *)"swig_ptr: endl_cb_ptr"},
	 { (char *)"ends", _wrap_ends, METH_VARARGS, (char *)"swig_ptr: ends_cb_ptr"},
	 { (char *)"flush", _wrap_flush, METH_VARARGS, (char *)"swig_ptr: flush_cb_ptr"},
	 { (char *)"svlInitialize", _wrap_svlInitialize, METH_VARARGS, (char *)"svlInitialize()"},
	 { (char *)"svlStreamManager_ClassServices", _wrap_svlStreamManager_ClassServices, METH_VARARGS, (char *)"svlStreamManager_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlStreamManager", _wrap_new_svlStreamManager, METH_VARARGS, (char *)"\n"
		"svlStreamManager()\n"
		"new_svlStreamManager(unsigned int threadcount) -> svlStreamManager\n"
		""},
	 { (char *)"delete_svlStreamManager", _wrap_delete_svlStreamManager, METH_VARARGS, (char *)"delete_svlStreamManager(svlStreamManager self)"},
	 { (char *)"svlStreamManager_SetSourceFilter", _wrap_svlStreamManager_SetSourceFilter, METH_VARARGS, (char *)"svlStreamManager_SetSourceFilter(svlStreamManager self, svlFilterSourceBase source) -> int"},
	 { (char *)"svlStreamManager_Initialize", _wrap_svlStreamManager_Initialize, METH_VARARGS, (char *)"svlStreamManager_Initialize(svlStreamManager self) -> int"},
	 { (char *)"svlStreamManager_Release", _wrap_svlStreamManager_Release, METH_VARARGS, (char *)"svlStreamManager_Release(svlStreamManager self)"},
	 { (char *)"svlStreamManager_IsInitialized", _wrap_svlStreamManager_IsInitialized, METH_VARARGS, (char *)"svlStreamManager_IsInitialized(svlStreamManager self) -> bool"},
	 { (char *)"svlStreamManager_Play", _wrap_svlStreamManager_Play, METH_VARARGS, (char *)"svlStreamManager_Play(svlStreamManager self) -> int"},
	 { (char *)"svlStreamManager_Stop", _wrap_svlStreamManager_Stop, METH_VARARGS, (char *)"svlStreamManager_Stop(svlStreamManager self)"},
	 { (char *)"svlStreamManager_IsRunning", _wrap_svlStreamManager_IsRunning, METH_VARARGS, (char *)"svlStreamManager_IsRunning(svlStreamManager self) -> bool"},
	 { (char *)"svlStreamManager_WaitForStop", _wrap_svlStreamManager_WaitForStop, METH_VARARGS, (char *)"\n"
		"WaitForStop(double timeout=-1.0) -> int\n"
		"svlStreamManager_WaitForStop(svlStreamManager self) -> int\n"
		""},
	 { (char *)"svlStreamManager_GetStreamStatus", _wrap_svlStreamManager_GetStreamStatus, METH_VARARGS, (char *)"svlStreamManager_GetStreamStatus(svlStreamManager self) -> int"},
	 { (char *)"svlStreamManager_DisconnectAll", _wrap_svlStreamManager_DisconnectAll, METH_VARARGS, (char *)"svlStreamManager_DisconnectAll(svlStreamManager self)"},
	 { (char *)"svlStreamManager_swigregister", svlStreamManager_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterBase_ClassServices", _wrap_svlFilterBase_ClassServices, METH_VARARGS, (char *)"svlFilterBase_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"delete_svlFilterBase", _wrap_delete_svlFilterBase, METH_VARARGS, (char *)"delete_svlFilterBase(svlFilterBase self)"},
	 { (char *)"svlFilterBase_IsInitialized", _wrap_svlFilterBase_IsInitialized, METH_VARARGS, (char *)"svlFilterBase_IsInitialized(svlFilterBase self) -> bool"},
	 { (char *)"svlFilterBase_IsRunning", _wrap_svlFilterBase_IsRunning, METH_VARARGS, (char *)"svlFilterBase_IsRunning(svlFilterBase self) -> bool"},
	 { (char *)"svlFilterBase_GetFrameCounter", _wrap_svlFilterBase_GetFrameCounter, METH_VARARGS, (char *)"svlFilterBase_GetFrameCounter(svlFilterBase self) -> unsigned int"},
	 { (char *)"svlFilterBase_GetInput", _wrap_svlFilterBase_GetInput, METH_VARARGS, (char *)"\n"
		"GetInput() -> svlFilterInput\n"
		"svlFilterBase_GetInput(svlFilterBase self, std::string const & inputname) -> svlFilterInput *\n"
		""},
	 { (char *)"svlFilterBase_GetOutput", _wrap_svlFilterBase_GetOutput, METH_VARARGS, (char *)"\n"
		"GetOutput() -> svlFilterOutput\n"
		"svlFilterBase_GetOutput(svlFilterBase self, std::string const & outputname) -> svlFilterOutput\n"
		""},
	 { (char *)"svlFilterBase_SetEnable", _wrap_svlFilterBase_SetEnable, METH_VARARGS, (char *)"svlFilterBase_SetEnable(svlFilterBase self, bool const & enable)"},
	 { (char *)"svlFilterBase_GetEnable", _wrap_svlFilterBase_GetEnable, METH_VARARGS, (char *)"svlFilterBase_GetEnable(svlFilterBase self, bool & enable)"},
	 { (char *)"svlFilterBase_Enable", _wrap_svlFilterBase_Enable, METH_VARARGS, (char *)"svlFilterBase_Enable(svlFilterBase self)"},
	 { (char *)"svlFilterBase_Disable", _wrap_svlFilterBase_Disable, METH_VARARGS, (char *)"svlFilterBase_Disable(svlFilterBase self)"},
	 { (char *)"svlFilterBase_IsEnabled", _wrap_svlFilterBase_IsEnabled, METH_VARARGS, (char *)"svlFilterBase_IsEnabled(svlFilterBase self) -> bool"},
	 { (char *)"svlFilterBase_IsDisabled", _wrap_svlFilterBase_IsDisabled, METH_VARARGS, (char *)"svlFilterBase_IsDisabled(svlFilterBase self) -> bool"},
	 { (char *)"svlFilterBase_swigregister", svlFilterBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterImageFileWriter_ClassServices", _wrap_svlFilterImageFileWriter_ClassServices, METH_VARARGS, (char *)"svlFilterImageFileWriter_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterImageFileWriter", _wrap_new_svlFilterImageFileWriter, METH_VARARGS, (char *)"new_svlFilterImageFileWriter() -> svlFilterImageFileWriter"},
	 { (char *)"delete_svlFilterImageFileWriter", _wrap_delete_svlFilterImageFileWriter, METH_VARARGS, (char *)"delete_svlFilterImageFileWriter(svlFilterImageFileWriter self)"},
	 { (char *)"svlFilterImageFileWriter_Disable", _wrap_svlFilterImageFileWriter_Disable, METH_VARARGS, (char *)"\n"
		"Disable(bool disable, int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageFileWriter_Disable(svlFilterImageFileWriter self, bool disable) -> int\n"
		""},
	 { (char *)"svlFilterImageFileWriter_SetFilePath", _wrap_svlFilterImageFileWriter_SetFilePath, METH_VARARGS, (char *)"\n"
		"SetFilePath(std::string const & filepathprefix, std::string const & extension, int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageFileWriter_SetFilePath(svlFilterImageFileWriter self, std::string const & filepathprefix, std::string const & extension) -> int\n"
		""},
	 { (char *)"svlFilterImageFileWriter_SetCompression", _wrap_svlFilterImageFileWriter_SetCompression, METH_VARARGS, (char *)"\n"
		"SetCompression(int compression, int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageFileWriter_SetCompression(svlFilterImageFileWriter self, int compression) -> int\n"
		""},
	 { (char *)"svlFilterImageFileWriter_EnableTimestamps", _wrap_svlFilterImageFileWriter_EnableTimestamps, METH_VARARGS, (char *)"\n"
		"EnableTimestamps(bool enable=True)\n"
		"svlFilterImageFileWriter_EnableTimestamps(svlFilterImageFileWriter self)\n"
		""},
	 { (char *)"svlFilterImageFileWriter_Pause", _wrap_svlFilterImageFileWriter_Pause, METH_VARARGS, (char *)"svlFilterImageFileWriter_Pause(svlFilterImageFileWriter self)"},
	 { (char *)"svlFilterImageFileWriter_Record", _wrap_svlFilterImageFileWriter_Record, METH_VARARGS, (char *)"\n"
		"Record(int frames=-1)\n"
		"svlFilterImageFileWriter_Record(svlFilterImageFileWriter self)\n"
		""},
	 { (char *)"svlFilterImageFileWriter_swigregister", svlFilterImageFileWriter_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterImageRectifier_ClassServices", _wrap_svlFilterImageRectifier_ClassServices, METH_VARARGS, (char *)"svlFilterImageRectifier_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterImageRectifier", _wrap_new_svlFilterImageRectifier, METH_VARARGS, (char *)"new_svlFilterImageRectifier() -> svlFilterImageRectifier"},
	 { (char *)"delete_svlFilterImageRectifier", _wrap_delete_svlFilterImageRectifier, METH_VARARGS, (char *)"delete_svlFilterImageRectifier(svlFilterImageRectifier self)"},
	 { (char *)"svlFilterImageRectifier_LoadTable", _wrap_svlFilterImageRectifier_LoadTable, METH_VARARGS, (char *)"\n"
		"LoadTable(std::string const & filepath, unsigned int videoch=SVL_LEFT, int exponentlen=3) -> int\n"
		"LoadTable(std::string const & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageRectifier_LoadTable(svlFilterImageRectifier self, std::string const & filepath) -> int\n"
		""},
	 { (char *)"svlFilterImageRectifier_SetTableFromCameraCalibration", _wrap_svlFilterImageRectifier_SetTableFromCameraCalibration, METH_VARARGS, (char *)"\n"
		"svlFilterImageRectifier_SetTableFromCameraCalibration(svlFilterImageRectifier self, unsigned int height, unsigned int width, vct3x3 R, \n"
		"    vct2 f, vct2 c, vctFixedSizeVector< double,7 > k, double alpha, unsigned int videoch) -> int\n"
		""},
	 { (char *)"svlFilterImageRectifier_GetTables", _wrap_svlFilterImageRectifier_GetTables, METH_VARARGS, (char *)"svlFilterImageRectifier_GetTables(svlFilterImageRectifier self) -> vctFixedSizeVector< svlImageProcessing::Internals,SVL_MAX_CHANNELS >"},
	 { (char *)"svlFilterImageRectifier_EnableInterpolation", _wrap_svlFilterImageRectifier_EnableInterpolation, METH_VARARGS, (char *)"\n"
		"EnableInterpolation(bool enable=True)\n"
		"svlFilterImageRectifier_EnableInterpolation(svlFilterImageRectifier self)\n"
		""},
	 { (char *)"svlFilterImageRectifier_swigregister", svlFilterImageRectifier_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterImageResizer_ClassServices", _wrap_svlFilterImageResizer_ClassServices, METH_VARARGS, (char *)"svlFilterImageResizer_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterImageResizer", _wrap_new_svlFilterImageResizer, METH_VARARGS, (char *)"new_svlFilterImageResizer() -> svlFilterImageResizer"},
	 { (char *)"delete_svlFilterImageResizer", _wrap_delete_svlFilterImageResizer, METH_VARARGS, (char *)"delete_svlFilterImageResizer(svlFilterImageResizer self)"},
	 { (char *)"svlFilterImageResizer_SetOutputSize", _wrap_svlFilterImageResizer_SetOutputSize, METH_VARARGS, (char *)"\n"
		"SetOutputSize(unsigned int width, unsigned int height, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageResizer_SetOutputSize(svlFilterImageResizer self, unsigned int width, unsigned int height) -> int\n"
		""},
	 { (char *)"svlFilterImageResizer_SetOutputRatio", _wrap_svlFilterImageResizer_SetOutputRatio, METH_VARARGS, (char *)"\n"
		"SetOutputRatio(double widthratio, double heightratio, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageResizer_SetOutputRatio(svlFilterImageResizer self, double widthratio, double heightratio) -> int\n"
		""},
	 { (char *)"svlFilterImageResizer_SetInterpolation", _wrap_svlFilterImageResizer_SetInterpolation, METH_VARARGS, (char *)"svlFilterImageResizer_SetInterpolation(svlFilterImageResizer self, bool const & enable)"},
	 { (char *)"svlFilterImageResizer_GetInterpolation", _wrap_svlFilterImageResizer_GetInterpolation, METH_VARARGS, (char *)"svlFilterImageResizer_GetInterpolation(svlFilterImageResizer self, bool & enable)"},
	 { (char *)"svlFilterImageResizer_swigregister", svlFilterImageResizer_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterSourceBase_ClassServices", _wrap_svlFilterSourceBase_ClassServices, METH_VARARGS, (char *)"svlFilterSourceBase_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"delete_svlFilterSourceBase", _wrap_delete_svlFilterSourceBase, METH_VARARGS, (char *)"delete_svlFilterSourceBase(svlFilterSourceBase self)"},
	 { (char *)"svlFilterSourceBase_SetTargetFrequency", _wrap_svlFilterSourceBase_SetTargetFrequency, METH_VARARGS, (char *)"svlFilterSourceBase_SetTargetFrequency(svlFilterSourceBase self, double const & hertz)"},
	 { (char *)"svlFilterSourceBase_GetTargetFrequency", _wrap_svlFilterSourceBase_GetTargetFrequency, METH_VARARGS, (char *)"svlFilterSourceBase_GetTargetFrequency(svlFilterSourceBase self) -> double"},
	 { (char *)"svlFilterSourceBase_SetLoop", _wrap_svlFilterSourceBase_SetLoop, METH_VARARGS, (char *)"svlFilterSourceBase_SetLoop(svlFilterSourceBase self, bool const & loop)"},
	 { (char *)"svlFilterSourceBase_GetLoop", _wrap_svlFilterSourceBase_GetLoop, METH_VARARGS, (char *)"svlFilterSourceBase_GetLoop(svlFilterSourceBase self) -> bool"},
	 { (char *)"svlFilterSourceBase_Pause", _wrap_svlFilterSourceBase_Pause, METH_VARARGS, (char *)"svlFilterSourceBase_Pause(svlFilterSourceBase self)"},
	 { (char *)"svlFilterSourceBase_Play", _wrap_svlFilterSourceBase_Play, METH_VARARGS, (char *)"\n"
		"Play()\n"
		"svlFilterSourceBase_Play(svlFilterSourceBase self, int const & frames)\n"
		""},
	 { (char *)"svlFilterSourceBase_swigregister", svlFilterSourceBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterSourceVideoFile_ClassServices", _wrap_svlFilterSourceVideoFile_ClassServices, METH_VARARGS, (char *)"svlFilterSourceVideoFile_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterSourceVideoFile", _wrap_new_svlFilterSourceVideoFile, METH_VARARGS, (char *)"\n"
		"svlFilterSourceVideoFile()\n"
		"new_svlFilterSourceVideoFile(unsigned int channelcount) -> svlFilterSourceVideoFile\n"
		""},
	 { (char *)"delete_svlFilterSourceVideoFile", _wrap_delete_svlFilterSourceVideoFile, METH_VARARGS, (char *)"delete_svlFilterSourceVideoFile(svlFilterSourceVideoFile self)"},
	 { (char *)"svlFilterSourceVideoFile_SetChannelCount", _wrap_svlFilterSourceVideoFile_SetChannelCount, METH_VARARGS, (char *)"svlFilterSourceVideoFile_SetChannelCount(svlFilterSourceVideoFile self, unsigned int channelcount) -> int"},
	 { (char *)"svlFilterSourceVideoFile_DialogFilePath", _wrap_svlFilterSourceVideoFile_DialogFilePath, METH_VARARGS, (char *)"\n"
		"DialogFilePath(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_DialogFilePath(svlFilterSourceVideoFile self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_SetFilePath", _wrap_svlFilterSourceVideoFile_SetFilePath, METH_VARARGS, (char *)"\n"
		"SetFilePath(std::string const & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_SetFilePath(svlFilterSourceVideoFile self, std::string const & filepath) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetFilePath", _wrap_svlFilterSourceVideoFile_GetFilePath, METH_VARARGS, (char *)"\n"
		"GetFilePath(std::string & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_GetFilePath(svlFilterSourceVideoFile self, std::string & filepath) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_SetPosition", _wrap_svlFilterSourceVideoFile_SetPosition, METH_VARARGS, (char *)"\n"
		"SetPosition(int const position, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_SetPosition(svlFilterSourceVideoFile self, int const position) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetPosition", _wrap_svlFilterSourceVideoFile_GetPosition, METH_VARARGS, (char *)"\n"
		"GetPosition(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_GetPosition(svlFilterSourceVideoFile self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_SetRange", _wrap_svlFilterSourceVideoFile_SetRange, METH_VARARGS, (char *)"\n"
		"SetRange(int const _from, int const to, unsigned int videoch=SVL_LEFT) -> int\n"
		"SetRange(int const _from, int const to) -> int\n"
		"SetRange(vctInt2 const range, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_SetRange(svlFilterSourceVideoFile self, vctInt2 const range) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetRange", _wrap_svlFilterSourceVideoFile_GetRange, METH_VARARGS, (char *)"\n"
		"GetRange(vctInt2 & range, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_GetRange(svlFilterSourceVideoFile self, vctInt2 & range) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetLength", _wrap_svlFilterSourceVideoFile_GetLength, METH_VARARGS, (char *)"\n"
		"GetLength(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_GetLength(svlFilterSourceVideoFile self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetWidth", _wrap_svlFilterSourceVideoFile_GetWidth, METH_VARARGS, (char *)"\n"
		"GetWidth(unsigned int videoch=SVL_LEFT) -> unsigned int\n"
		"svlFilterSourceVideoFile_GetWidth(svlFilterSourceVideoFile self) -> unsigned int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetHeight", _wrap_svlFilterSourceVideoFile_GetHeight, METH_VARARGS, (char *)"\n"
		"GetHeight(unsigned int videoch=SVL_LEFT) -> unsigned int\n"
		"svlFilterSourceVideoFile_GetHeight(svlFilterSourceVideoFile self) -> unsigned int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetPositionAtTime", _wrap_svlFilterSourceVideoFile_GetPositionAtTime, METH_VARARGS, (char *)"\n"
		"GetPositionAtTime(double const time, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoFile_GetPositionAtTime(svlFilterSourceVideoFile self, double const time) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_GetTimeAtPosition", _wrap_svlFilterSourceVideoFile_GetTimeAtPosition, METH_VARARGS, (char *)"\n"
		"GetTimeAtPosition(int const position, unsigned int videoch=SVL_LEFT) -> double\n"
		"svlFilterSourceVideoFile_GetTimeAtPosition(svlFilterSourceVideoFile self, int const position) -> double\n"
		""},
	 { (char *)"svlFilterSourceVideoFile_swigregister", svlFilterSourceVideoFile_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterVideoFileWriter_ClassServices", _wrap_svlFilterVideoFileWriter_ClassServices, METH_VARARGS, (char *)"svlFilterVideoFileWriter_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterVideoFileWriter", _wrap_new_svlFilterVideoFileWriter, METH_VARARGS, (char *)"new_svlFilterVideoFileWriter() -> svlFilterVideoFileWriter"},
	 { (char *)"delete_svlFilterVideoFileWriter", _wrap_delete_svlFilterVideoFileWriter, METH_VARARGS, (char *)"delete_svlFilterVideoFileWriter(svlFilterVideoFileWriter self)"},
	 { (char *)"svlFilterVideoFileWriter_DialogOpenFile", _wrap_svlFilterVideoFileWriter_DialogOpenFile, METH_VARARGS, (char *)"\n"
		"DialogOpenFile(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_DialogOpenFile(svlFilterVideoFileWriter self) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_DialogFramerate", _wrap_svlFilterVideoFileWriter_DialogFramerate, METH_VARARGS, (char *)"\n"
		"DialogFramerate(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_DialogFramerate(svlFilterVideoFileWriter self) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_DialogCodec", _wrap_svlFilterVideoFileWriter_DialogCodec, METH_VARARGS, (char *)"\n"
		"DialogCodec(std::string const & extension, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_DialogCodec(svlFilterVideoFileWriter self, std::string const & extension) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_SetFilePath", _wrap_svlFilterVideoFileWriter_SetFilePath, METH_VARARGS, (char *)"\n"
		"SetFilePath(std::string const & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_SetFilePath(svlFilterVideoFileWriter self, std::string const & filepath) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_SetFramerate", _wrap_svlFilterVideoFileWriter_SetFramerate, METH_VARARGS, (char *)"\n"
		"SetFramerate(double const framerate, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_SetFramerate(svlFilterVideoFileWriter self, double const framerate) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_SetEnableTimestampsFile", _wrap_svlFilterVideoFileWriter_SetEnableTimestampsFile, METH_VARARGS, (char *)"\n"
		"SetEnableTimestampsFile(bool enable, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_SetEnableTimestampsFile(svlFilterVideoFileWriter self, bool enable) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_SetCodecParams", _wrap_svlFilterVideoFileWriter_SetCodecParams, METH_VARARGS, (char *)"\n"
		"SetCodecParams(svlVideoIO::Compression const * compression, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_SetCodecParams(svlFilterVideoFileWriter self, svlVideoIO::Compression const * compression) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_ResetCodec", _wrap_svlFilterVideoFileWriter_ResetCodec, METH_VARARGS, (char *)"\n"
		"ResetCodec(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_ResetCodec(svlFilterVideoFileWriter self) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_SaveCodec", _wrap_svlFilterVideoFileWriter_SaveCodec, METH_VARARGS, (char *)"\n"
		"SaveCodec(std::string const & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_SaveCodec(svlFilterVideoFileWriter self, std::string const & filepath) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_LoadCodec", _wrap_svlFilterVideoFileWriter_LoadCodec, METH_VARARGS, (char *)"\n"
		"LoadCodec(std::string const & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_LoadCodec(svlFilterVideoFileWriter self, std::string const & filepath) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_GetFilePath", _wrap_svlFilterVideoFileWriter_GetFilePath, METH_VARARGS, (char *)"\n"
		"GetFilePath(unsigned int videoch=SVL_LEFT) -> std::string\n"
		"GetFilePath() -> std::string\n"
		"GetFilePath(std::string & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_GetFilePath(svlFilterVideoFileWriter self, std::string & filepath) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_GetFramerate", _wrap_svlFilterVideoFileWriter_GetFramerate, METH_VARARGS, (char *)"\n"
		"GetFramerate(unsigned int videoch=SVL_LEFT) -> double\n"
		"svlFilterVideoFileWriter_GetFramerate(svlFilterVideoFileWriter self) -> double\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_GetEnableTimestampsFile", _wrap_svlFilterVideoFileWriter_GetEnableTimestampsFile, METH_VARARGS, (char *)"\n"
		"GetEnableTimestampsFile(unsigned int videoch=SVL_LEFT) -> bool\n"
		"svlFilterVideoFileWriter_GetEnableTimestampsFile(svlFilterVideoFileWriter self) -> bool\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_GetCodecName", _wrap_svlFilterVideoFileWriter_GetCodecName, METH_VARARGS, (char *)"\n"
		"GetCodecName(unsigned int videoch=SVL_LEFT) -> std::string\n"
		"GetCodecName() -> std::string\n"
		"GetCodecName(std::string & name, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_GetCodecName(svlFilterVideoFileWriter self, std::string & name) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_GetCodecParams", _wrap_svlFilterVideoFileWriter_GetCodecParams, METH_VARARGS, (char *)"\n"
		"GetCodecParams(unsigned int videoch=SVL_LEFT) -> svlVideoIO::Compression\n"
		"GetCodecParams() -> svlVideoIO::Compression\n"
		"GetCodecParams(svlVideoIO::Compression ** compression, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_GetCodecParams(svlFilterVideoFileWriter self, svlVideoIO::Compression ** compression) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_OpenFile", _wrap_svlFilterVideoFileWriter_OpenFile, METH_VARARGS, (char *)"\n"
		"OpenFile(unsigned int videoch=SVL_LEFT) -> int\n"
		"OpenFile() -> int\n"
		"OpenFile(std::string const & filepath, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_OpenFile(svlFilterVideoFileWriter self, std::string const & filepath) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_CloseFile", _wrap_svlFilterVideoFileWriter_CloseFile, METH_VARARGS, (char *)"\n"
		"CloseFile(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterVideoFileWriter_CloseFile(svlFilterVideoFileWriter self) -> int\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_Record", _wrap_svlFilterVideoFileWriter_Record, METH_VARARGS, (char *)"\n"
		"Record(int frames=-1)\n"
		"svlFilterVideoFileWriter_Record(svlFilterVideoFileWriter self)\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_RecordAtTime", _wrap_svlFilterVideoFileWriter_RecordAtTime, METH_VARARGS, (char *)"\n"
		"RecordAtTime(int frames=-1, double time=-1.0)\n"
		"RecordAtTime(int frames=-1)\n"
		"svlFilterVideoFileWriter_RecordAtTime(svlFilterVideoFileWriter self)\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_Pause", _wrap_svlFilterVideoFileWriter_Pause, METH_VARARGS, (char *)"svlFilterVideoFileWriter_Pause(svlFilterVideoFileWriter self)"},
	 { (char *)"svlFilterVideoFileWriter_PauseAtTime", _wrap_svlFilterVideoFileWriter_PauseAtTime, METH_VARARGS, (char *)"\n"
		"PauseAtTime(double time=-1.0)\n"
		"svlFilterVideoFileWriter_PauseAtTime(svlFilterVideoFileWriter self)\n"
		""},
	 { (char *)"svlFilterVideoFileWriter_GetIsRecording", _wrap_svlFilterVideoFileWriter_GetIsRecording, METH_VARARGS, (char *)"svlFilterVideoFileWriter_GetIsRecording(svlFilterVideoFileWriter self) -> bool"},
	 { (char *)"svlFilterVideoFileWriter_swigregister", svlFilterVideoFileWriter_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterSourceBuffer_ClassServices", _wrap_svlFilterSourceBuffer_ClassServices, METH_VARARGS, (char *)"svlFilterSourceBuffer_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterSourceBuffer", _wrap_new_svlFilterSourceBuffer, METH_VARARGS, (char *)"new_svlFilterSourceBuffer() -> svlFilterSourceBuffer"},
	 { (char *)"delete_svlFilterSourceBuffer", _wrap_delete_svlFilterSourceBuffer, METH_VARARGS, (char *)"delete_svlFilterSourceBuffer(svlFilterSourceBuffer self)"},
	 { (char *)"svlFilterSourceBuffer_SetBuffer", _wrap_svlFilterSourceBuffer_SetBuffer, METH_VARARGS, (char *)"svlFilterSourceBuffer_SetBuffer(svlFilterSourceBuffer self, svlBufferSample & buffer) -> int"},
	 { (char *)"svlFilterSourceBuffer_SetTimeout", _wrap_svlFilterSourceBuffer_SetTimeout, METH_VARARGS, (char *)"\n"
		"SetTimeout(double const timeout=5.0)\n"
		"svlFilterSourceBuffer_SetTimeout(svlFilterSourceBuffer self)\n"
		""},
	 { (char *)"svlFilterSourceBuffer_swigregister", svlFilterSourceBuffer_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterImageChannelSwapper_ClassServices", _wrap_svlFilterImageChannelSwapper_ClassServices, METH_VARARGS, (char *)"svlFilterImageChannelSwapper_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterImageChannelSwapper", _wrap_new_svlFilterImageChannelSwapper, METH_VARARGS, (char *)"new_svlFilterImageChannelSwapper() -> svlFilterImageChannelSwapper"},
	 { (char *)"delete_svlFilterImageChannelSwapper", _wrap_delete_svlFilterImageChannelSwapper, METH_VARARGS, (char *)"delete_svlFilterImageChannelSwapper(svlFilterImageChannelSwapper self)"},
	 { (char *)"svlFilterImageChannelSwapper_swigregister", svlFilterImageChannelSwapper_swigregister, METH_VARARGS, NULL},
	 { (char *)"delete_svlSampleImage", _wrap_delete_svlSampleImage, METH_VARARGS, (char *)"delete_svlSampleImage(svlSampleImage self)"},
	 { (char *)"svlSampleImage_GetPixelType", _wrap_svlSampleImage_GetPixelType, METH_VARARGS, (char *)"svlSampleImage_GetPixelType(svlSampleImage self) -> svlPixelType"},
	 { (char *)"svlSampleImage_GetAlphaChannel", _wrap_svlSampleImage_GetAlphaChannel, METH_VARARGS, (char *)"svlSampleImage_GetAlphaChannel(svlSampleImage self) -> int"},
	 { (char *)"svlSampleImage_GetNewInstance", _wrap_svlSampleImage_GetNewInstance, METH_VARARGS, (char *)"svlSampleImage_GetNewInstance(svlSampleImage self) -> svlSample *"},
	 { (char *)"svlSampleImage_GetType", _wrap_svlSampleImage_GetType, METH_VARARGS, (char *)"svlSampleImage_GetType(svlSampleImage self) -> svlStreamType"},
	 { (char *)"svlSampleImage_IsInitialized", _wrap_svlSampleImage_IsInitialized, METH_VARARGS, (char *)"svlSampleImage_IsInitialized(svlSampleImage self) -> bool"},
	 { (char *)"svlSampleImage_IplImageRef", _wrap_svlSampleImage_IplImageRef, METH_VARARGS, (char *)"\n"
		"IplImageRef(unsigned int const videochannel=0) -> IplImage\n"
		"svlSampleImage_IplImageRef(svlSampleImage self) -> IplImage *\n"
		""},
	 { (char *)"svlSampleImage_CvMatRef", _wrap_svlSampleImage_CvMatRef, METH_VARARGS, (char *)"\n"
		"CvMatRef(unsigned int const videochannel=0) -> cv::Mat\n"
		"svlSampleImage_CvMatRef(svlSampleImage self) -> cv::Mat\n"
		""},
	 { (char *)"svlSampleImage_GetUCharPointer", _wrap_svlSampleImage_GetUCharPointer, METH_VARARGS, (char *)"\n"
		"GetUCharPointer() -> unsigned char\n"
		"GetUCharPointer() -> unsigned char const\n"
		"GetUCharPointer(unsigned int const videochannel) -> unsigned char\n"
		"GetUCharPointer(unsigned int const videochannel) -> unsigned char const\n"
		"GetUCharPointer(unsigned int const videochannel, unsigned int const x, unsigned int const y) -> unsigned char\n"
		"svlSampleImage_GetUCharPointer(svlSampleImage self, unsigned int const videochannel, unsigned int const x, unsigned int const y) -> unsigned char const *\n"
		""},
	 { (char *)"svlSampleImage_SetSize", _wrap_svlSampleImage_SetSize, METH_VARARGS, (char *)"\n"
		"SetSize(svlSample const * sample) -> int\n"
		"SetSize(svlSample const & sample) -> int\n"
		"SetSize(unsigned int const width, unsigned int const height)\n"
		"SetSize(unsigned int const videochannel, unsigned int const width, unsigned int const height)\n"
		"SetSize(IplImage const * ipl_image, unsigned int const videochannel=0) -> int\n"
		"SetSize(IplImage const * ipl_image) -> int\n"
		"SetSize(cv::Mat const & cv_mat, unsigned int const videochannel=0) -> int\n"
		"svlSampleImage_SetSize(svlSampleImage self, cv::Mat const & cv_mat) -> int\n"
		""},
	 { (char *)"svlSampleImage_CopyOf", _wrap_svlSampleImage_CopyOf, METH_VARARGS, (char *)"\n"
		"CopyOf(svlSample const * sample) -> int\n"
		"CopyOf(svlSample const & sample) -> int\n"
		"CopyOf(IplImage const * ipl_image, unsigned int const videochannel=0) -> int\n"
		"CopyOf(IplImage const * ipl_image) -> int\n"
		"CopyOf(cv::Mat const & cv_mat, unsigned int const videochannel=0) -> int\n"
		"svlSampleImage_CopyOf(svlSampleImage self, cv::Mat const & cv_mat) -> int\n"
		""},
	 { (char *)"svlSampleImage_GetVideoChannels", _wrap_svlSampleImage_GetVideoChannels, METH_VARARGS, (char *)"svlSampleImage_GetVideoChannels(svlSampleImage self) -> unsigned int"},
	 { (char *)"svlSampleImage_GetDataChannels", _wrap_svlSampleImage_GetDataChannels, METH_VARARGS, (char *)"svlSampleImage_GetDataChannels(svlSampleImage self) -> unsigned int"},
	 { (char *)"svlSampleImage_GetBPP", _wrap_svlSampleImage_GetBPP, METH_VARARGS, (char *)"svlSampleImage_GetBPP(svlSampleImage self) -> unsigned int"},
	 { (char *)"svlSampleImage_GetWidth", _wrap_svlSampleImage_GetWidth, METH_VARARGS, (char *)"\n"
		"GetWidth(unsigned int const videochannel=0) -> unsigned int\n"
		"svlSampleImage_GetWidth(svlSampleImage self) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImage_GetHeight", _wrap_svlSampleImage_GetHeight, METH_VARARGS, (char *)"\n"
		"GetHeight(unsigned int const videochannel=0) -> unsigned int\n"
		"svlSampleImage_GetHeight(svlSampleImage self) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImage_GetRowStride", _wrap_svlSampleImage_GetRowStride, METH_VARARGS, (char *)"\n"
		"GetRowStride(unsigned int const videochannel=0) -> unsigned int\n"
		"svlSampleImage_GetRowStride(svlSampleImage self) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImage_GetDataSize", _wrap_svlSampleImage_GetDataSize, METH_VARARGS, (char *)"\n"
		"GetDataSize() -> unsigned int\n"
		"svlSampleImage_GetDataSize(svlSampleImage self, unsigned int const videochannel) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImage_GetSubImage", _wrap_svlSampleImage_GetSubImage, METH_VARARGS, (char *)"\n"
		"GetSubImage(unsigned int const top, unsigned int const height, unsigned int const videochannel=0) -> svlSampleImage\n"
		"GetSubImage(unsigned int const top, unsigned int const height) -> svlSampleImage\n"
		"GetSubImage(svlProcInfo * procInfo, unsigned int const videochannel=0) -> svlSampleImage\n"
		"svlSampleImage_GetSubImage(svlSampleImage self, svlProcInfo * procInfo) -> svlSampleImage\n"
		""},
	 { (char *)"svlSampleImage_ImportData", _wrap_svlSampleImage_ImportData, METH_VARARGS, (char *)"\n"
		"ImportData(unsigned char * input, unsigned int const size, int const param=0, unsigned int const videoch=SVL_LEFT) -> int\n"
		"ImportData(unsigned char * input, unsigned int const size, int const param=0) -> int\n"
		"ImportData(unsigned char * input, unsigned int const size) -> int\n"
		"ImportData(unsigned short * input, unsigned int const size, int const param=0, unsigned int const videoch=SVL_LEFT) -> int\n"
		"ImportData(unsigned short * input, unsigned int const size, int const param=0) -> int\n"
		"ImportData(unsigned short * input, unsigned int const size) -> int\n"
		"ImportData(unsigned int * input, unsigned int const size, int const param=0, unsigned int const videoch=SVL_LEFT) -> int\n"
		"ImportData(unsigned int * input, unsigned int const size, int const param=0) -> int\n"
		"ImportData(unsigned int * input, unsigned int const size) -> int\n"
		"ImportData(float * input, unsigned int const size, int const param=0, unsigned int const videoch=SVL_LEFT) -> int\n"
		"ImportData(float * input, unsigned int const size, int const param=0) -> int\n"
		"svlSampleImage_ImportData(svlSampleImage self, float * input, unsigned int const size) -> int\n"
		""},
	 { (char *)"svlSampleImage_ImportImage", _wrap_svlSampleImage_ImportImage, METH_VARARGS, (char *)"\n"
		"ImportImage(svlSampleImage image, int const param=0) -> int\n"
		"ImportImage(svlSampleImage image) -> int\n"
		"ImportImage(svlSampleImage image, int const param=0) -> int\n"
		"ImportImage(svlSampleImage image) -> int\n"
		"ImportImage(svlSampleImage image, unsigned int const src_channel, unsigned int const dest_channel, \n"
		"    int const param=0) -> int\n"
		"ImportImage(svlSampleImage image, unsigned int const src_channel, unsigned int const dest_channel) -> int\n"
		"ImportImage(svlSampleImage image, unsigned int const src_channel, unsigned int const dest_channel, \n"
		"    int const param=0) -> int\n"
		"svlSampleImage_ImportImage(svlSampleImage self, svlSampleImage image, unsigned int const src_channel, unsigned int const dest_channel) -> int\n"
		""},
	 { (char *)"svlSampleImage_ImportMatrix", _wrap_svlSampleImage_ImportMatrix, METH_VARARGS, (char *)"\n"
		"ImportMatrix(svlSampleMatrix const * matrix, int const param=0, unsigned int const videoch=SVL_LEFT) -> int\n"
		"ImportMatrix(svlSampleMatrix const * matrix, int const param=0) -> int\n"
		"svlSampleImage_ImportMatrix(svlSampleImage self, svlSampleMatrix const * matrix) -> int\n"
		""},
	 { (char *)"svlSampleImage_ImportSample", _wrap_svlSampleImage_ImportSample, METH_VARARGS, (char *)"\n"
		"ImportSample(svlSample const * sample) -> int\n"
		"svlSampleImage_ImportSample(svlSampleImage self, svlSample const * sample, unsigned int const videoch) -> int\n"
		""},
	 { (char *)"svlSampleImage_swigregister", svlSampleImage_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlSampleImageRGB_ClassServices", _wrap_svlSampleImageRGB_ClassServices, METH_VARARGS, (char *)"svlSampleImageRGB_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"svlSampleImageRGB_Services", _wrap_svlSampleImageRGB_Services, METH_VARARGS, (char *)"svlSampleImageRGB_Services(svlSampleImageRGB self) -> cmnClassServicesBase"},
	 { (char *)"new_svlSampleImageRGB", _wrap_new_svlSampleImageRGB, METH_VARARGS, (char *)"\n"
		"svlSampleImageRGB()\n"
		"svlSampleImageRGB(bool owndata)\n"
		"new_svlSampleImageRGB(svlSampleImageRGB other) -> svlSampleImageRGB\n"
		""},
	 { (char *)"delete_svlSampleImageRGB", _wrap_delete_svlSampleImageRGB, METH_VARARGS, (char *)"delete_svlSampleImageRGB(svlSampleImageRGB self)"},
	 { (char *)"svlSampleImageRGB_IplImageRef", _wrap_svlSampleImageRGB_IplImageRef, METH_VARARGS, (char *)"\n"
		"IplImageRef(unsigned int const videochannel=0) -> IplImage\n"
		"svlSampleImageRGB_IplImageRef(svlSampleImageRGB self) -> IplImage *\n"
		""},
	 { (char *)"svlSampleImageRGB_CvMatRef", _wrap_svlSampleImageRGB_CvMatRef, METH_VARARGS, (char *)"\n"
		"CvMatRef(unsigned int const videochannel=0) -> cv::Mat\n"
		"svlSampleImageRGB_CvMatRef(svlSampleImageRGB self) -> cv::Mat\n"
		""},
	 { (char *)"svlSampleImageRGB_GetUCharPointer", _wrap_svlSampleImageRGB_GetUCharPointer, METH_VARARGS, (char *)"\n"
		"GetUCharPointer() -> unsigned char\n"
		"GetUCharPointer() -> unsigned char const\n"
		"GetUCharPointer(unsigned int const videochannel) -> unsigned char\n"
		"GetUCharPointer(unsigned int const videochannel) -> unsigned char const\n"
		"GetUCharPointer(unsigned int const videochannel, unsigned int const x, unsigned int const y) -> unsigned char\n"
		"svlSampleImageRGB_GetUCharPointer(svlSampleImageRGB self, unsigned int const videochannel, unsigned int const x, unsigned int const y) -> unsigned char const *\n"
		""},
	 { (char *)"svlSampleImageRGB_SetSize", _wrap_svlSampleImageRGB_SetSize, METH_VARARGS, (char *)"\n"
		"SetSize(svlSample const * sample) -> int\n"
		"SetSize(svlSample const & sample) -> int\n"
		"SetSize(unsigned int const width, unsigned int const height)\n"
		"SetSize(unsigned int const videochannel, unsigned int const width, unsigned int const height)\n"
		"SetSize(IplImage const * ipl_image, unsigned int const videochannel=0) -> int\n"
		"SetSize(IplImage const * ipl_image) -> int\n"
		"SetSize(cv::Mat const & cv_mat, unsigned int const videochannel=0) -> int\n"
		"svlSampleImageRGB_SetSize(svlSampleImageRGB self, cv::Mat const & cv_mat) -> int\n"
		""},
	 { (char *)"svlSampleImageRGB_CopyOf", _wrap_svlSampleImageRGB_CopyOf, METH_VARARGS, (char *)"\n"
		"CopyOf(svlSample const * sample) -> int\n"
		"CopyOf(svlSample const & sample) -> int\n"
		"CopyOf(IplImage const * ipl_image, unsigned int const videochannel=0) -> int\n"
		"CopyOf(IplImage const * ipl_image) -> int\n"
		"CopyOf(cv::Mat const & cv_mat, unsigned int const videochannel=0) -> int\n"
		"svlSampleImageRGB_CopyOf(svlSampleImageRGB self, cv::Mat const & cv_mat) -> int\n"
		""},
	 { (char *)"svlSampleImageRGB_GetWidth", _wrap_svlSampleImageRGB_GetWidth, METH_VARARGS, (char *)"\n"
		"GetWidth(unsigned int const videochannel=0) -> unsigned int\n"
		"svlSampleImageRGB_GetWidth(svlSampleImageRGB self) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImageRGB_GetHeight", _wrap_svlSampleImageRGB_GetHeight, METH_VARARGS, (char *)"\n"
		"GetHeight(unsigned int const videochannel=0) -> unsigned int\n"
		"svlSampleImageRGB_GetHeight(svlSampleImageRGB self) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImageRGB_GetRowStride", _wrap_svlSampleImageRGB_GetRowStride, METH_VARARGS, (char *)"\n"
		"GetRowStride(unsigned int const videochannel=0) -> unsigned int\n"
		"svlSampleImageRGB_GetRowStride(svlSampleImageRGB self) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImageRGB_GetDataSize", _wrap_svlSampleImageRGB_GetDataSize, METH_VARARGS, (char *)"\n"
		"GetDataSize() -> unsigned int\n"
		"svlSampleImageRGB_GetDataSize(svlSampleImageRGB self, unsigned int const videochannel) -> unsigned int\n"
		""},
	 { (char *)"svlSampleImageRGB_GetSubImage", _wrap_svlSampleImageRGB_GetSubImage, METH_VARARGS, (char *)"\n"
		"GetSubImage(unsigned int const top, unsigned int const height, unsigned int const videochannel=0) -> svlSampleImage\n"
		"GetSubImage(unsigned int const top, unsigned int const height) -> svlSampleImage\n"
		"GetSubImage(svlProcInfo * procInfo, unsigned int const videochannel=0) -> svlSampleImage\n"
		"svlSampleImageRGB_GetSubImage(svlSampleImageRGB self, svlProcInfo * procInfo) -> svlSampleImage\n"
		""},
	 { (char *)"svlSampleImageRGB_SetMatrix", _wrap_svlSampleImageRGB_SetMatrix, METH_VARARGS, (char *)"\n"
		"SetMatrix(cv::Mat & matrix, unsigned int videochannel=0) -> int\n"
		"svlSampleImageRGB_SetMatrix(svlSampleImageRGB self, cv::Mat & matrix) -> int\n"
		""},
	 { (char *)"svlSampleImageRGB_GetMatrixRef", _wrap_svlSampleImageRGB_GetMatrixRef, METH_VARARGS, (char *)"\n"
		"GetMatrixRef(unsigned int const videochannel=0) -> vctDynamicMatrixRef< unsigned char >\n"
		"GetMatrixRef() -> vctDynamicMatrixRef< unsigned char >\n"
		"GetMatrixRef(unsigned int const videochannel=0) -> vctDynamicConstMatrixRef< unsigned char >\n"
		"svlSampleImageRGB_GetMatrixRef(svlSampleImageRGB self) -> vctDynamicConstMatrixRef< unsigned char >\n"
		""},
	 { (char *)"svlSampleImageRGB_GetPointer", _wrap_svlSampleImageRGB_GetPointer, METH_VARARGS, (char *)"\n"
		"GetPointer(unsigned int const videochannel=0) -> unsigned char\n"
		"GetPointer() -> unsigned char\n"
		"GetPointer(unsigned int const videochannel=0) -> unsigned char const\n"
		"GetPointer() -> unsigned char const\n"
		"GetPointer(unsigned int const videochannel, unsigned int const x, unsigned int const y) -> unsigned char\n"
		"svlSampleImageRGB_GetPointer(svlSampleImageRGB self, unsigned int const videochannel, unsigned int const x, unsigned int const y) -> unsigned char const *\n"
		""},
	 { (char *)"svlSampleImageRGB_swigregister", svlSampleImageRGB_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_Internals", _wrap_new_Internals, METH_VARARGS, (char *)"new_Internals() -> Internals"},
	 { (char *)"delete_Internals", _wrap_delete_Internals, METH_VARARGS, (char *)"delete_Internals(Internals self)"},
	 { (char *)"Internals_Get", _wrap_Internals_Get, METH_VARARGS, (char *)"Internals_Get(Internals self) -> svlImageProcessingInternals"},
	 { (char *)"Internals_Set", _wrap_Internals_Set, METH_VARARGS, (char *)"Internals_Set(Internals self, svlImageProcessingInternals ib)"},
	 { (char *)"Internals_Release", _wrap_Internals_Release, METH_VARARGS, (char *)"Internals_Release(Internals self)"},
	 { (char *)"Internals_swigregister", Internals_swigregister, METH_VARARGS, NULL},
	 { (char *)"Convolution", _wrap_Convolution, METH_VARARGS, (char *)"\n"
		"Convolution(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    vctDynamicVector< double > kernel_horiz, vctDynamicVector< double > kernel_vert, \n"
		"    bool absres=False) -> int\n"
		"Convolution(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    vctDynamicVector< double > kernel_horiz, vctDynamicVector< double > kernel_vert) -> int\n"
		"Convolution(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    vctDynamicMatrix< double > kernel, bool absres=False) -> int\n"
		"Convolution(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    vctDynamicMatrix< double > kernel) -> int\n"
		""},
	 { (char *)"UnsharpMask", _wrap_UnsharpMask, METH_VARARGS, (char *)"\n"
		"UnsharpMask(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    int radius, double amount, int threshold=0) -> int\n"
		"UnsharpMask(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    int radius, double amount) -> int\n"
		""},
	 { (char *)"Crop", _wrap_Crop, METH_VARARGS, (char *)"\n"
		"Crop(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    int left, int top) -> int\n"
		""},
	 { (char *)"Resize", _wrap_Resize, METH_VARARGS, (char *)"\n"
		"Resize(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    bool interpolation) -> int\n"
		"Resize(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    bool interpolation, vctDynamicVector< unsigned char > & internals) -> int\n"
		""},
	 { (char *)"Deinterlace", _wrap_Deinterlace, METH_VARARGS, (char *)"Deinterlace(svlSampleImage image, unsigned int videoch, svlImageProcessing::DI_Algorithm algorithm) -> int"},
	 { (char *)"DisparityMapToSurface", _wrap_DisparityMapToSurface, METH_VARARGS, (char *)"\n"
		"DisparityMapToSurface(svlSampleMatrixFloat * disparity_map, svlSampleImage3DMap * mesh_3d, svlCameraGeometry & camera_geometry, \n"
		"    svlRect & roi) -> int\n"
		""},
	 { (char *)"Rectify", _wrap_Rectify, METH_VARARGS, (char *)"\n"
		"Rectify(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    std::string const & table_filename, bool interpolation) -> int\n"
		"Rectify(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    std::string const & table_filename, bool interpolation, \n"
		"    Internals internals) -> int\n"
		""},
	 { (char *)"RectifyPython", _wrap_RectifyPython, METH_VARARGS, (char *)"\n"
		"RectifyPython(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    bool interpolation, Internals internals) -> int\n"
		""},
	 { (char *)"SetExposure", _wrap_SetExposure, METH_VARARGS, (char *)"\n"
		"SetExposure(svlSampleImage image, unsigned int videoch, double brightness, double contrast, double gamma) -> int\n"
		"SetExposure(svlSampleImage image, unsigned int videoch, double brightness, double contrast, double gamma, \n"
		"    Internals internals) -> int\n"
		""},
	 { (char *)"Dilate", _wrap_Dilate, METH_VARARGS, (char *)"\n"
		"Dilate(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    unsigned int radius) -> int\n"
		""},
	 { (char *)"Erode", _wrap_Erode, METH_VARARGS, (char *)"\n"
		"Erode(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch, \n"
		"    unsigned int radius) -> int\n"
		""},
	 { (char *)"Blend", _wrap_Blend, METH_VARARGS, (char *)"\n"
		"Blend(svlSampleImage src1_img, unsigned int src1_videoch, svlSampleImage src2_img, unsigned int src2_videoch, \n"
		"    svlSampleImage mask_img, unsigned int mask_videoch, \n"
		"    svlSampleImage dst_img, unsigned int dst_videoch) -> int\n"
		""},
	 { (char *)"SwapColorChannels", _wrap_SwapColorChannels, METH_VARARGS, (char *)"SwapColorChannels(svlSampleImage src_img, unsigned int src_videoch, svlSampleImage dst_img, unsigned int dst_videoch) -> int"},
	 { (char *)"LabelBlobs", _wrap_LabelBlobs, METH_VARARGS, (char *)"\n"
		"LabelBlobs(svlSampleImageMono8 const * image, svlSampleImageMono32 * labels, Internals internals) -> unsigned int\n"
		"LabelBlobs(svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo * labels, unsigned int const videoch, \n"
		"    Internals internals) -> unsigned int\n"
		""},
	 { (char *)"GetBlobsFromLabels", _wrap_GetBlobsFromLabels, METH_VARARGS, (char *)"\n"
		"GetBlobsFromLabels(svlSampleImageMono8 const * image, svlSampleImageMono32 const * labels, svlSampleBlobs * blobs, \n"
		"    Internals internals, unsigned int min_area=0, unsigned int max_area=0, \n"
		"    double min_compactness=0.0, double max_compactness=0.0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8 const * image, svlSampleImageMono32 const * labels, svlSampleBlobs * blobs, \n"
		"    Internals internals, unsigned int min_area=0, unsigned int max_area=0, \n"
		"    double min_compactness=0.0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8 const * image, svlSampleImageMono32 const * labels, svlSampleBlobs * blobs, \n"
		"    Internals internals, unsigned int min_area=0, unsigned int max_area=0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8 const * image, svlSampleImageMono32 const * labels, svlSampleBlobs * blobs, \n"
		"    Internals internals, unsigned int min_area=0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8 const * image, svlSampleImageMono32 const * labels, svlSampleBlobs * blobs, \n"
		"    Internals internals) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo const * labels, \n"
		"    svlSampleBlobs * blobs, unsigned int const videoch, Internals internals, \n"
		"    unsigned int min_area=0, unsigned int max_area=0, double min_compactness=0.0, \n"
		"    double max_compactness=0.0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo const * labels, \n"
		"    svlSampleBlobs * blobs, unsigned int const videoch, Internals internals, \n"
		"    unsigned int min_area=0, unsigned int max_area=0, double min_compactness=0.0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo const * labels, \n"
		"    svlSampleBlobs * blobs, unsigned int const videoch, Internals internals, \n"
		"    unsigned int min_area=0, unsigned int max_area=0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo const * labels, \n"
		"    svlSampleBlobs * blobs, unsigned int const videoch, Internals internals, \n"
		"    unsigned int min_area=0) -> int\n"
		"GetBlobsFromLabels(svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo const * labels, \n"
		"    svlSampleBlobs * blobs, unsigned int const videoch, Internals internals) -> int\n"
		""},
	 { (char *)"delete_svlImageProcessingInternals", _wrap_delete_svlImageProcessingInternals, METH_VARARGS, (char *)"delete_svlImageProcessingInternals(svlImageProcessingInternals self)"},
	 { (char *)"svlImageProcessingInternals_swigregister", svlImageProcessingInternals_swigregister, METH_VARARGS, NULL},
	 { (char *)"dgeev_", _wrap_dgeev_, METH_VARARGS, (char *)"\n"
		"dgeev_(char * JOBVL, char * JOBVR, CISSTNETLIB_INTEGER * N, CISSTNETLIB_DOUBLE * A, CISSTNETLIB_INTEGER * LDA, \n"
		"    CISSTNETLIB_DOUBLE * WR, CISSTNETLIB_DOUBLE * WI, CISSTNETLIB_DOUBLE * VL, \n"
		"    CISSTNETLIB_INTEGER * LDVL, CISSTNETLIB_DOUBLE * VR, \n"
		"    CISSTNETLIB_INTEGER * LDVR, CISSTNETLIB_DOUBLE * WORK, CISSTNETLIB_INTEGER * LWORK, \n"
		"    CISSTNETLIB_INTEGER * INFO)\n"
		""},
	 { (char *)"ConvolutionRGB", _wrap_ConvolutionRGB, METH_VARARGS, (char *)"\n"
		"ConvolutionRGB(unsigned char * input, unsigned char * output, int const width, int const height, \n"
		"    vctDynamicVector< int > & kernel, bool horizontal, bool absres)\n"
		"ConvolutionRGB(unsigned char * input, unsigned char * output, int const width, int const height, \n"
		"    vctDynamicMatrix< int > & kernel, bool absres)\n"
		""},
	 { (char *)"ConvolutionRGBA", _wrap_ConvolutionRGBA, METH_VARARGS, (char *)"\n"
		"ConvolutionRGBA(unsigned char * input, unsigned char * output, int const width, int const height, \n"
		"    vctDynamicVector< int > & kernel, bool horizontal, bool absres)\n"
		"ConvolutionRGBA(unsigned char * input, unsigned char * output, int const width, int const height, \n"
		"    vctDynamicMatrix< int > & kernel, bool absres)\n"
		""},
	 { (char *)"ConvolutionMono8", _wrap_ConvolutionMono8, METH_VARARGS, (char *)"\n"
		"ConvolutionMono8(unsigned char * input, unsigned char * output, int const width, int const height, \n"
		"    vctDynamicVector< int > & kernel, bool horizontal, bool absres)\n"
		"ConvolutionMono8(unsigned char * input, unsigned char * output, int const width, int const height, \n"
		"    vctDynamicMatrix< int > & kernel, bool absres)\n"
		""},
	 { (char *)"ConvolutionMono16", _wrap_ConvolutionMono16, METH_VARARGS, (char *)"\n"
		"ConvolutionMono16(unsigned short * input, unsigned short * output, int const width, int const height, \n"
		"    vctDynamicVector< int > & kernel, bool horizontal, bool absres)\n"
		"ConvolutionMono16(unsigned short * input, unsigned short * output, int const width, int const height, \n"
		"    vctDynamicMatrix< int > & kernel, bool absres)\n"
		""},
	 { (char *)"ConvolutionMono32", _wrap_ConvolutionMono32, METH_VARARGS, (char *)"\n"
		"ConvolutionMono32(unsigned int * input, unsigned int * output, int const width, int const height, vctDynamicVector< int > & kernel, \n"
		"    bool horizontal, bool absres)\n"
		"ConvolutionMono32(unsigned int * input, unsigned int * output, int const width, int const height, vctDynamicMatrix< int > & kernel, \n"
		"    bool absres)\n"
		""},
	 { (char *)"UnsharpMaskBlurRGB", _wrap_UnsharpMaskBlurRGB, METH_VARARGS, (char *)"\n"
		"UnsharpMaskBlurRGB(unsigned char const * img_in, unsigned char * img_out, int const width, int const height, \n"
		"    int radius)\n"
		""},
	 { (char *)"UnsharpMaskSharpenRGB", _wrap_UnsharpMaskSharpenRGB, METH_VARARGS, (char *)"\n"
		"UnsharpMaskSharpenRGB(unsigned char const * img_in, unsigned char const * img_mask, unsigned char * img_out, \n"
		"    int const width, int const height, int const amount, int const threshold)\n"
		""},
	 { (char *)"ResampleMono8", _wrap_ResampleMono8, METH_VARARGS, (char *)"\n"
		"ResampleMono8(unsigned char * src, unsigned int const srcwidth, unsigned int const srcheight, unsigned char * dst, \n"
		"    unsigned int const dstwidth, unsigned int const dstheight)\n"
		""},
	 { (char *)"ResampleAndInterpolateHMono8", _wrap_ResampleAndInterpolateHMono8, METH_VARARGS, (char *)"\n"
		"ResampleAndInterpolateHMono8(unsigned char * src, unsigned int const srcwidth, unsigned char * dst, unsigned int const dstwidth, \n"
		"    unsigned int const height)\n"
		""},
	 { (char *)"ResampleAndInterpolateVMono8", _wrap_ResampleAndInterpolateVMono8, METH_VARARGS, (char *)"\n"
		"ResampleAndInterpolateVMono8(unsigned char * src, unsigned int const srcheight, unsigned char * dst, unsigned int const dstheight, \n"
		"    unsigned int const width)\n"
		""},
	 { (char *)"ResampleRGB24", _wrap_ResampleRGB24, METH_VARARGS, (char *)"\n"
		"ResampleRGB24(unsigned char * src, unsigned int const srcwidth, unsigned int const srcheight, unsigned char * dst, \n"
		"    unsigned int const dstwidth, unsigned int const dstheight)\n"
		""},
	 { (char *)"ResampleAndInterpolateHRGB24", _wrap_ResampleAndInterpolateHRGB24, METH_VARARGS, (char *)"\n"
		"ResampleAndInterpolateHRGB24(unsigned char * src, unsigned int const srcwidth, unsigned char * dst, unsigned int const dstwidth, \n"
		"    unsigned int const height)\n"
		""},
	 { (char *)"ResampleAndInterpolateVRGB24", _wrap_ResampleAndInterpolateVRGB24, METH_VARARGS, (char *)"\n"
		"ResampleAndInterpolateVRGB24(unsigned char * src, unsigned int const srcheight, unsigned char * dst, unsigned int const dstheight, \n"
		"    unsigned int const width)\n"
		""},
	 { (char *)"DeinterlaceBlending", _wrap_DeinterlaceBlending, METH_VARARGS, (char *)"DeinterlaceBlending(unsigned char * buffer, unsigned int const width, unsigned int const height)"},
	 { (char *)"DeinterlaceDiscarding", _wrap_DeinterlaceDiscarding, METH_VARARGS, (char *)"DeinterlaceDiscarding(unsigned char * buffer, unsigned int const width, unsigned int const height)"},
	 { (char *)"DeinterlaceAdaptiveBlending", _wrap_DeinterlaceAdaptiveBlending, METH_VARARGS, (char *)"DeinterlaceAdaptiveBlending(unsigned char * buffer, unsigned int const width, unsigned int const height)"},
	 { (char *)"DeinterlaceAdaptiveDiscarding", _wrap_DeinterlaceAdaptiveDiscarding, METH_VARARGS, (char *)"DeinterlaceAdaptiveDiscarding(unsigned char * buffer, unsigned int const width, unsigned int const height)"},
	 { (char *)"new_RectificationInternals", _wrap_new_RectificationInternals, METH_VARARGS, (char *)"new_RectificationInternals() -> RectificationInternals"},
	 { (char *)"delete_RectificationInternals", _wrap_delete_RectificationInternals, METH_VARARGS, (char *)"delete_RectificationInternals(RectificationInternals self)"},
	 { (char *)"RectificationInternals_Generate", _wrap_RectificationInternals_Generate, METH_VARARGS, (char *)"\n"
		"Generate(unsigned int width, unsigned int height, svlSampleCameraGeometry const & geometry, \n"
		"    unsigned int cam_id=SVL_LEFT) -> bool\n"
		"RectificationInternals_Generate(RectificationInternals self, unsigned int width, unsigned int height, svlSampleCameraGeometry const & geometry) -> bool\n"
		""},
	 { (char *)"RectificationInternals_Load", _wrap_RectificationInternals_Load, METH_VARARGS, (char *)"\n"
		"Load(std::string const & filepath, int exponentlen=3) -> bool\n"
		"RectificationInternals_Load(RectificationInternals self, std::string const & filepath) -> bool\n"
		""},
	 { (char *)"RectificationInternals_SetFromCameraCalibrationPython", _wrap_RectificationInternals_SetFromCameraCalibrationPython, METH_VARARGS, (char *)"\n"
		"RectificationInternals_SetFromCameraCalibrationPython(RectificationInternals self, unsigned int height, unsigned int width, vct3x3 R, vct2 f, \n"
		"    vct2 c, vctFixedSizeVector< double,7 > k, double alpha, unsigned int videoch=0) -> bool\n"
		""},
	 { (char *)"RectificationInternals_SetFromCameraCalibration", _wrap_RectificationInternals_SetFromCameraCalibration, METH_VARARGS, (char *)"\n"
		"RectificationInternals_SetFromCameraCalibration(RectificationInternals self, unsigned int height, unsigned int width, vct3x3 R, vct2 f, \n"
		"    vct2 c, vctFixedSizeVector< double,7 > k, double alpha) -> bool\n"
		""},
	 { (char *)"RectificationInternals_TransposeLUTArray2", _wrap_RectificationInternals_TransposeLUTArray2, METH_VARARGS, (char *)"\n"
		"RectificationInternals_TransposeLUTArray2(RectificationInternals self, unsigned int * index, unsigned int size, unsigned int width, \n"
		"    unsigned int height)\n"
		""},
	 { (char *)"RectificationInternals_Width_set", _wrap_RectificationInternals_Width_set, METH_VARARGS, (char *)"RectificationInternals_Width_set(RectificationInternals self, unsigned int Width)"},
	 { (char *)"RectificationInternals_Width_get", _wrap_RectificationInternals_Width_get, METH_VARARGS, (char *)"RectificationInternals_Width_get(RectificationInternals self) -> unsigned int"},
	 { (char *)"RectificationInternals_Height_set", _wrap_RectificationInternals_Height_set, METH_VARARGS, (char *)"RectificationInternals_Height_set(RectificationInternals self, unsigned int Height)"},
	 { (char *)"RectificationInternals_Height_get", _wrap_RectificationInternals_Height_get, METH_VARARGS, (char *)"RectificationInternals_Height_get(RectificationInternals self) -> unsigned int"},
	 { (char *)"RectificationInternals_idxDest_set", _wrap_RectificationInternals_idxDest_set, METH_VARARGS, (char *)"RectificationInternals_idxDest_set(RectificationInternals self, unsigned int * idxDest)"},
	 { (char *)"RectificationInternals_idxDest_get", _wrap_RectificationInternals_idxDest_get, METH_VARARGS, (char *)"RectificationInternals_idxDest_get(RectificationInternals self) -> unsigned int *"},
	 { (char *)"RectificationInternals_idxDestSize_set", _wrap_RectificationInternals_idxDestSize_set, METH_VARARGS, (char *)"RectificationInternals_idxDestSize_set(RectificationInternals self, int idxDestSize)"},
	 { (char *)"RectificationInternals_idxDestSize_get", _wrap_RectificationInternals_idxDestSize_get, METH_VARARGS, (char *)"RectificationInternals_idxDestSize_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_idxSrc1_set", _wrap_RectificationInternals_idxSrc1_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc1_set(RectificationInternals self, unsigned int * idxSrc1)"},
	 { (char *)"RectificationInternals_idxSrc1_get", _wrap_RectificationInternals_idxSrc1_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc1_get(RectificationInternals self) -> unsigned int *"},
	 { (char *)"RectificationInternals_idxSrc1Size_set", _wrap_RectificationInternals_idxSrc1Size_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc1Size_set(RectificationInternals self, int idxSrc1Size)"},
	 { (char *)"RectificationInternals_idxSrc1Size_get", _wrap_RectificationInternals_idxSrc1Size_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc1Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_idxSrc2_set", _wrap_RectificationInternals_idxSrc2_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc2_set(RectificationInternals self, unsigned int * idxSrc2)"},
	 { (char *)"RectificationInternals_idxSrc2_get", _wrap_RectificationInternals_idxSrc2_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc2_get(RectificationInternals self) -> unsigned int *"},
	 { (char *)"RectificationInternals_idxSrc2Size_set", _wrap_RectificationInternals_idxSrc2Size_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc2Size_set(RectificationInternals self, int idxSrc2Size)"},
	 { (char *)"RectificationInternals_idxSrc2Size_get", _wrap_RectificationInternals_idxSrc2Size_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc2Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_idxSrc3_set", _wrap_RectificationInternals_idxSrc3_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc3_set(RectificationInternals self, unsigned int * idxSrc3)"},
	 { (char *)"RectificationInternals_idxSrc3_get", _wrap_RectificationInternals_idxSrc3_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc3_get(RectificationInternals self) -> unsigned int *"},
	 { (char *)"RectificationInternals_idxSrc3Size_set", _wrap_RectificationInternals_idxSrc3Size_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc3Size_set(RectificationInternals self, int idxSrc3Size)"},
	 { (char *)"RectificationInternals_idxSrc3Size_get", _wrap_RectificationInternals_idxSrc3Size_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc3Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_idxSrc4_set", _wrap_RectificationInternals_idxSrc4_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc4_set(RectificationInternals self, unsigned int * idxSrc4)"},
	 { (char *)"RectificationInternals_idxSrc4_get", _wrap_RectificationInternals_idxSrc4_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc4_get(RectificationInternals self) -> unsigned int *"},
	 { (char *)"RectificationInternals_idxSrc4Size_set", _wrap_RectificationInternals_idxSrc4Size_set, METH_VARARGS, (char *)"RectificationInternals_idxSrc4Size_set(RectificationInternals self, int idxSrc4Size)"},
	 { (char *)"RectificationInternals_idxSrc4Size_get", _wrap_RectificationInternals_idxSrc4Size_get, METH_VARARGS, (char *)"RectificationInternals_idxSrc4Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_blendSrc1_set", _wrap_RectificationInternals_blendSrc1_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc1_set(RectificationInternals self, unsigned char * blendSrc1)"},
	 { (char *)"RectificationInternals_blendSrc1_get", _wrap_RectificationInternals_blendSrc1_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc1_get(RectificationInternals self) -> unsigned char *"},
	 { (char *)"RectificationInternals_blendSrc1Size_set", _wrap_RectificationInternals_blendSrc1Size_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc1Size_set(RectificationInternals self, int blendSrc1Size)"},
	 { (char *)"RectificationInternals_blendSrc1Size_get", _wrap_RectificationInternals_blendSrc1Size_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc1Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_blendSrc2_set", _wrap_RectificationInternals_blendSrc2_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc2_set(RectificationInternals self, unsigned char * blendSrc2)"},
	 { (char *)"RectificationInternals_blendSrc2_get", _wrap_RectificationInternals_blendSrc2_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc2_get(RectificationInternals self) -> unsigned char *"},
	 { (char *)"RectificationInternals_blendSrc2Size_set", _wrap_RectificationInternals_blendSrc2Size_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc2Size_set(RectificationInternals self, int blendSrc2Size)"},
	 { (char *)"RectificationInternals_blendSrc2Size_get", _wrap_RectificationInternals_blendSrc2Size_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc2Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_blendSrc3_set", _wrap_RectificationInternals_blendSrc3_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc3_set(RectificationInternals self, unsigned char * blendSrc3)"},
	 { (char *)"RectificationInternals_blendSrc3_get", _wrap_RectificationInternals_blendSrc3_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc3_get(RectificationInternals self) -> unsigned char *"},
	 { (char *)"RectificationInternals_blendSrc3Size_set", _wrap_RectificationInternals_blendSrc3Size_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc3Size_set(RectificationInternals self, int blendSrc3Size)"},
	 { (char *)"RectificationInternals_blendSrc3Size_get", _wrap_RectificationInternals_blendSrc3Size_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc3Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_blendSrc4_set", _wrap_RectificationInternals_blendSrc4_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc4_set(RectificationInternals self, unsigned char * blendSrc4)"},
	 { (char *)"RectificationInternals_blendSrc4_get", _wrap_RectificationInternals_blendSrc4_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc4_get(RectificationInternals self) -> unsigned char *"},
	 { (char *)"RectificationInternals_blendSrc4Size_set", _wrap_RectificationInternals_blendSrc4Size_set, METH_VARARGS, (char *)"RectificationInternals_blendSrc4Size_set(RectificationInternals self, int blendSrc4Size)"},
	 { (char *)"RectificationInternals_blendSrc4Size_get", _wrap_RectificationInternals_blendSrc4Size_get, METH_VARARGS, (char *)"RectificationInternals_blendSrc4Size_get(RectificationInternals self) -> int"},
	 { (char *)"RectificationInternals_swigregister", RectificationInternals_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_ExposureInternals", _wrap_new_ExposureInternals, METH_VARARGS, (char *)"new_ExposureInternals() -> ExposureInternals"},
	 { (char *)"ExposureInternals_SetBrightness", _wrap_ExposureInternals_SetBrightness, METH_VARARGS, (char *)"ExposureInternals_SetBrightness(ExposureInternals self, double brightness)"},
	 { (char *)"ExposureInternals_GetBrightness", _wrap_ExposureInternals_GetBrightness, METH_VARARGS, (char *)"ExposureInternals_GetBrightness(ExposureInternals self) -> double"},
	 { (char *)"ExposureInternals_SetContrast", _wrap_ExposureInternals_SetContrast, METH_VARARGS, (char *)"ExposureInternals_SetContrast(ExposureInternals self, double contrast)"},
	 { (char *)"ExposureInternals_GetContrast", _wrap_ExposureInternals_GetContrast, METH_VARARGS, (char *)"ExposureInternals_GetContrast(ExposureInternals self) -> double"},
	 { (char *)"ExposureInternals_SetGamma", _wrap_ExposureInternals_SetGamma, METH_VARARGS, (char *)"ExposureInternals_SetGamma(ExposureInternals self, double gamma)"},
	 { (char *)"ExposureInternals_GetGamma", _wrap_ExposureInternals_GetGamma, METH_VARARGS, (char *)"ExposureInternals_GetGamma(ExposureInternals self) -> double"},
	 { (char *)"ExposureInternals_CalculateCurve", _wrap_ExposureInternals_CalculateCurve, METH_VARARGS, (char *)"ExposureInternals_CalculateCurve(ExposureInternals self)"},
	 { (char *)"ExposureInternals_Curve_set", _wrap_ExposureInternals_Curve_set, METH_VARARGS, (char *)"ExposureInternals_Curve_set(ExposureInternals self, vctDynamicVector< unsigned char > Curve)"},
	 { (char *)"ExposureInternals_Curve_get", _wrap_ExposureInternals_Curve_get, METH_VARARGS, (char *)"ExposureInternals_Curve_get(ExposureInternals self) -> vctDynamicVector< unsigned char >"},
	 { (char *)"delete_ExposureInternals", _wrap_delete_ExposureInternals, METH_VARARGS, (char *)"delete_ExposureInternals(ExposureInternals self)"},
	 { (char *)"ExposureInternals_swigregister", ExposureInternals_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_BlobDetectorInternals", _wrap_new_BlobDetectorInternals, METH_VARARGS, (char *)"new_BlobDetectorInternals() -> BlobDetectorInternals"},
	 { (char *)"BlobDetectorInternals_CalculateLabels", _wrap_BlobDetectorInternals_CalculateLabels, METH_VARARGS, (char *)"\n"
		"CalculateLabels(svlSampleImageMono8 const * image, svlSampleImageMono32 * labels) -> unsigned int\n"
		"BlobDetectorInternals_CalculateLabels(BlobDetectorInternals self, svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo * labels, \n"
		"    unsigned int const videoch) -> unsigned int\n"
		""},
	 { (char *)"BlobDetectorInternals_GetBlobs", _wrap_BlobDetectorInternals_GetBlobs, METH_VARARGS, (char *)"\n"
		"GetBlobs(svlSampleImageMono8 const * image, svlSampleImageMono32 const * labels, svlSampleBlobs * blobs, \n"
		"    unsigned int min_area, unsigned int max_area, double min_compactness, \n"
		"    double max_compactness) -> bool\n"
		"BlobDetectorInternals_GetBlobs(BlobDetectorInternals self, svlSampleImageMono8Stereo const * image, svlSampleImageMono32Stereo const * labels, \n"
		"    svlSampleBlobs * blobs, unsigned int const videoch, \n"
		"    unsigned int min_area, unsigned int max_area, double min_compactness, \n"
		"    double max_compactness) -> bool\n"
		""},
	 { (char *)"delete_BlobDetectorInternals", _wrap_delete_BlobDetectorInternals, METH_VARARGS, (char *)"delete_BlobDetectorInternals(BlobDetectorInternals self)"},
	 { (char *)"BlobDetectorInternals_swigregister", BlobDetectorInternals_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_EllipseFitterInternals", _wrap_new_EllipseFitterInternals, METH_VARARGS, (char *)"new_EllipseFitterInternals() -> EllipseFitterInternals"},
	 { (char *)"delete_EllipseFitterInternals", _wrap_delete_EllipseFitterInternals, METH_VARARGS, (char *)"delete_EllipseFitterInternals(EllipseFitterInternals self)"},
	 { (char *)"EllipseFitterInternals_swigregister", EllipseFitterInternals_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlVideoCodecCVI_ClassServices", _wrap_svlVideoCodecCVI_ClassServices, METH_VARARGS, (char *)"svlVideoCodecCVI_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"svlVideoCodecCVI_Services", _wrap_svlVideoCodecCVI_Services, METH_VARARGS, (char *)"svlVideoCodecCVI_Services(svlVideoCodecCVI self) -> cmnClassServicesBase"},
	 { (char *)"new_svlVideoCodecCVI", _wrap_new_svlVideoCodecCVI, METH_VARARGS, (char *)"new_svlVideoCodecCVI() -> svlVideoCodecCVI"},
	 { (char *)"delete_svlVideoCodecCVI", _wrap_delete_svlVideoCodecCVI, METH_VARARGS, (char *)"delete_svlVideoCodecCVI(svlVideoCodecCVI self)"},
	 { (char *)"svlVideoCodecCVI_Open", _wrap_svlVideoCodecCVI_Open, METH_VARARGS, (char *)"\n"
		"svlVideoCodecCVI_Open(svlVideoCodecCVI self, std::string const & filename, unsigned int & width, unsigned int & height, \n"
		"    double & framerate) -> int\n"
		""},
	 { (char *)"svlVideoCodecCVI_Create", _wrap_svlVideoCodecCVI_Create, METH_VARARGS, (char *)"\n"
		"svlVideoCodecCVI_Create(svlVideoCodecCVI self, std::string const & filename, unsigned int const width, unsigned int const height, \n"
		"    double const framerate) -> int\n"
		""},
	 { (char *)"svlVideoCodecCVI_Close", _wrap_svlVideoCodecCVI_Close, METH_VARARGS, (char *)"svlVideoCodecCVI_Close(svlVideoCodecCVI self) -> int"},
	 { (char *)"svlVideoCodecCVI_GetBegPos", _wrap_svlVideoCodecCVI_GetBegPos, METH_VARARGS, (char *)"svlVideoCodecCVI_GetBegPos(svlVideoCodecCVI self) -> int"},
	 { (char *)"svlVideoCodecCVI_GetEndPos", _wrap_svlVideoCodecCVI_GetEndPos, METH_VARARGS, (char *)"svlVideoCodecCVI_GetEndPos(svlVideoCodecCVI self) -> int"},
	 { (char *)"svlVideoCodecCVI_GetPos", _wrap_svlVideoCodecCVI_GetPos, METH_VARARGS, (char *)"svlVideoCodecCVI_GetPos(svlVideoCodecCVI self) -> int"},
	 { (char *)"svlVideoCodecCVI_SetPos", _wrap_svlVideoCodecCVI_SetPos, METH_VARARGS, (char *)"svlVideoCodecCVI_SetPos(svlVideoCodecCVI self, int const pos) -> int"},
	 { (char *)"svlVideoCodecCVI_GetBegTime", _wrap_svlVideoCodecCVI_GetBegTime, METH_VARARGS, (char *)"svlVideoCodecCVI_GetBegTime(svlVideoCodecCVI self) -> double"},
	 { (char *)"svlVideoCodecCVI_GetEndTime", _wrap_svlVideoCodecCVI_GetEndTime, METH_VARARGS, (char *)"svlVideoCodecCVI_GetEndTime(svlVideoCodecCVI self) -> double"},
	 { (char *)"svlVideoCodecCVI_GetTimeAtPos", _wrap_svlVideoCodecCVI_GetTimeAtPos, METH_VARARGS, (char *)"svlVideoCodecCVI_GetTimeAtPos(svlVideoCodecCVI self, int const pos) -> double"},
	 { (char *)"svlVideoCodecCVI_GetPosAtTime", _wrap_svlVideoCodecCVI_GetPosAtTime, METH_VARARGS, (char *)"svlVideoCodecCVI_GetPosAtTime(svlVideoCodecCVI self, double const time) -> int"},
	 { (char *)"svlVideoCodecCVI_GetCompression", _wrap_svlVideoCodecCVI_GetCompression, METH_VARARGS, (char *)"svlVideoCodecCVI_GetCompression(svlVideoCodecCVI self) -> svlVideoIO::Compression *"},
	 { (char *)"svlVideoCodecCVI_SetCompression", _wrap_svlVideoCodecCVI_SetCompression, METH_VARARGS, (char *)"svlVideoCodecCVI_SetCompression(svlVideoCodecCVI self, svlVideoIO::Compression const * compression) -> int"},
	 { (char *)"svlVideoCodecCVI_DialogCompression", _wrap_svlVideoCodecCVI_DialogCompression, METH_VARARGS, (char *)"svlVideoCodecCVI_DialogCompression(svlVideoCodecCVI self) -> int"},
	 { (char *)"svlVideoCodecCVI_GetTimestamp", _wrap_svlVideoCodecCVI_GetTimestamp, METH_VARARGS, (char *)"svlVideoCodecCVI_GetTimestamp(svlVideoCodecCVI self) -> double"},
	 { (char *)"svlVideoCodecCVI_SetTimestamp", _wrap_svlVideoCodecCVI_SetTimestamp, METH_VARARGS, (char *)"svlVideoCodecCVI_SetTimestamp(svlVideoCodecCVI self, double const timestamp) -> int"},
	 { (char *)"svlVideoCodecCVI_Read", _wrap_svlVideoCodecCVI_Read, METH_VARARGS, (char *)"\n"
		"Read(svlProcInfo * procInfo, svlSampleImage image, unsigned int const videoch, bool const noresize=False) -> int\n"
		"svlVideoCodecCVI_Read(svlVideoCodecCVI self, svlProcInfo * procInfo, svlSampleImage image, unsigned int const videoch) -> int\n"
		""},
	 { (char *)"svlVideoCodecCVI_Write", _wrap_svlVideoCodecCVI_Write, METH_VARARGS, (char *)"svlVideoCodecCVI_Write(svlVideoCodecCVI self, svlProcInfo * procInfo, svlSampleImage image, unsigned int const videoch) -> int"},
	 { (char *)"svlVideoCodecCVI_SetExtension", _wrap_svlVideoCodecCVI_SetExtension, METH_VARARGS, (char *)"svlVideoCodecCVI_SetExtension(svlVideoCodecCVI self, std::string const & extension)"},
	 { (char *)"svlVideoCodecCVI_SetEncoderID", _wrap_svlVideoCodecCVI_SetEncoderID, METH_VARARGS, (char *)"svlVideoCodecCVI_SetEncoderID(svlVideoCodecCVI self, int const & encoder_id)"},
	 { (char *)"svlVideoCodecCVI_SetCompressionLevel", _wrap_svlVideoCodecCVI_SetCompressionLevel, METH_VARARGS, (char *)"svlVideoCodecCVI_SetCompressionLevel(svlVideoCodecCVI self, int const & compr_level)"},
	 { (char *)"svlVideoCodecCVI_SetQualityBased", _wrap_svlVideoCodecCVI_SetQualityBased, METH_VARARGS, (char *)"svlVideoCodecCVI_SetQualityBased(svlVideoCodecCVI self, bool const & enabled)"},
	 { (char *)"svlVideoCodecCVI_SetTargetQuantizer", _wrap_svlVideoCodecCVI_SetTargetQuantizer, METH_VARARGS, (char *)"svlVideoCodecCVI_SetTargetQuantizer(svlVideoCodecCVI self, double const & target_quant)"},
	 { (char *)"svlVideoCodecCVI_SetDatarate", _wrap_svlVideoCodecCVI_SetDatarate, METH_VARARGS, (char *)"svlVideoCodecCVI_SetDatarate(svlVideoCodecCVI self, int const & datarate)"},
	 { (char *)"svlVideoCodecCVI_SetKeyFrameEvery", _wrap_svlVideoCodecCVI_SetKeyFrameEvery, METH_VARARGS, (char *)"svlVideoCodecCVI_SetKeyFrameEvery(svlVideoCodecCVI self, int const & key_every)"},
	 { (char *)"svlVideoCodecCVI_IsCompressionLevelEnabled", _wrap_svlVideoCodecCVI_IsCompressionLevelEnabled, METH_VARARGS, (char *)"svlVideoCodecCVI_IsCompressionLevelEnabled(svlVideoCodecCVI self, bool & enabled)"},
	 { (char *)"svlVideoCodecCVI_IsEncoderListEnabled", _wrap_svlVideoCodecCVI_IsEncoderListEnabled, METH_VARARGS, (char *)"svlVideoCodecCVI_IsEncoderListEnabled(svlVideoCodecCVI self, bool & enabled)"},
	 { (char *)"svlVideoCodecCVI_IsTargetQuantizerEnabled", _wrap_svlVideoCodecCVI_IsTargetQuantizerEnabled, METH_VARARGS, (char *)"svlVideoCodecCVI_IsTargetQuantizerEnabled(svlVideoCodecCVI self, bool & enabled)"},
	 { (char *)"svlVideoCodecCVI_IsDatarateEnabled", _wrap_svlVideoCodecCVI_IsDatarateEnabled, METH_VARARGS, (char *)"svlVideoCodecCVI_IsDatarateEnabled(svlVideoCodecCVI self, bool & enabled)"},
	 { (char *)"svlVideoCodecCVI_IsKeyFrameEveryEnabled", _wrap_svlVideoCodecCVI_IsKeyFrameEveryEnabled, METH_VARARGS, (char *)"svlVideoCodecCVI_IsKeyFrameEveryEnabled(svlVideoCodecCVI self, bool & enabled)"},
	 { (char *)"svlVideoCodecCVI_GetCompressionLevel", _wrap_svlVideoCodecCVI_GetCompressionLevel, METH_VARARGS, (char *)"svlVideoCodecCVI_GetCompressionLevel(svlVideoCodecCVI self, int & compr_level)"},
	 { (char *)"svlVideoCodecCVI_GetEncoderList", _wrap_svlVideoCodecCVI_GetEncoderList, METH_VARARGS, (char *)"svlVideoCodecCVI_GetEncoderList(svlVideoCodecCVI self, std::string & encoder_list)"},
	 { (char *)"svlVideoCodecCVI_GetEncoderID", _wrap_svlVideoCodecCVI_GetEncoderID, METH_VARARGS, (char *)"svlVideoCodecCVI_GetEncoderID(svlVideoCodecCVI self, int & encoder_id)"},
	 { (char *)"svlVideoCodecCVI_GetQualityBased", _wrap_svlVideoCodecCVI_GetQualityBased, METH_VARARGS, (char *)"svlVideoCodecCVI_GetQualityBased(svlVideoCodecCVI self, bool & enabled)"},
	 { (char *)"svlVideoCodecCVI_GetTargetQuantizer", _wrap_svlVideoCodecCVI_GetTargetQuantizer, METH_VARARGS, (char *)"svlVideoCodecCVI_GetTargetQuantizer(svlVideoCodecCVI self, double & target_quant)"},
	 { (char *)"svlVideoCodecCVI_GetDatarate", _wrap_svlVideoCodecCVI_GetDatarate, METH_VARARGS, (char *)"svlVideoCodecCVI_GetDatarate(svlVideoCodecCVI self, int & datarate)"},
	 { (char *)"svlVideoCodecCVI_GetKeyFrameEvery", _wrap_svlVideoCodecCVI_GetKeyFrameEvery, METH_VARARGS, (char *)"svlVideoCodecCVI_GetKeyFrameEvery(svlVideoCodecCVI self, int & key_every)"},
	 { (char *)"svlVideoCodecCVI_ReadPython", _wrap_svlVideoCodecCVI_ReadPython, METH_VARARGS, (char *)"svlVideoCodecCVI_ReadPython(svlVideoCodecCVI self, svlSampleImage image, unsigned int const videoch, bool const noresize) -> int"},
	 { (char *)"svlVideoCodecCVI_swigregister", svlVideoCodecCVI_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterImageWindow_ClassServices", _wrap_svlFilterImageWindow_ClassServices, METH_VARARGS, (char *)"svlFilterImageWindow_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterImageWindow", _wrap_new_svlFilterImageWindow, METH_VARARGS, (char *)"new_svlFilterImageWindow() -> svlFilterImageWindow"},
	 { (char *)"delete_svlFilterImageWindow", _wrap_delete_svlFilterImageWindow, METH_VARARGS, (char *)"delete_svlFilterImageWindow(svlFilterImageWindow self)"},
	 { (char *)"svlFilterImageWindow_SetPosition", _wrap_svlFilterImageWindow_SetPosition, METH_VARARGS, (char *)"\n"
		"SetPosition(int const x, int const y, unsigned int const videoch=SVL_LEFT) -> int\n"
		"svlFilterImageWindow_SetPosition(svlFilterImageWindow self, int const x, int const y) -> int\n"
		""},
	 { (char *)"svlFilterImageWindow_GetPosition", _wrap_svlFilterImageWindow_GetPosition, METH_VARARGS, (char *)"\n"
		"GetPosition(int & x, int & y, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterImageWindow_GetPosition(svlFilterImageWindow self, int & x, int & y) -> int\n"
		""},
	 { (char *)"svlFilterImageWindow_SetEventHandler", _wrap_svlFilterImageWindow_SetEventHandler, METH_VARARGS, (char *)"svlFilterImageWindow_SetEventHandler(svlFilterImageWindow self, svlWindowEventHandlerBase * handler)"},
	 { (char *)"svlFilterImageWindow_SetFullScreen", _wrap_svlFilterImageWindow_SetFullScreen, METH_VARARGS, (char *)"svlFilterImageWindow_SetFullScreen(svlFilterImageWindow self, bool const & fullscreen)"},
	 { (char *)"svlFilterImageWindow_SetTitle", _wrap_svlFilterImageWindow_SetTitle, METH_VARARGS, (char *)"svlFilterImageWindow_SetTitle(svlFilterImageWindow self, std::string const & title)"},
	 { (char *)"svlFilterImageWindow_GetIsVisible", _wrap_svlFilterImageWindow_GetIsVisible, METH_VARARGS, (char *)"svlFilterImageWindow_GetIsVisible(svlFilterImageWindow self, bool & show)"},
	 { (char *)"svlFilterImageWindow_GetFullScreen", _wrap_svlFilterImageWindow_GetFullScreen, METH_VARARGS, (char *)"svlFilterImageWindow_GetFullScreen(svlFilterImageWindow self, bool & fullscreen)"},
	 { (char *)"svlFilterImageWindow_GetTitle", _wrap_svlFilterImageWindow_GetTitle, METH_VARARGS, (char *)"svlFilterImageWindow_GetTitle(svlFilterImageWindow self, std::string & title)"},
	 { (char *)"svlFilterImageWindow_Show", _wrap_svlFilterImageWindow_Show, METH_VARARGS, (char *)"\n"
		"Show(unsigned int videoch=SVL_LEFT)\n"
		"svlFilterImageWindow_Show(svlFilterImageWindow self)\n"
		""},
	 { (char *)"svlFilterImageWindow_Hide", _wrap_svlFilterImageWindow_Hide, METH_VARARGS, (char *)"\n"
		"Hide(unsigned int videoch=SVL_LEFT)\n"
		"svlFilterImageWindow_Hide(svlFilterImageWindow self)\n"
		""},
	 { (char *)"svlFilterImageWindow_swigregister", svlFilterImageWindow_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_ClassServices", _wrap_svlFilterImageCameraCalibrationOpenCV_ClassServices, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterImageCameraCalibrationOpenCV", _wrap_new_svlFilterImageCameraCalibrationOpenCV, METH_VARARGS, (char *)"new_svlFilterImageCameraCalibrationOpenCV() -> svlFilterImageCameraCalibrationOpenCV"},
	 { (char *)"delete_svlFilterImageCameraCalibrationOpenCV", _wrap_delete_svlFilterImageCameraCalibrationOpenCV, METH_VARARGS, (char *)"delete_svlFilterImageCameraCalibrationOpenCV(svlFilterImageCameraCalibrationOpenCV self)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_ProcessImages", _wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImages, METH_VARARGS, (char *)"\n"
		"ProcessImages(std::string imageDirectory, std::string imagePrefix, std::string imageType, int startIndex, \n"
		"    int stopIndex, bool loadOrigins=False) -> bool\n"
		"svlFilterImageCameraCalibrationOpenCV_ProcessImages(svlFilterImageCameraCalibrationOpenCV self, std::string imageDirectory, std::string imagePrefix, \n"
		"    std::string imageType, int startIndex, int stopIndex) -> bool\n"
		""},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_ProcessImage", _wrap_svlFilterImageCameraCalibrationOpenCV_ProcessImage, METH_VARARGS, (char *)"\n"
		"ProcessImage(std::string imageDirectory, std::string imagePrefix, std::string imageType, int index, \n"
		"    vctDynamicVector< vctInt2 > originIndicators=vctDynamicVector< vctInt2 >()) -> bool\n"
		"svlFilterImageCameraCalibrationOpenCV_ProcessImage(svlFilterImageCameraCalibrationOpenCV self, std::string imageDirectory, std::string imagePrefix, \n"
		"    std::string imageType, int index) -> bool\n"
		""},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_Reset", _wrap_svlFilterImageCameraCalibrationOpenCV_Reset, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_Reset(svlFilterImageCameraCalibrationOpenCV self)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration", _wrap_svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_RunCameraCalibration(svlFilterImageCameraCalibrationOpenCV self, bool runHandEye) -> bool"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_SetBoardSize", _wrap_svlFilterImageCameraCalibrationOpenCV_SetBoardSize, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_SetBoardSize(svlFilterImageCameraCalibrationOpenCV self, int width, int height)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_SetSquareSize", _wrap_svlFilterImageCameraCalibrationOpenCV_SetSquareSize, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_SetSquareSize(svlFilterImageCameraCalibrationOpenCV self, float size)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_GetImages", _wrap_svlFilterImageCameraCalibrationOpenCV_GetImages, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_GetImages(svlFilterImageCameraCalibrationOpenCV self) -> std::vector< svlSampleImageRGB,std::allocator< svlSampleImageRGB > >"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry", _wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry, METH_VARARGS, (char *)"\n"
		"GetCameraGeometry(int index=-1) -> svlSampleCameraGeometry\n"
		"svlFilterImageCameraCalibrationOpenCV_GetCameraGeometry(svlFilterImageCameraCalibrationOpenCV self) -> svlSampleCameraGeometry *\n"
		""},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry", _wrap_svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_SetCameraGeometry(svlFilterImageCameraCalibrationOpenCV self, vct2 f, vct2 c, double alpha, vctFixedSizeVector< double,7 > k)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_PrintCalibrationParameters", _wrap_svlFilterImageCameraCalibrationOpenCV_PrintCalibrationParameters, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_PrintCalibrationParameters(svlFilterImageCameraCalibrationOpenCV self)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters", _wrap_svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_WriteToFileCalibrationParameters(svlFilterImageCameraCalibrationOpenCV self, std::string directory)"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_GetCameraCalibrationReprojectionError", _wrap_svlFilterImageCameraCalibrationOpenCV_GetCameraCalibrationReprojectionError, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_GetCameraCalibrationReprojectionError(svlFilterImageCameraCalibrationOpenCV self) -> double"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_GetHandEyeCalibrationError", _wrap_svlFilterImageCameraCalibrationOpenCV_GetHandEyeCalibrationError, METH_VARARGS, (char *)"svlFilterImageCameraCalibrationOpenCV_GetHandEyeCalibrationError(svlFilterImageCameraCalibrationOpenCV self) -> double"},
	 { (char *)"svlFilterImageCameraCalibrationOpenCV_swigregister", svlFilterImageCameraCalibrationOpenCV_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterSourceVideoCapture_ClassServices", _wrap_svlFilterSourceVideoCapture_ClassServices, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterSourceVideoCapture", _wrap_new_svlFilterSourceVideoCapture, METH_VARARGS, (char *)"\n"
		"svlFilterSourceVideoCapture()\n"
		"new_svlFilterSourceVideoCapture(unsigned int channelcount) -> svlFilterSourceVideoCapture\n"
		""},
	 { (char *)"delete_svlFilterSourceVideoCapture", _wrap_delete_svlFilterSourceVideoCapture, METH_VARARGS, (char *)"delete_svlFilterSourceVideoCapture(svlFilterSourceVideoCapture self)"},
	 { (char *)"svlFilterSourceVideoCapture_EnumerateDevices", _wrap_svlFilterSourceVideoCapture_EnumerateDevices, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_EnumerateDevices(svlFilterSourceVideoCapture self) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_SetChannelCount", _wrap_svlFilterSourceVideoCapture_SetChannelCount, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_SetChannelCount(svlFilterSourceVideoCapture self, unsigned int channelcount) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_DialogSetup", _wrap_svlFilterSourceVideoCapture_DialogSetup, METH_VARARGS, (char *)"\n"
		"DialogSetup(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_DialogSetup(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_DialogDevice", _wrap_svlFilterSourceVideoCapture_DialogDevice, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_DialogDevice(svlFilterSourceVideoCapture self) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_DialogInput", _wrap_svlFilterSourceVideoCapture_DialogInput, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_DialogInput(svlFilterSourceVideoCapture self, unsigned int deviceid) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_DialogFormat", _wrap_svlFilterSourceVideoCapture_DialogFormat, METH_VARARGS, (char *)"\n"
		"DialogFormat(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_DialogFormat(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_DialogTrigger", _wrap_svlFilterSourceVideoCapture_DialogTrigger, METH_VARARGS, (char *)"\n"
		"DialogTrigger(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_DialogTrigger(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_DialogImageProperties", _wrap_svlFilterSourceVideoCapture_DialogImageProperties, METH_VARARGS, (char *)"\n"
		"DialogImageProperties(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_DialogImageProperties(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetDeviceList", _wrap_svlFilterSourceVideoCapture_GetDeviceList, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_GetDeviceList(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::DeviceInfo ** deviceinfolist) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_ReleaseDeviceList", _wrap_svlFilterSourceVideoCapture_ReleaseDeviceList, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_ReleaseDeviceList(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::DeviceInfo * deviceinfolist)"},
	 { (char *)"svlFilterSourceVideoCapture_PrintDeviceList", _wrap_svlFilterSourceVideoCapture_PrintDeviceList, METH_VARARGS, (char *)"\n"
		"PrintDeviceList(bool update=False) -> int\n"
		"svlFilterSourceVideoCapture_PrintDeviceList(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_PrintInputList", _wrap_svlFilterSourceVideoCapture_PrintInputList, METH_VARARGS, (char *)"\n"
		"PrintInputList(int deviceid, bool update=False) -> int\n"
		"svlFilterSourceVideoCapture_PrintInputList(svlFilterSourceVideoCapture self, int deviceid) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_SetDevice", _wrap_svlFilterSourceVideoCapture_SetDevice, METH_VARARGS, (char *)"\n"
		"SetDevice(int deviceid, int inputid=0, unsigned int videoch=SVL_LEFT) -> int\n"
		"SetDevice(int deviceid, int inputid=0) -> int\n"
		"svlFilterSourceVideoCapture_SetDevice(svlFilterSourceVideoCapture self, int deviceid) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetDevice", _wrap_svlFilterSourceVideoCapture_GetDevice, METH_VARARGS, (char *)"\n"
		"GetDevice(int & deviceid, int & inputid, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_GetDevice(svlFilterSourceVideoCapture self, int & deviceid, int & inputid) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetFormatList", _wrap_svlFilterSourceVideoCapture_GetFormatList, METH_VARARGS, (char *)"\n"
		"GetFormatList(svlFilterSourceVideoCapture::ImageFormat ** formatlist, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_GetFormatList(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ImageFormat ** formatlist) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_ReleaseFormatList", _wrap_svlFilterSourceVideoCapture_ReleaseFormatList, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_ReleaseFormatList(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ImageFormat * formatlist)"},
	 { (char *)"svlFilterSourceVideoCapture_PrintFormatList", _wrap_svlFilterSourceVideoCapture_PrintFormatList, METH_VARARGS, (char *)"\n"
		"PrintFormatList(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_PrintFormatList(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_SelectFormat", _wrap_svlFilterSourceVideoCapture_SelectFormat, METH_VARARGS, (char *)"\n"
		"SelectFormat(unsigned int formatid, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_SelectFormat(svlFilterSourceVideoCapture self, unsigned int formatid) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_SetFormat", _wrap_svlFilterSourceVideoCapture_SetFormat, METH_VARARGS, (char *)"\n"
		"SetFormat(svlFilterSourceVideoCapture::ImageFormat const & format, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_SetFormat(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ImageFormat const & format) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetFormat", _wrap_svlFilterSourceVideoCapture_GetFormat, METH_VARARGS, (char *)"\n"
		"GetFormat(svlFilterSourceVideoCapture::ImageFormat & format, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_GetFormat(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ImageFormat & format) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_SetTrigger", _wrap_svlFilterSourceVideoCapture_SetTrigger, METH_VARARGS, (char *)"\n"
		"SetTrigger(svlFilterSourceVideoCapture::ExternalTrigger const & trigger, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_SetTrigger(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ExternalTrigger const & trigger) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetTrigger", _wrap_svlFilterSourceVideoCapture_GetTrigger, METH_VARARGS, (char *)"\n"
		"GetTrigger(svlFilterSourceVideoCapture::ExternalTrigger & trigger, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_GetTrigger(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ExternalTrigger & trigger) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_SetImageProperties", _wrap_svlFilterSourceVideoCapture_SetImageProperties, METH_VARARGS, (char *)"\n"
		"SetImageProperties(svlFilterSourceVideoCapture::ImageProperties const & properties, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_SetImageProperties(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ImageProperties const & properties) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetImageProperties", _wrap_svlFilterSourceVideoCapture_GetImageProperties, METH_VARARGS, (char *)"\n"
		"GetImageProperties(svlFilterSourceVideoCapture::ImageProperties & properties, unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_GetImageProperties(svlFilterSourceVideoCapture self, svlFilterSourceVideoCapture::ImageProperties & properties) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetPixelTypeName", _wrap_svlFilterSourceVideoCapture_GetPixelTypeName, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_GetPixelTypeName(svlFilterSourceVideoCapture::PixelType pixeltype) -> std::string"},
	 { (char *)"svlFilterSourceVideoCapture_GetPatternTypeName", _wrap_svlFilterSourceVideoCapture_GetPatternTypeName, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_GetPatternTypeName(svlFilterSourceVideoCapture::PatternType patterntype) -> std::string"},
	 { (char *)"svlFilterSourceVideoCapture_GetWidth", _wrap_svlFilterSourceVideoCapture_GetWidth, METH_VARARGS, (char *)"\n"
		"GetWidth(unsigned int videoch=SVL_LEFT) -> unsigned int\n"
		"svlFilterSourceVideoCapture_GetWidth(svlFilterSourceVideoCapture self) -> unsigned int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_GetHeight", _wrap_svlFilterSourceVideoCapture_GetHeight, METH_VARARGS, (char *)"\n"
		"GetHeight(unsigned int videoch=SVL_LEFT) -> unsigned int\n"
		"svlFilterSourceVideoCapture_GetHeight(svlFilterSourceVideoCapture self) -> unsigned int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_SaveSettings", _wrap_svlFilterSourceVideoCapture_SaveSettings, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_SaveSettings(svlFilterSourceVideoCapture self, char const * filepath) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_LoadSettings", _wrap_svlFilterSourceVideoCapture_LoadSettings, METH_VARARGS, (char *)"svlFilterSourceVideoCapture_LoadSettings(svlFilterSourceVideoCapture self, char const * filepath) -> int"},
	 { (char *)"svlFilterSourceVideoCapture_SetDefaultSettings", _wrap_svlFilterSourceVideoCapture_SetDefaultSettings, METH_VARARGS, (char *)"\n"
		"SetDefaultSettings(unsigned int videoch=SVL_LEFT) -> int\n"
		"svlFilterSourceVideoCapture_SetDefaultSettings(svlFilterSourceVideoCapture self) -> int\n"
		""},
	 { (char *)"svlFilterSourceVideoCapture_swigregister", svlFilterSourceVideoCapture_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlVidCapSrcBase_ClassServices", _wrap_svlVidCapSrcBase_ClassServices, METH_VARARGS, (char *)"svlVidCapSrcBase_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"delete_svlVidCapSrcBase", _wrap_delete_svlVidCapSrcBase, METH_VARARGS, (char *)"delete_svlVidCapSrcBase(svlVidCapSrcBase self)"},
	 { (char *)"svlVidCapSrcBase_GetPlatformType", _wrap_svlVidCapSrcBase_GetPlatformType, METH_VARARGS, (char *)"svlVidCapSrcBase_GetPlatformType(svlVidCapSrcBase self) -> svlFilterSourceVideoCapture::PlatformType"},
	 { (char *)"svlVidCapSrcBase_SetStreamCount", _wrap_svlVidCapSrcBase_SetStreamCount, METH_VARARGS, (char *)"svlVidCapSrcBase_SetStreamCount(svlVidCapSrcBase self, unsigned int numofstreams) -> int"},
	 { (char *)"svlVidCapSrcBase_GetDeviceList", _wrap_svlVidCapSrcBase_GetDeviceList, METH_VARARGS, (char *)"svlVidCapSrcBase_GetDeviceList(svlVidCapSrcBase self, svlFilterSourceVideoCapture::DeviceInfo ** deviceinfo) -> int"},
	 { (char *)"svlVidCapSrcBase_Open", _wrap_svlVidCapSrcBase_Open, METH_VARARGS, (char *)"svlVidCapSrcBase_Open(svlVidCapSrcBase self) -> int"},
	 { (char *)"svlVidCapSrcBase_Close", _wrap_svlVidCapSrcBase_Close, METH_VARARGS, (char *)"svlVidCapSrcBase_Close(svlVidCapSrcBase self)"},
	 { (char *)"svlVidCapSrcBase_Start", _wrap_svlVidCapSrcBase_Start, METH_VARARGS, (char *)"svlVidCapSrcBase_Start(svlVidCapSrcBase self) -> int"},
	 { (char *)"svlVidCapSrcBase_GetLatestFrame", _wrap_svlVidCapSrcBase_GetLatestFrame, METH_VARARGS, (char *)"\n"
		"GetLatestFrame(bool waitfornew, unsigned int videoch=0) -> svlImageRGB\n"
		"svlVidCapSrcBase_GetLatestFrame(svlVidCapSrcBase self, bool waitfornew) -> svlImageRGB *\n"
		""},
	 { (char *)"svlVidCapSrcBase_Stop", _wrap_svlVidCapSrcBase_Stop, METH_VARARGS, (char *)"svlVidCapSrcBase_Stop(svlVidCapSrcBase self) -> int"},
	 { (char *)"svlVidCapSrcBase_IsRunning", _wrap_svlVidCapSrcBase_IsRunning, METH_VARARGS, (char *)"svlVidCapSrcBase_IsRunning(svlVidCapSrcBase self) -> bool"},
	 { (char *)"svlVidCapSrcBase_SetDevice", _wrap_svlVidCapSrcBase_SetDevice, METH_VARARGS, (char *)"\n"
		"SetDevice(int devid, int inid, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_SetDevice(svlVidCapSrcBase self, int devid, int inid) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_GetWidth", _wrap_svlVidCapSrcBase_GetWidth, METH_VARARGS, (char *)"\n"
		"GetWidth(unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_GetWidth(svlVidCapSrcBase self) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_GetHeight", _wrap_svlVidCapSrcBase_GetHeight, METH_VARARGS, (char *)"\n"
		"GetHeight(unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_GetHeight(svlVidCapSrcBase self) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_GetFormatList", _wrap_svlVidCapSrcBase_GetFormatList, METH_VARARGS, (char *)"svlVidCapSrcBase_GetFormatList(svlVidCapSrcBase self, unsigned int deviceid, svlFilterSourceVideoCapture::ImageFormat ** formatlist) -> int"},
	 { (char *)"svlVidCapSrcBase_SetFormat", _wrap_svlVidCapSrcBase_SetFormat, METH_VARARGS, (char *)"\n"
		"SetFormat(svlFilterSourceVideoCapture::ImageFormat & format, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_SetFormat(svlVidCapSrcBase self, svlFilterSourceVideoCapture::ImageFormat & format) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_GetFormat", _wrap_svlVidCapSrcBase_GetFormat, METH_VARARGS, (char *)"\n"
		"GetFormat(svlFilterSourceVideoCapture::ImageFormat & format, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_GetFormat(svlVidCapSrcBase self, svlFilterSourceVideoCapture::ImageFormat & format) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_SetImageProperties", _wrap_svlVidCapSrcBase_SetImageProperties, METH_VARARGS, (char *)"\n"
		"SetImageProperties(svlFilterSourceVideoCapture::ImageProperties & properties, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_SetImageProperties(svlVidCapSrcBase self, svlFilterSourceVideoCapture::ImageProperties & properties) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_GetImageProperties", _wrap_svlVidCapSrcBase_GetImageProperties, METH_VARARGS, (char *)"\n"
		"GetImageProperties(svlFilterSourceVideoCapture::ImageProperties & properties, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_GetImageProperties(svlVidCapSrcBase self, svlFilterSourceVideoCapture::ImageProperties & properties) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_SetTrigger", _wrap_svlVidCapSrcBase_SetTrigger, METH_VARARGS, (char *)"\n"
		"SetTrigger(svlFilterSourceVideoCapture::ExternalTrigger & trigger, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_SetTrigger(svlVidCapSrcBase self, svlFilterSourceVideoCapture::ExternalTrigger & trigger) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_GetTrigger", _wrap_svlVidCapSrcBase_GetTrigger, METH_VARARGS, (char *)"\n"
		"GetTrigger(svlFilterSourceVideoCapture::ExternalTrigger & trigger, unsigned int videoch=0) -> int\n"
		"svlVidCapSrcBase_GetTrigger(svlVidCapSrcBase self, svlFilterSourceVideoCapture::ExternalTrigger & trigger) -> int\n"
		""},
	 { (char *)"svlVidCapSrcBase_swigregister", svlVidCapSrcBase_swigregister, METH_VARARGS, NULL},
	 { (char *)"new_svlVidCapSrcDialogThread", _wrap_new_svlVidCapSrcDialogThread, METH_VARARGS, (char *)"new_svlVidCapSrcDialogThread(unsigned int videoch) -> svlVidCapSrcDialogThread"},
	 { (char *)"delete_svlVidCapSrcDialogThread", _wrap_delete_svlVidCapSrcDialogThread, METH_VARARGS, (char *)"delete_svlVidCapSrcDialogThread(svlVidCapSrcDialogThread self)"},
	 { (char *)"svlVidCapSrcDialogThread_Proc", _wrap_svlVidCapSrcDialogThread_Proc, METH_VARARGS, (char *)"svlVidCapSrcDialogThread_Proc(svlVidCapSrcDialogThread self, svlFilterSourceVideoCapture baseref) -> void *"},
	 { (char *)"svlVidCapSrcDialogThread_WaitForInit", _wrap_svlVidCapSrcDialogThread_WaitForInit, METH_VARARGS, (char *)"svlVidCapSrcDialogThread_WaitForInit(svlVidCapSrcDialogThread self) -> bool"},
	 { (char *)"svlVidCapSrcDialogThread_Kill", _wrap_svlVidCapSrcDialogThread_Kill, METH_VARARGS, (char *)"svlVidCapSrcDialogThread_Kill(svlVidCapSrcDialogThread self)"},
	 { (char *)"svlVidCapSrcDialogThread_swigregister", svlVidCapSrcDialogThread_swigregister, METH_VARARGS, NULL},
	 { (char *)"svlFilterOutput_ClassServices", _wrap_svlFilterOutput_ClassServices, METH_VARARGS, (char *)"svlFilterOutput_ClassServices() -> cmnClassServicesBase"},
	 { (char *)"svlFilterOutput_Services", _wrap_svlFilterOutput_Services, METH_VARARGS, (char *)"svlFilterOutput_Services(svlFilterOutput self) -> cmnClassServicesBase"},
	 { (char *)"new_svlFilterOutput", _wrap_new_svlFilterOutput, METH_VARARGS, (char *)"new_svlFilterOutput(svlFilterBase owner, bool trunk, std::string const & name) -> svlFilterOutput"},
	 { (char *)"delete_svlFilterOutput", _wrap_delete_svlFilterOutput, METH_VARARGS, (char *)"delete_svlFilterOutput(svlFilterOutput self)"},
	 { (char *)"svlFilterOutput_IsTrunk", _wrap_svlFilterOutput_IsTrunk, METH_VARARGS, (char *)"svlFilterOutput_IsTrunk(svlFilterOutput self) -> bool"},
	 { (char *)"svlFilterOutput_GetType", _wrap_svlFilterOutput_GetType, METH_VARARGS, (char *)"svlFilterOutput_GetType(svlFilterOutput self) -> svlStreamType"},
	 { (char *)"svlFilterOutput_GetFilter", _wrap_svlFilterOutput_GetFilter, METH_VARARGS, (char *)"svlFilterOutput_GetFilter(svlFilterOutput self) -> svlFilterBase"},
	 { (char *)"svlFilterOutput_GetConnectedFilter", _wrap_svlFilterOutput_GetConnectedFilter, METH_VARARGS, (char *)"svlFilterOutput_GetConnectedFilter(svlFilterOutput self) -> svlFilterBase"},
	 { (char *)"svlFilterOutput_SetType", _wrap_svlFilterOutput_SetType, METH_VARARGS, (char *)"svlFilterOutput_SetType(svlFilterOutput self, svlStreamType type) -> int"},
	 { (char *)"svlFilterOutput_IsConnected", _wrap_svlFilterOutput_IsConnected, METH_VARARGS, (char *)"svlFilterOutput_IsConnected(svlFilterOutput self) -> bool"},
	 { (char *)"svlFilterOutput_GetConnection", _wrap_svlFilterOutput_GetConnection, METH_VARARGS, (char *)"svlFilterOutput_GetConnection(svlFilterOutput self) -> svlFilterInput *"},
	 { (char *)"svlFilterOutput_GetDroppedSampleCount", _wrap_svlFilterOutput_GetDroppedSampleCount, METH_VARARGS, (char *)"svlFilterOutput_GetDroppedSampleCount(svlFilterOutput self) -> int"},
	 { (char *)"svlFilterOutput_GetBufferUsage", _wrap_svlFilterOutput_GetBufferUsage, METH_VARARGS, (char *)"svlFilterOutput_GetBufferUsage(svlFilterOutput self) -> int"},
	 { (char *)"svlFilterOutput_GetBufferUsageRatio", _wrap_svlFilterOutput_GetBufferUsageRatio, METH_VARARGS, (char *)"svlFilterOutput_GetBufferUsageRatio(svlFilterOutput self) -> double"},
	 { (char *)"svlFilterOutput_SetThreadCount", _wrap_svlFilterOutput_SetThreadCount, METH_VARARGS, (char *)"svlFilterOutput_SetThreadCount(svlFilterOutput self, unsigned int threadcount) -> int"},
	 { (char *)"svlFilterOutput_SetBufferSize", _wrap_svlFilterOutput_SetBufferSize, METH_VARARGS, (char *)"svlFilterOutput_SetBufferSize(svlFilterOutput self, unsigned int buffersize) -> int"},
	 { (char *)"svlFilterOutput_SetBlock", _wrap_svlFilterOutput_SetBlock, METH_VARARGS, (char *)"svlFilterOutput_SetBlock(svlFilterOutput self, bool block) -> int"},
	 { (char *)"svlFilterOutput_ConnectInternal", _wrap_svlFilterOutput_ConnectInternal, METH_VARARGS, (char *)"svlFilterOutput_ConnectInternal(svlFilterOutput self, svlFilterInput * input) -> int"},
	 { (char *)"svlFilterOutput_Connect", _wrap_svlFilterOutput_Connect, METH_VARARGS, (char *)"svlFilterOutput_Connect(svlFilterOutput self, svlFilterInput * input) -> int"},
	 { (char *)"svlFilterOutput_Disconnect", _wrap_svlFilterOutput_Disconnect, METH_VARARGS, (char *)"svlFilterOutput_Disconnect(svlFilterOutput self) -> int"},
	 { (char *)"svlFilterOutput_SetupSample", _wrap_svlFilterOutput_SetupSample, METH_VARARGS, (char *)"svlFilterOutput_SetupSample(svlFilterOutput self, svlSample * sample)"},
	 { (char *)"svlFilterOutput_PushSample", _wrap_svlFilterOutput_PushSample, METH_VARARGS, (char *)"svlFilterOutput_PushSample(svlFilterOutput self, svlSample const * sample)"},
	 { (char *)"svlFilterOutput_GetTimestamp", _wrap_svlFilterOutput_GetTimestamp, METH_VARARGS, (char *)"svlFilterOutput_GetTimestamp(svlFilterOutput self) -> double"},
	 { (char *)"svlFilterOutput_swigregister", svlFilterOutput_swigregister, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_svlImageProcessingHelper__RectificationInternalsTo_p_svlImageProcessingInternals(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlImageProcessingInternals *)  ((svlImageProcessingHelper::RectificationInternals *) x));
}
static void *_p_svlImageProcessingHelper__ExposureInternalsTo_p_svlImageProcessingInternals(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlImageProcessingInternals *)  ((svlImageProcessingHelper::ExposureInternals *) x));
}
static void *_p_svlImageProcessingHelper__BlobDetectorInternalsTo_p_svlImageProcessingInternals(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlImageProcessingInternals *)  ((svlImageProcessingHelper::BlobDetectorInternals *) x));
}
static void *_p_svlImageProcessingHelper__EllipseFitterInternalsTo_p_svlImageProcessingInternals(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlImageProcessingInternals *)  ((svlImageProcessingHelper::EllipseFitterInternals *) x));
}
static void *_p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctMatRot3 > *) ((mtsGenericObjectProxy< vctMatrixRotation3< double,VCT_ROW_MAJOR > > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt2 > *) ((mtsGenericObjectProxy< vctInt2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_mtsComponentState_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< mtsComponentState > *) ((mtsGenericObjectProxy< mtsComponentState > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_mtsComponentState_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< mtsComponentState > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt2 > *) ((mtsGenericObjectProxy< vctUInt2 > *) x));
}
static void *_p_svlFilterSourceVideoCaptureTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *)(svlFilterSourceBase *) ((svlFilterSourceVideoCapture *) x));
}
static void *_p_mtsVectorT_bool_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< bool > *) x));
}
static void *_p_mtsGenericObjectProxyT_bool_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< bool > *) ((mtsGenericObjectProxy< bool > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_bool_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< bool > *) x));
}
static void *_p_cmnGenericObjectProxyT_bool_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< bool > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar9 > *) ((mtsGenericObjectProxy< vctUChar9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar9 > *) ((mtsGenericObjectProxy< vctChar9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool9 > *) ((mtsGenericObjectProxy< vctBool9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< mtsInterfaceProvidedDescription > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct4 > *) ((mtsGenericObjectProxy< vct4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong8 > *) ((mtsGenericObjectProxy< vctLong8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong8 > *) ((mtsGenericObjectProxy< vctULong8 > *) x));
}
static void *_p_svlVidCapSrcBaseTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((svlVidCapSrcBase *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort2 > *) ((mtsGenericObjectProxy< vctUShort2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort2 > *) ((mtsGenericObjectProxy< vctShort2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat6 > *) ((mtsGenericObjectProxy< vctFloat6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt3 > *) ((mtsGenericObjectProxy< vctInt3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt3 > *) ((mtsGenericObjectProxy< vctUInt3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUCharVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUCharVec > *) ((mtsGenericObjectProxy< vctUCharVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUCharVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUCharVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctCharVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctCharVec > *) ((mtsGenericObjectProxy< vctCharVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctCharVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctCharVec > *) x));
}
static void *_p_mtsFloatQuatTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatQuat *) x));
}
static void *_p_mtsGenericObjectProxyT_vct5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct5 > *) ((mtsGenericObjectProxy< vct5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong9 > *) ((mtsGenericObjectProxy< vctLong9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong9 > *) ((mtsGenericObjectProxy< vctULong9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULongVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULongVec > *) ((mtsGenericObjectProxy< vctULongVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULongVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULongVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLongVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLongVec > *) ((mtsGenericObjectProxy< vctLongVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLongVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLongVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort3 > *) ((mtsGenericObjectProxy< vctUShort3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort3 > *) ((mtsGenericObjectProxy< vctShort3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort3 > *) x));
}
static void *_p_mtsInterfaceTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((mtsInterface *) x));
}
static void *_p_mtsManagerLocalInterfaceTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((mtsManagerLocalInterface *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat7 > *) ((mtsGenericObjectProxy< vctFloat7 > *) x));
}
static void *_p_svlFilterSourceVideoFileTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *)(svlFilterSourceBase *) ((svlFilterSourceVideoFile *) x));
}
static void *_p_mtsGenericObjectTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((mtsGenericObject *) x));
}
static void *_p_mtsMatrixT_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsMatrix< short > *) x));
}
static void *_p_mtsVectorT_unsigned_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< unsigned short > *) x));
}
static void *_p_mtsVectorT_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< short > *) x));
}
static void *_p_mtsGenericObjectProxyT_unsigned_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< unsigned short > *) ((mtsGenericObjectProxy< unsigned short > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_unsigned_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< unsigned short > *) x));
}
static void *_p_mtsGenericObjectProxyT_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< short > *) ((mtsGenericObjectProxy< short > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< short > *) x));
}
static void *_p_cmnGenericObjectProxyT_unsigned_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< unsigned short > *) x));
}
static void *_p_cmnGenericObjectProxyT_short_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< short > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt4 > *) ((mtsGenericObjectProxy< vctInt4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt4 > *) ((mtsGenericObjectProxy< vctUInt4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt4 > *) x));
}
static void *_p_mtsVectorT_unsigned_char_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< unsigned char > *) x));
}
static void *_p_mtsVectorT_char_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< char > *) x));
}
static void *_p_mtsDoubleMatRot2To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleMatRot2 *) x));
}
static void *_p_mtsFloatMatRot2To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatMatRot2 *) x));
}
static void *_p_mtsDoubleQuatRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleQuatRot3 *) x));
}
static void *_p_mtsFloatQuatRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatQuatRot3 *) x));
}
static void *_p_mtsDoubleMatRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleMatRot3 *) x));
}
static void *_p_mtsFloatMatRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatMatRot3 *) x));
}
static void *_p_mtsTaskMainTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(mtsTask *)(mtsTaskContinuous *) ((mtsTaskMain *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFrm3 > *) ((mtsGenericObjectProxy< vctFrameBase< vctMatrixRotation3< double,VCT_ROW_MAJOR > > > *) x));
}
static void *_p_mtsTaskContinuousTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(mtsTask *) ((mtsTaskContinuous *) x));
}
static void *_p_mtsGenericObjectProxyT_vct6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct6 > *) ((mtsGenericObjectProxy< vct6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFrameBase< vctMatrixRotation3< double,VCT_ROW_MAJOR > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort4 > *) ((mtsGenericObjectProxy< vctUShort4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort4 > *) ((mtsGenericObjectProxy< vctShort4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< std::vector< std::string,std::allocator< std::string > > > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat8 > *) ((mtsGenericObjectProxy< vctFloat8 > *) x));
}
static void *_p_svlFilterSourceBaseTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterSourceBase *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< std::vector< double,std::allocator< double > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar1 > *) ((mtsGenericObjectProxy< vctUChar1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar1 > *) ((mtsGenericObjectProxy< vctChar1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar1 > *) x));
}
static void *_p_osaTimeServerTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((osaTimeServer *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool1 > *) ((mtsGenericObjectProxy< vctBool1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool1 > *) x));
}
static void *_p_mtsTaskTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *) ((mtsTask *) x));
}
static void *_p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< mtsInterfaceRequiredDescription > *) ((mtsGenericObjectProxy< mtsInterfaceRequiredDescription > *) x));
}
static void *_p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< mtsInterfaceProvidedDescription > *) ((mtsGenericObjectProxy< mtsInterfaceProvidedDescription > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< std::vector< mtsDescriptionComponentClass,std::allocator< mtsDescriptionComponentClass > > > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< std::vector< mtsDescriptionConnection,std::allocator< mtsDescriptionConnection > > > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt5 > *) ((mtsGenericObjectProxy< vctInt5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt5 > *) ((mtsGenericObjectProxy< vctUInt5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt5 > *) x));
}
static void *_p_mtsInterfaceProvidedTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsInterface *) ((mtsInterfaceProvided *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct7 > *) ((mtsGenericObjectProxy< vct7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctDoubleVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctDoubleVec > *) ((mtsGenericObjectProxy< vctDoubleVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctDoubleVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctDoubleVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort5 > *) ((mtsGenericObjectProxy< vctUShort5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort5 > *) ((mtsGenericObjectProxy< vctShort5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat9 > *) ((mtsGenericObjectProxy< vctFloat9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar2 > *) ((mtsGenericObjectProxy< vctUChar2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar2 > *) ((mtsGenericObjectProxy< vctChar2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool2 > *) ((mtsGenericObjectProxy< vctBool2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt6 > *) ((mtsGenericObjectProxy< vctInt6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt6 > *) ((mtsGenericObjectProxy< vctUInt6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong1 > *) ((mtsGenericObjectProxy< vctLong1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong1 > *) ((mtsGenericObjectProxy< vctULong1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloatMat_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloatMat > *) ((mtsGenericObjectProxy< vctFloatMat > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloatMat_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloatMat > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctIntMat_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctIntMat > *) ((mtsGenericObjectProxy< vctIntMat > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctIntMat_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctIntMat > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct8 > *) ((mtsGenericObjectProxy< vct8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< stdDoubleVec > *) ((mtsGenericObjectProxy< std::vector< double,std::allocator< double > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort6 > *) ((mtsGenericObjectProxy< vctUShort6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort6 > *) ((mtsGenericObjectProxy< vctShort6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort6 > *) x));
}
static void *_p_mtsIntervalStatisticsTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsIntervalStatistics *) x));
}
static void *_p_mtsDoubleRodRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleRodRot3 *) x));
}
static void *_p_mtsFloatRodRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatRodRot3 *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar3 > *) ((mtsGenericObjectProxy< vctUChar3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar3 > *) ((mtsGenericObjectProxy< vctChar3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool3 > *) ((mtsGenericObjectProxy< vctBool3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool3 > *) x));
}
static void *_p_mtsTaskContinuousConstructorArgTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsTaskContinuousConstructorArg *) x));
}
static void *_p_mtsTaskPeriodicConstructorArgTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsTaskPeriodicConstructorArg *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt7 > *) ((mtsGenericObjectProxy< vctInt7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt7 > *) ((mtsGenericObjectProxy< vctUInt7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt7 > *) x));
}
static void *_p_svlFilterImageFileWriterTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterImageFileWriter *) x));
}
static void *_p_svlFilterVideoFileWriterTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterVideoFileWriter *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong2 > *) ((mtsGenericObjectProxy< vctLong2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong2 > *) ((mtsGenericObjectProxy< vctULong2 > *) x));
}
static void *_p_svlFilterImageCameraCalibrationOpenCVTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterImageCameraCalibrationOpenCV *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct9 > *) ((mtsGenericObjectProxy< vct9 > *) x));
}
static void *_p_cmnPathTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnPath *) x));
}
static void *_p_mtsInterfaceRequiredTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsInterface *) ((mtsInterfaceRequired *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort7 > *) ((mtsGenericObjectProxy< vctUShort7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort7 > *) ((mtsGenericObjectProxy< vctShort7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort7 > *) x));
}
static void *_p_mtsVectorT_unsigned_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< unsigned int > *) x));
}
static void *_p_mtsGenericObjectProxyT_unsigned_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< unsigned int > *) ((mtsGenericObjectProxy< unsigned int > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_unsigned_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< unsigned int > *) x));
}
static void *_p_cmnGenericObjectProxyT_unsigned_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< unsigned int > *) x));
}
static void *_p_mtsComponentConstructorNameAndArgT_unsigned_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsComponentConstructorNameAndArg< unsigned int > *) x));
}
static void *_p_mtsCollectorStateTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(mtsTask *)(mtsTaskContinuous *)(mtsTaskFromSignal *)(mtsCollectorBase *) ((mtsCollectorState *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar4 > *) ((mtsGenericObjectProxy< vctUChar4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar4 > *) ((mtsGenericObjectProxy< vctChar4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar4 > *) x));
}
static void *_p_mtsDoubleQuatTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleQuat *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< std::vector< char,std::allocator< char > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< stdCharVec > *) ((mtsGenericObjectProxy< std::vector< char,std::allocator< char > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool4 > *) ((mtsGenericObjectProxy< vctBool4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt8 > *) ((mtsGenericObjectProxy< vctInt8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt8 > *) ((mtsGenericObjectProxy< vctUInt8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong3 > *) ((mtsGenericObjectProxy< vctLong3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong3 > *) ((mtsGenericObjectProxy< vctULong3 > *) x));
}
static void *_p_mtsManagerLocalTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsManagerLocalInterface *) ((mtsManagerLocal *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat1 > *) ((mtsGenericObjectProxy< vctFloat1 > *) x));
}
static void *_p_svlFilterImageRectifierTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterImageRectifier *) x));
}
static void *_p_mtsMatrixT_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsMatrix< long > *) x));
}
static void *_p_mtsVectorT_unsigned_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< unsigned long > *) x));
}
static void *_p_mtsVectorT_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< long > *) x));
}
static void *_p_mtsGenericObjectProxyT_unsigned_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< unsigned long > *) ((mtsGenericObjectProxy< unsigned long > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_unsigned_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< unsigned long > *) x));
}
static void *_p_mtsGenericObjectProxyT_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< long > *) ((mtsGenericObjectProxy< long > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< long > *) x));
}
static void *_p_cmnGenericObjectProxyT_unsigned_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< unsigned long > *) x));
}
static void *_p_cmnGenericObjectProxyT_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< long > *) x));
}
static void *_p_mtsComponentConstructorNameAndArgT_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsComponentConstructorNameAndArg< long > *) x));
}
static void *_p_mtsComponentConstructorNameAndArgT_unsigned_long_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsComponentConstructorNameAndArg< unsigned long > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort8 > *) ((mtsGenericObjectProxy< vctUShort8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort8 > *) ((mtsGenericObjectProxy< vctShort8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort8 > *) x));
}
static void *_p_mtsVectorT_std__string_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< std::string > *) x));
}
static void *_p_mtsGenericObjectProxyT_std__string_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< std::string > *) ((mtsGenericObjectProxy< std::string > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_std__string_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< std::string > *) x));
}
static void *_p_mtsComponentConstructorNameAndArgT_std__string_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsComponentConstructorNameAndArg< std::string > *) x));
}
static void *_p_svlFilterImageResizerTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterImageResizer *) x));
}
static void *_p_mtsStateIndexTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsStateIndex *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar5 > *) ((mtsGenericObjectProxy< vctUChar5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar5 > *) ((mtsGenericObjectProxy< vctChar5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar5 > *) x));
}
static void *_p_mtsTaskPeriodicTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(mtsTask *)(mtsTaskContinuous *) ((mtsTaskPeriodic *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool5 > *) ((mtsGenericObjectProxy< vctBool5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt9 > *) ((mtsGenericObjectProxy< vctInt9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt9 > *) ((mtsGenericObjectProxy< vctUInt9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong4 > *) ((mtsGenericObjectProxy< vctLong4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong4 > *) ((mtsGenericObjectProxy< vctULong4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBoolVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBoolVec > *) ((mtsGenericObjectProxy< vctBoolVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBoolVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBoolVec > *) x));
}
static void *_p_mtsComponentWithManagementTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *) ((mtsComponentWithManagement *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat2 > *) ((mtsGenericObjectProxy< vctFloat2 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort9 > *) ((mtsGenericObjectProxy< vctUShort9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort9 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort9 > *) ((mtsGenericObjectProxy< vctShort9 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort9_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort9 > *) x));
}
static void *_p_mtsFloatFrm4x4To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatFrm4x4 *) x));
}
static void *_p_mtsDoubleFrm4x4To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleFrm4x4 *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< mtsInterfaceRequiredDescription > *) x));
}
static void *_p_svlFilterImageChannelSwapperTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterImageChannelSwapper *) x));
}
static void *_p_svlStreamManagerTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *) ((svlStreamManager *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar6 > *) ((mtsGenericObjectProxy< vctUChar6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar6 > *) ((mtsGenericObjectProxy< vctChar6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool6 > *) ((mtsGenericObjectProxy< vctBool6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctMatrixRotation3< double,VCT_ROW_MAJOR > > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct4x4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct4x4 > *) ((mtsGenericObjectProxy< vct4x4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct4x4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct4x4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct3x3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct3x3 > *) ((mtsGenericObjectProxy< vct3x3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct3x3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct3x3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct1 > *) ((mtsGenericObjectProxy< vct1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct2x2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct2x2 > *) ((mtsGenericObjectProxy< vct2x2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct2x2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct2x2 > *) x));
}
static void *_p_mtsTaskFromSignalTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(mtsTask *)(mtsTaskContinuous *) ((mtsTaskFromSignal *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong5 > *) ((mtsGenericObjectProxy< vctLong5 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong5 > *) ((mtsGenericObjectProxy< vctULong5 > *) x));
}
static void *_p_mtsMatrixT_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsMatrix< int > *) x));
}
static void *_p_mtsVectorT_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< int > *) x));
}
static void *_p_mtsGenericObjectProxyT_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< int > *) ((mtsGenericObjectProxy< int > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< int > *) x));
}
static void *_p_mtsComponentConstructorNameAndArgT_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsComponentConstructorNameAndArg< int > *) x));
}
static void *_p_cmnGenericObjectProxyT_int_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< int > *) x));
}
static void *_p_mtsFloatAnRot2To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatAnRot2 *) x));
}
static void *_p_mtsDoubleAxAnRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleAxAnRot3 *) x));
}
static void *_p_mtsFloatAxAnRot3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatAxAnRot3 *) x));
}
static void *_p_mtsDoubleAnRot2To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleAnRot2 *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat3 > *) ((mtsGenericObjectProxy< vctFloat3 > *) x));
}
static void *_p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< stdStringVec > *) ((mtsGenericObjectProxy< std::vector< std::string,std::allocator< std::string > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctDoubleMat_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctDoubleMat > *) ((mtsGenericObjectProxy< vctDoubleMat > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctDoubleMat_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctDoubleMat > *) x));
}
static void *_p_svlFilterBaseTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *) ((svlFilterBase *) x));
}
static void *_p_svlFilterImageWindowTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *) ((svlFilterImageWindow *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar7 > *) ((mtsGenericObjectProxy< vctUChar7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar7 > *) ((mtsGenericObjectProxy< vctChar7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool7 > *) ((mtsGenericObjectProxy< vctBool7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool7 > *) x));
}
static void *_p_mtsMatrixT_double_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsMatrix< double > *) x));
}
static void *_p_mtsVectorT_double_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< double > *) x));
}
static void *_p_mtsGenericObjectProxyT_double_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< double > *) ((mtsGenericObjectProxy< double > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_double_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< double > *) x));
}
static void *_p_cmnGenericObjectProxyT_double_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((cmnGenericObjectProxy< double > *) x));
}
static void *_p_mtsComponentConstructorNameAndArgT_double_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsComponentConstructorNameAndArg< double > *) x));
}
static void *_p_mtsDoubleQuatFrm3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleQuatFrm3 *) x));
}
static void *_p_mtsFloatQuatFrm3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatQuatFrm3 *) x));
}
static void *_p_mtsDoubleMatFrm3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsDoubleMatFrm3 *) x));
}
static void *_p_mtsFloatMatFrm3To_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsFloatMatFrm3 *) x));
}
static void *_p_mtsGenericObjectProxyT_vct2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct2 > *) ((mtsGenericObjectProxy< vct2 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct2_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct2 > *) x));
}
static void *_p_svlFilterSourceBufferTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(svlFilterBase *)(svlFilterSourceBase *) ((svlFilterSourceBuffer *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong6 > *) ((mtsGenericObjectProxy< vctLong6 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong6 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong6_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong6 > *) ((mtsGenericObjectProxy< vctULong6 > *) x));
}
static void *_p_mtsVectorT_float_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsVector< float > *) x));
}
static void *_p_mtsGenericObjectProxyT_float_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< float > *) ((mtsGenericObjectProxy< float > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_float_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< float > *) x));
}
static void *_p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< mtsDescriptionComponentClassVec > *) ((mtsGenericObjectProxy< std::vector< mtsDescriptionComponentClass,std::allocator< mtsDescriptionComponentClass > > > *) x));
}
static void *_p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< mtsDescriptionConnectionVec > *) ((mtsGenericObjectProxy< std::vector< mtsDescriptionConnection,std::allocator< mtsDescriptionConnection > > > *) x));
}
static void *_p_mtsComponentTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((mtsComponent *) x));
}
static void *_p_mtsCollectorBaseTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsComponent *)(mtsTask *)(mtsTaskContinuous *)(mtsTaskFromSignal *) ((mtsCollectorBase *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat4 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat4_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat4 > *) ((mtsGenericObjectProxy< vctFloat4 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctInt1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctInt1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctInt1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctInt1 > *) ((mtsGenericObjectProxy< vctInt1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUInt1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUInt1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUInt1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUInt1 > *) ((mtsGenericObjectProxy< vctUInt1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUChar8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUChar8 > *) ((mtsGenericObjectProxy< vctUChar8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUChar8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUChar8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctChar8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctChar8 > *) ((mtsGenericObjectProxy< vctChar8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctChar8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctChar8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloatVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloatVec > *) ((mtsGenericObjectProxy< vctFloatVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloatVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloatVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShortVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShortVec > *) ((mtsGenericObjectProxy< vctUShortVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShortVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShortVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShortVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShortVec > *) ((mtsGenericObjectProxy< vctShortVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShortVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShortVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUIntVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUIntVec > *) ((mtsGenericObjectProxy< vctUIntVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUIntVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUIntVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctIntVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctIntVec > *) ((mtsGenericObjectProxy< vctIntVec > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctIntVec_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctIntVec > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctBool8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctBool8 > *) ((mtsGenericObjectProxy< vctBool8 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctBool8_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctBool8 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vct3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vct3 > *) ((mtsGenericObjectProxy< vct3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vct3_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vct3 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctLong7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctLong7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctLong7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctLong7 > *) ((mtsGenericObjectProxy< vctLong7 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctULong7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctULong7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctULong7_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctULong7 > *) ((mtsGenericObjectProxy< vctULong7 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctUShort1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctUShort1 > *) ((mtsGenericObjectProxy< vctUShort1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctUShort1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctUShort1 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctShort1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctShort1 > *) ((mtsGenericObjectProxy< vctShort1 > *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctShort1_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctShort1 > *) x));
}
static void *_p_mtsManagerComponentServicesTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((mtsManagerComponentServices *) x));
}
static void *_p_mtsGenericObjectProxyBaseT_vctFloat5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *) ((mtsGenericObjectProxyBase< vctFloat5 > *) x));
}
static void *_p_mtsGenericObjectProxyT_vctFloat5_tTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *) (mtsGenericObject *)(mtsGenericObjectProxyBase< vctFloat5 > *) ((mtsGenericObjectProxy< vctFloat5 > *) x));
}
static void *_p_osaSerialPortTo_p_cmnGenericObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((cmnGenericObject *)  ((osaSerialPort *) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &)) (std::basic_ios< char > *) ((std::basic_ostream< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &)) (std::basic_ios< char > *) ((std::basic_istream< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &)) (std::basic_ios< char > *)(std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base &(*)(std::ios_base &))  ((std::basic_ios< char,std::char_traits< char > > &(*)(std::ios_base &)) x));
}
static void *_p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *) (std::basic_ios< char > *) ((std::basic_ostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *) (std::basic_ios< char > *) ((std::basic_istream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *) (std::basic_ios< char > *)(std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_std__ios_base(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::ios_base *)  ((std::basic_ios< char,std::char_traits< char > > *) x));
}
static void *_p_svlFilterSourceVideoFileTo_p_svlFilterSourceBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterSourceBase *)  ((svlFilterSourceVideoFile *) x));
}
static void *_p_svlFilterSourceBufferTo_p_svlFilterSourceBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterSourceBase *)  ((svlFilterSourceBuffer *) x));
}
static void *_p_svlFilterSourceVideoCaptureTo_p_svlFilterSourceBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterSourceBase *)  ((svlFilterSourceVideoCapture *) x));
}
static void *_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &))  ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)) x));
}
static void *_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &))  ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)) x));
}
static void *_p_svlSampleImageCustomT_unsigned_char_3_1_tTo_p_svlSampleImage(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlSampleImage *)  ((svlSampleImageCustom< unsigned char,3,1 > *) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_istreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_istream< char,std::char_traits< char > > *)  ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &))  ((std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) x));
}
static void *_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &))  ((std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) x));
}
static void *_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) (std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ostream< char,std::char_traits< char > > *)  ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > *)  ((std::basic_ostream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > *)  ((std::basic_istream< char,std::char_traits< char > > *) x));
}
static void *_p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_ios< char,std::char_traits< char > > *) (std::basic_istream< char > *) ((std::basic_iostream< char,std::char_traits< char > > *) x));
}
static void *_p_svlSampleImageCustomT_unsigned_char_3_1_tTo_p_svlSample(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlSample *) (svlSampleImage *) ((svlSampleImageCustom< unsigned char,3,1 > *) x));
}
static void *_p_svlSampleImageTo_p_svlSample(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlSample *)  ((svlSampleImage *) x));
}
static void *_p_svlFilterImageFileWriterTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterImageFileWriter *) x));
}
static void *_p_svlFilterSourceBaseTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterSourceBase *) x));
}
static void *_p_svlFilterVideoFileWriterTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterVideoFileWriter *) x));
}
static void *_p_svlFilterImageChannelSwapperTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterImageChannelSwapper *) x));
}
static void *_p_svlFilterImageResizerTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterImageResizer *) x));
}
static void *_p_svlFilterSourceVideoFileTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *) (svlFilterSourceBase *) ((svlFilterSourceVideoFile *) x));
}
static void *_p_svlFilterImageRectifierTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterImageRectifier *) x));
}
static void *_p_svlFilterSourceBufferTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *) (svlFilterSourceBase *) ((svlFilterSourceBuffer *) x));
}
static void *_p_svlFilterImageWindowTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterImageWindow *) x));
}
static void *_p_svlFilterImageCameraCalibrationOpenCVTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *)  ((svlFilterImageCameraCalibrationOpenCV *) x));
}
static void *_p_svlFilterSourceVideoCaptureTo_p_svlFilterBase(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((svlFilterBase *) (svlFilterSourceBase *) ((svlFilterSourceVideoCapture *) x));
}
static void *_p_mtsMatrixT_double_tTo_p_vctDynamicMatrixT_double_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((vctDynamicMatrix< double > *)  ((mtsMatrix< double > *) x));
}
static void *_p_mtsCollectorBaseTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (mtsTask *)(mtsTaskContinuous *)(mtsTaskFromSignal *) ((mtsCollectorBase *) x));
}
static void *_p_svlFilterImageWindowTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterImageWindow *) x));
}
static void *_p_svlFilterSourceVideoCaptureTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *)(svlFilterSourceBase *) ((svlFilterSourceVideoCapture *) x));
}
static void *_p_svlStreamManagerTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *)  ((svlStreamManager *) x));
}
static void *_p_mtsTaskFromSignalTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (mtsTask *)(mtsTaskContinuous *) ((mtsTaskFromSignal *) x));
}
static void *_p_mtsComponentWithManagementTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *)  ((mtsComponentWithManagement *) x));
}
static void *_p_svlFilterSourceBaseTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterSourceBase *) x));
}
static void *_p_mtsTaskContinuousTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (mtsTask *) ((mtsTaskContinuous *) x));
}
static void *_p_svlFilterImageFileWriterTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterImageFileWriter *) x));
}
static void *_p_svlFilterVideoFileWriterTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterVideoFileWriter *) x));
}
static void *_p_svlFilterImageChannelSwapperTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterImageChannelSwapper *) x));
}
static void *_p_mtsTaskTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *)  ((mtsTask *) x));
}
static void *_p_mtsTaskMainTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (mtsTask *)(mtsTaskContinuous *) ((mtsTaskMain *) x));
}
static void *_p_mtsTaskPeriodicTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (mtsTask *)(mtsTaskContinuous *) ((mtsTaskPeriodic *) x));
}
static void *_p_svlFilterImageRectifierTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterImageRectifier *) x));
}
static void *_p_svlFilterImageResizerTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterImageResizer *) x));
}
static void *_p_svlFilterImageCameraCalibrationOpenCVTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *) ((svlFilterImageCameraCalibrationOpenCV *) x));
}
static void *_p_mtsCollectorStateTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (mtsTask *)(mtsTaskContinuous *)(mtsTaskFromSignal *)(mtsCollectorBase *) ((mtsCollectorState *) x));
}
static void *_p_svlFilterBaseTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *)  ((svlFilterBase *) x));
}
static void *_p_svlFilterSourceVideoFileTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *)(svlFilterSourceBase *) ((svlFilterSourceVideoFile *) x));
}
static void *_p_svlFilterSourceBufferTo_p_mtsComponent(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((mtsComponent *) (svlFilterBase *)(svlFilterSourceBase *) ((svlFilterSourceBuffer *) x));
}
static void *_p_mtsDoubleMatFrm3To_p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((vctFrameBase< vctMatrixRotation3< double,VCT_ROW_MAJOR > > *)  ((mtsDoubleMatFrm3 *) x));
}
static void *_p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_tTo_p_std__basic_streambufT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_streambuf< char,std::char_traits< char > > *)  ((cmnLODMultiplexerStreambuf< char > *) x));
}
static void *_p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_tTo_p_std__basic_streambufT_char_std__char_traitsT_char_t_t(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((std::basic_streambuf< char,std::char_traits< char > > *)  ((cmnCallbackStreambuf< char > *) x));
}
static swig_type_info _swigt__p_ActionType = {"_p_ActionType", "ActionType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_AngleType = {"_p_AngleType", "AngleType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BaseClassType = {"_p_BaseClassType", "BaseClassType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BaseType = {"_p_BaseType", "BaseType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_BoolType = {"_p_BoolType", "BoolType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CISSTNETLIB_DOUBLE = {"_p_CISSTNETLIB_DOUBLE", "CISSTNETLIB_DOUBLE *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CISSTNETLIB_INTEGER = {"_p_CISSTNETLIB_INTEGER", "CISSTNETLIB_INTEGER *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CallableType = {"_p_CallableType", "CallableType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChannelContainerType = {"_p_ChannelContainerType", "ChannelContainerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ChannelType = {"_p_ChannelType", "ChannelType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CollectorFileFloatingNotation = {"_p_CollectorFileFloatingNotation", "CollectorFileFloatingNotation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CollectorFileFormat = {"_p_CollectorFileFormat", "CollectorFileFormat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandInternalMapType = {"_p_CommandInternalMapType", "CommandInternalMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandQualifiedReadMapType = {"_p_CommandQualifiedReadMapType", "CommandQualifiedReadMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandReadMapType = {"_p_CommandReadMapType", "CommandReadMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandType = {"_p_CommandType", "CommandType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandVoidMapType = {"_p_CommandVoidMapType", "CommandVoidMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandVoidReturnMapType = {"_p_CommandVoidReturnMapType", "CommandVoidReturnMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandWriteMapType = {"_p_CommandWriteMapType", "CommandWriteMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CommandWriteReturnMapType = {"_p_CommandWriteReturnMapType", "CommandWriteReturnMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_CompressionData = {"_p_CompressionData", "CompressionData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Config = {"_p_Config", "Config *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ConstIteratorType = {"_p_ConstIteratorType", "ConstIteratorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ContainerType = {"_p_ContainerType", "ContainerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DeRefType = {"_p_DeRefType", "DeRefType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DeviceInfo = {"_p_DeviceInfo", "DeviceInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_DeviceInfoListType = {"_p_DeviceInfoListType", "DeviceInfoListType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ElementType = {"_p_ElementType", "ElementType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EntryType = {"_p_EntryType", "EntryType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EventVoidMapType = {"_p_EventVoidMapType", "EventVoidMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_EventWriteMapType = {"_p_EventWriteMapType", "EventWriteMapType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ExternalTrigger = {"_p_ExternalTrigger", "ExternalTrigger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_FormatListType = {"_p_FormatListType", "FormatListType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ImageFormat = {"_p_ImageFormat", "ImageFormat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ImageProperties = {"_p_ImageProperties", "ImageProperties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ImagePropertiesMask = {"_p_ImagePropertiesMask", "ImagePropertiesMask *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IplImage = {"_p_IplImage", "IplImage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_IteratorType = {"_p_IteratorType", "IteratorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MatrixType = {"_p_MatrixType", "MatrixType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MultiplexerConstIteratorType = {"_p_MultiplexerConstIteratorType", "MultiplexerConstIteratorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MultiplexerContainerType = {"_p_MultiplexerContainerType", "MultiplexerContainerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_MultiplexerIteratorType = {"_p_MultiplexerIteratorType", "MultiplexerIteratorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_NormType = {"_p_NormType", "NormType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PatternType = {"_p_PatternType", "PatternType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PixelType = {"_p_PixelType", "PixelType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PlatformType = {"_p_PlatformType", "PlatformType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RefType = {"_p_RefType", "RefType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_RotationType = {"_p_RotationType", "RotationType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ServicesContainerType = {"_p_ServicesContainerType", "ServicesContainerType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_StreamBufType = {"_p_StreamBufType", "StreamBufType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ThisType = {"_p_ThisType", "ThisType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TimeTicksType = {"_p_TimeTicksType", "TimeTicksType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TranslationType = {"_p_TranslationType", "TranslationType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_Type = {"_p_Type", "Type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TypeTraits = {"_p_TypeTraits", "TypeTraits *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VaArgPromotion = {"_p_VaArgPromotion", "VaArgPromotion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_VectorType = {"_p_VectorType", "VectorType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_allocator_type = {"_p_allocator_type", "allocator_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool = {"_p_bool", "bool *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "std::basic_istream< char >::char_type *|char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char_type = {"_p_char_type", "char_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnClassServicesBase = {"_p_cmnClassServicesBase", "cmnClassServicesBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObject = {"_p_cmnGenericObject", "cmnGenericObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort8_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort8_t = {"_p_mtsGenericObjectProxyBaseT_vctShort8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_unsigned_int_t = {"_p_mtsGenericObjectProxyBaseT_unsigned_int_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_int_t = {"_p_mtsGenericObjectProxyBaseT_int_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_std__string_t = {"_p_mtsGenericObjectProxyBaseT_std__string_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar5_t = {"_p_mtsGenericObjectProxyBaseT_vctChar5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar5_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool5_t = {"_p_mtsGenericObjectProxyBaseT_vctBool5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt9_t = {"_p_mtsGenericObjectProxyBaseT_vctInt9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt9_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong4_t = {"_p_mtsGenericObjectProxyBaseT_vctULong4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong4_t = {"_p_mtsGenericObjectProxyBaseT_vctLong4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBoolVec_t = {"_p_mtsGenericObjectProxyBaseT_vctBoolVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat2_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort9_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort9_t = {"_p_mtsGenericObjectProxyBaseT_vctShort9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar6_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar6_t = {"_p_mtsGenericObjectProxyBaseT_vctChar6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatQuat = {"_p_mtsFloatQuat", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool6_t = {"_p_mtsGenericObjectProxyBaseT_vctBool6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct4x4_t = {"_p_mtsGenericObjectProxyBaseT_vct4x4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct1_t = {"_p_mtsGenericObjectProxyBaseT_vct1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct3x3_t = {"_p_mtsGenericObjectProxyBaseT_vct3x3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct2x2_t = {"_p_mtsGenericObjectProxyBaseT_vct2x2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong5_t = {"_p_mtsGenericObjectProxyBaseT_vctLong5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong5_t = {"_p_mtsGenericObjectProxyBaseT_vctULong5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t = {"_p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsInterface = {"_p_mtsInterface", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsManagerLocalInterface = {"_p_mtsManagerLocalInterface", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat3_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObject = {"_p_mtsGenericObject", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctDoubleMat_t = {"_p_mtsGenericObjectProxyBaseT_vctDoubleMat_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatMatRot2 = {"_p_mtsFloatMatRot2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsDoubleMatRot2 = {"_p_mtsDoubleMatRot2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatQuatRot3 = {"_p_mtsFloatQuatRot3", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatMatRot3 = {"_p_mtsFloatMatRot3", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTaskMain = {"_p_mtsTaskMain", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar7_t = {"_p_mtsGenericObjectProxyBaseT_vctChar7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar7_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool7_t = {"_p_mtsGenericObjectProxyBaseT_vctBool7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTaskContinuous = {"_p_mtsTaskContinuous", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_double_t = {"_p_mtsGenericObjectProxyBaseT_double_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct2_t = {"_p_mtsGenericObjectProxyBaseT_vct2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong6_t = {"_p_mtsGenericObjectProxyBaseT_vctULong6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong6_t = {"_p_mtsGenericObjectProxyBaseT_vctLong6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_float_t = {"_p_mtsGenericObjectProxyBaseT_float_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_osaTimeServer = {"_p_osaTimeServer", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat4_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t = {"_p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTask = {"_p_mtsTask", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt1_t = {"_p_mtsGenericObjectProxyBaseT_vctInt1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt1_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t = {"_p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsInterfaceProvided = {"_p_mtsInterfaceProvided", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar8_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar8_t = {"_p_mtsGenericObjectProxyBaseT_vctChar8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloatVec_t = {"_p_mtsGenericObjectProxyBaseT_vctFloatVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShortVec_t = {"_p_mtsGenericObjectProxyBaseT_vctUShortVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShortVec_t = {"_p_mtsGenericObjectProxyBaseT_vctShortVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUIntVec_t = {"_p_mtsGenericObjectProxyBaseT_vctUIntVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctIntVec_t = {"_p_mtsGenericObjectProxyBaseT_vctIntVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool8_t = {"_p_mtsGenericObjectProxyBaseT_vctBool8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct3_t = {"_p_mtsGenericObjectProxyBaseT_vct3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong7_t = {"_p_mtsGenericObjectProxyBaseT_vctLong7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong7_t = {"_p_mtsGenericObjectProxyBaseT_vctULong7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort1_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort1_t = {"_p_mtsGenericObjectProxyBaseT_vctShort1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat5_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt2_t = {"_p_mtsGenericObjectProxyBaseT_vctInt2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt2_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_mtsComponentState_t = {"_p_mtsGenericObjectProxyBaseT_mtsComponentState_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_bool_t = {"_p_mtsGenericObjectProxyBaseT_bool_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar9_t = {"_p_mtsGenericObjectProxyBaseT_vctChar9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar9_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool9_t = {"_p_mtsGenericObjectProxyBaseT_vctBool9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct4_t = {"_p_mtsGenericObjectProxyBaseT_vct4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong8_t = {"_p_mtsGenericObjectProxyBaseT_vctULong8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong8_t = {"_p_mtsGenericObjectProxyBaseT_vctLong8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort2_t = {"_p_mtsGenericObjectProxyBaseT_vctShort2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort2_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsIntervalStatistics = {"_p_mtsIntervalStatistics", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatRodRot3 = {"_p_mtsFloatRodRot3", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat6_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTaskContinuousConstructorArg = {"_p_mtsTaskContinuousConstructorArg", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTaskPeriodicConstructorArg = {"_p_mtsTaskPeriodicConstructorArg", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt3_t = {"_p_mtsGenericObjectProxyBaseT_vctInt3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt3_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUCharVec_t = {"_p_mtsGenericObjectProxyBaseT_vctUCharVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctCharVec_t = {"_p_mtsGenericObjectProxyBaseT_vctCharVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct5_t = {"_p_mtsGenericObjectProxyBaseT_vct5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_cmnPath = {"_p_cmnPath", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsInterfaceRequired = {"_p_mtsInterfaceRequired", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t = {"_p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong9_t = {"_p_mtsGenericObjectProxyBaseT_vctLong9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong9_t = {"_p_mtsGenericObjectProxyBaseT_vctULong9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULongVec_t = {"_p_mtsGenericObjectProxyBaseT_vctULongVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLongVec_t = {"_p_mtsGenericObjectProxyBaseT_vctLongVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort3_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort3_t = {"_p_mtsGenericObjectProxyBaseT_vctShort3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t = {"_p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsCollectorState = {"_p_mtsCollectorState", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat7_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_unsigned_short_t = {"_p_mtsGenericObjectProxyBaseT_unsigned_short_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_short_t = {"_p_mtsGenericObjectProxyBaseT_short_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt4_t = {"_p_mtsGenericObjectProxyBaseT_vctInt4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt4_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsManagerLocal = {"_p_mtsManagerLocal", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct6_t = {"_p_mtsGenericObjectProxyBaseT_vct6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort4_t = {"_p_mtsGenericObjectProxyBaseT_vctShort4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort4_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsStateIndex = {"_p_mtsStateIndex", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTaskPeriodic = {"_p_mtsTaskPeriodic", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat8_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar1_t = {"_p_mtsGenericObjectProxyBaseT_vctChar1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar1_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool1_t = {"_p_mtsGenericObjectProxyBaseT_vctBool1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt5_t = {"_p_mtsGenericObjectProxyBaseT_vctInt5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt5_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t = {"_p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t = {"_p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsComponentWithManagement = {"_p_mtsComponentWithManagement", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct7_t = {"_p_mtsGenericObjectProxyBaseT_vct7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatFrm4x4 = {"_p_mtsFloatFrm4x4", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctDoubleVec_t = {"_p_mtsGenericObjectProxyBaseT_vctDoubleVec_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort5_t = {"_p_mtsGenericObjectProxyBaseT_vctShort5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort5_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort5_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat9_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar2_t = {"_p_mtsGenericObjectProxyBaseT_vctChar2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar2_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool2_t = {"_p_mtsGenericObjectProxyBaseT_vctBool2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt6_t = {"_p_mtsGenericObjectProxyBaseT_vctInt6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt6_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsTaskFromSignal = {"_p_mtsTaskFromSignal", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong1_t = {"_p_mtsGenericObjectProxyBaseT_vctULong1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong1_t = {"_p_mtsGenericObjectProxyBaseT_vctLong1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t = {"_p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatAnRot2 = {"_p_mtsFloatAnRot2", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloatMat_t = {"_p_mtsGenericObjectProxyBaseT_vctFloatMat_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatAxAnRot3 = {"_p_mtsFloatAxAnRot3", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctIntMat_t = {"_p_mtsGenericObjectProxyBaseT_vctIntMat_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct8_t = {"_p_mtsGenericObjectProxyBaseT_vct8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort6_t = {"_p_mtsGenericObjectProxyBaseT_vctShort6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort6_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort6_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar3_t = {"_p_mtsGenericObjectProxyBaseT_vctChar3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar3_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatQuatFrm3 = {"_p_mtsFloatQuatFrm3", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsFloatMatFrm3 = {"_p_mtsFloatMatFrm3", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool3_t = {"_p_mtsGenericObjectProxyBaseT_vctBool3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt7_t = {"_p_mtsGenericObjectProxyBaseT_vctInt7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt7_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong2_t = {"_p_mtsGenericObjectProxyBaseT_vctLong2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong2_t = {"_p_mtsGenericObjectProxyBaseT_vctULong2_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsCollectorBase = {"_p_mtsCollectorBase", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vct9_t = {"_p_mtsGenericObjectProxyBaseT_vct9_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t = {"_p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctShort7_t = {"_p_mtsGenericObjectProxyBaseT_vctShort7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUShort7_t = {"_p_mtsGenericObjectProxyBaseT_vctUShort7_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctChar4_t = {"_p_mtsGenericObjectProxyBaseT_vctChar4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUChar4_t = {"_p_mtsGenericObjectProxyBaseT_vctUChar4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctBool4_t = {"_p_mtsGenericObjectProxyBaseT_vctBool4_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctInt8_t = {"_p_mtsGenericObjectProxyBaseT_vctInt8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctUInt8_t = {"_p_mtsGenericObjectProxyBaseT_vctUInt8_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctULong3_t = {"_p_mtsGenericObjectProxyBaseT_vctULong3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctLong3_t = {"_p_mtsGenericObjectProxyBaseT_vctLong3_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsManagerComponentServices = {"_p_mtsManagerComponentServices", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_osaSerialPort = {"_p_osaSerialPort", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_long_t = {"_p_mtsGenericObjectProxyBaseT_long_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_unsigned_long_t = {"_p_mtsGenericObjectProxyBaseT_unsigned_long_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyBaseT_vctFloat1_t = {"_p_mtsGenericObjectProxyBaseT_vctFloat1_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_bool_t = {"_p_cmnGenericObjectProxyT_bool_t", "cmnBool *|cmnGenericObjectProxy< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_char_t = {"_p_cmnGenericObjectProxyT_char_t", "cmnChar *|cmnGenericObjectProxy< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_double_t = {"_p_cmnGenericObjectProxyT_double_t", "cmnDouble *|cmnGenericObjectProxy< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_int_t = {"_p_cmnGenericObjectProxyT_int_t", "cmnGenericObjectProxy< int > *|cmnInt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_long_long_t = {"_p_cmnGenericObjectProxyT_long_long_t", "cmnGenericObjectProxy< long long > *|cmnLongLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_long_t = {"_p_cmnGenericObjectProxyT_long_t", "cmnLong *|cmnGenericObjectProxy< long > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_short_t = {"_p_cmnGenericObjectProxyT_short_t", "cmnGenericObjectProxy< short > *|cmnShort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_unsigned_char_t = {"_p_cmnGenericObjectProxyT_unsigned_char_t", "cmnGenericObjectProxy< unsigned char > *|cmnUChar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_unsigned_int_t = {"_p_cmnGenericObjectProxyT_unsigned_int_t", "cmnGenericObjectProxy< unsigned int > *|cmnUInt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_unsigned_long_long_t = {"_p_cmnGenericObjectProxyT_unsigned_long_long_t", "cmnGenericObjectProxy< unsigned long long > *|cmnULongLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_unsigned_long_t = {"_p_cmnGenericObjectProxyT_unsigned_long_t", "cmnGenericObjectProxy< unsigned long > *|cmnULong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnGenericObjectProxyT_unsigned_short_t = {"_p_cmnGenericObjectProxyT_unsigned_short_t", "cmnGenericObjectProxy< unsigned short > *|cmnUShort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_iterator = {"_p_const_iterator", "const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_const_reverse_iterator = {"_p_const_reverse_iterator", "const_reverse_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cv__Mat = {"_p_cv__Mat", "cv::Mat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_difference_type = {"_p_difference_type", "difference_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dimension_type = {"_p_dimension_type", "dimension_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_enum_std__ios_base__event_r_std__ios_base_int__void = {"_p_f_enum_std__ios_base__event_r_std__ios_base_int__void", "void (*)(enum std::ios_base::event,std::ios_base &,int)|std::ios_base::event_callback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t", "std::basic_ios< char,std::char_traits< char > > &(*)(std::basic_ios< char,std::char_traits< char > > &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t", "std::basic_istream< char,std::char_traits< char > > &(*)(std::basic_istream< char,std::char_traits< char > > &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t", "std::basic_ostream< char,std::char_traits< char > > &(*)(std::basic_ostream< char,std::char_traits< char > > &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__ios_base = {"_p_f_r_std__ios_base__r_std__ios_base", "std::ios_base &(*)(std::ios_base &)", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_first_type = {"_p_first_type", "first_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_fmtflags = {"_p_fmtflags", "fmtflags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_index_type = {"_p_index_type", "index_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int_type = {"_p_int_type", "int_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ios_base__openmode = {"_p_ios_base__openmode", "ios_base::openmode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ios_base__seekdir = {"_p_ios_base__seekdir", "ios_base::seekdir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iostate = {"_p_iostate", "iostate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_iterator = {"_p_iterator", "iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_key_type = {"_p_key_type", "key_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long = {"_p_long", "long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_double = {"_p_long_double", "long double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mapped_type = {"_p_mapped_type", "mapped_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsBlockingType = {"_p_mtsBlockingType", "enum mtsBlockingType *|mtsBlockingType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t = {"_p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t", "mtsCommandQueuedVoidReturnBase< mtsCommandRead > *|mtsCommandQueuedRead *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t = {"_p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t", "mtsCommandQueuedVoidReturnBase< mtsCommandVoidReturn > *|mtsCommandQueuedVoidReturn *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t = {"_p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t", "mtsCommandQueuedWriteReturnBase< mtsCommandQualifiedRead > *|mtsCommandQueuedQualifiedRead *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t = {"_p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t", "mtsCommandQueuedWriteReturn *|mtsCommandQueuedWriteReturnBase< mtsCommandWriteReturn > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsCommandQueueingPolicy = {"_p_mtsCommandQueueingPolicy", "enum mtsCommandQueueingPolicy *|mtsCommandQueueingPolicy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponent = {"_p_mtsComponent", "mtsDevice *|mtsComponent *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponentConstructorNameAndArgT_double_t = {"_p_mtsComponentConstructorNameAndArgT_double_t", "mtsComponentConstructorNameAndDouble *|mtsComponentConstructorNameAndArg< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponentConstructorNameAndArgT_int_t = {"_p_mtsComponentConstructorNameAndArgT_int_t", "mtsComponentConstructorNameAndInt *|mtsComponentConstructorNameAndArg< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponentConstructorNameAndArgT_long_t = {"_p_mtsComponentConstructorNameAndArgT_long_t", "mtsComponentConstructorNameAndLong *|mtsComponentConstructorNameAndArg< long > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponentConstructorNameAndArgT_std__string_t = {"_p_mtsComponentConstructorNameAndArgT_std__string_t", "mtsComponentConstructorNameAndArg< std::string > *|mtsComponentConstructorNameAndString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponentConstructorNameAndArgT_unsigned_int_t = {"_p_mtsComponentConstructorNameAndArgT_unsigned_int_t", "mtsComponentConstructorNameAndArg< unsigned int > *|mtsComponentConstructorNameAndUInt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsComponentConstructorNameAndArgT_unsigned_long_t = {"_p_mtsComponentConstructorNameAndArgT_unsigned_long_t", "mtsComponentConstructorNameAndArg< unsigned long > *|mtsComponentConstructorNameAndULong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleAnRot2 = {"_p_mtsDoubleAnRot2", "mtsDoubleAnRot2 *|mtsAnRot2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleAxAnRot3 = {"_p_mtsDoubleAxAnRot3", "mtsDoubleAxAnRot3 *|mtsAxAnRot3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleFrm4x4 = {"_p_mtsDoubleFrm4x4", "mtsDoubleFrm4x4 *|mtsFrm4x4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleMatFrm3 = {"_p_mtsDoubleMatFrm3", "mtsDoubleMatFrm3 *|mtsMatFrm3 *|mtsDoubleFrm3 *|mtsFrm3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleMatRot3 = {"_p_mtsDoubleMatRot3", "mtsDoubleMatRot3 *|mtsMatRot3 *|mtsDoubleRot3 *|mtsRot3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleQuat = {"_p_mtsDoubleQuat", "mtsDoubleQuat *|mtsQuat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleQuatFrm3 = {"_p_mtsDoubleQuatFrm3", "mtsDoubleQuatFrm3 *|mtsQuatFrm3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleQuatRot3 = {"_p_mtsDoubleQuatRot3", "mtsDoubleQuatRot3 *|mtsQuatRot3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsDoubleRodRot3 = {"_p_mtsDoubleRodRot3", "mtsDoubleRodRot3 *|mtsRodRot3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsEventQueueingPolicy = {"_p_mtsEventQueueingPolicy", "enum mtsEventQueueingPolicy *|mtsEventQueueingPolicy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_bool_t = {"_p_mtsGenericObjectProxyT_bool_t", "mtsBool *|mtsGenericObjectProxy< bool > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_char_t = {"_p_mtsGenericObjectProxyT_char_t", "mtsGenericObjectProxy< char > *|mtsChar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_double_t = {"_p_mtsGenericObjectProxyT_double_t", "mtsDouble *|mtsGenericObjectProxy< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_float_t = {"_p_mtsGenericObjectProxyT_float_t", "mtsGenericObjectProxy< float > *|mtsFloat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_int_t = {"_p_mtsGenericObjectProxyT_int_t", "mtsInt *|mtsGenericObjectProxy< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_long_long_t = {"_p_mtsGenericObjectProxyT_long_long_t", "mtsGenericObjectProxy< long long > *|mtsLongLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_long_t = {"_p_mtsGenericObjectProxyT_long_t", "mtsGenericObjectProxy< long > *|mtsLong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t = {"_p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t", "mtsCommandQualifiedReadDescriptionProxy *|mtsGenericObjectProxy< mtsCommandQualifiedReadDescription > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsCommandReadDescription_t = {"_p_mtsGenericObjectProxyT_mtsCommandReadDescription_t", "mtsGenericObjectProxy< mtsCommandReadDescription > *|mtsCommandReadDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t = {"_p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t", "mtsGenericObjectProxy< mtsCommandVoidDescription > *|mtsCommandVoidDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t = {"_p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t", "mtsGenericObjectProxy< mtsCommandVoidReturnDescription > *|mtsCommandVoidReturnDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t = {"_p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t", "mtsGenericObjectProxy< mtsCommandWriteDescription > *|mtsCommandWriteDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t = {"_p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t", "mtsGenericObjectProxy< mtsCommandWriteReturnDescription > *|mtsCommandWriteReturnDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsComponentStateChange_t = {"_p_mtsGenericObjectProxyT_mtsComponentStateChange_t", "mtsGenericObjectProxy< mtsComponentStateChange > *|mtsComponentStateChangeProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsComponentState_t = {"_p_mtsGenericObjectProxyT_mtsComponentState_t", "mtsGenericObjectProxy< mtsComponentState > *|mtsComponentStateProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsComponentStatusControl_t = {"_p_mtsGenericObjectProxyT_mtsComponentStatusControl_t", "mtsComponentStatusControlProxy *|mtsGenericObjectProxy< mtsComponentStatusControl > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t = {"_p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t", "mtsGenericObjectProxy< mtsDescriptionComponentClass > *|mtsDescriptionComponentClassProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsDescriptionComponent_t = {"_p_mtsGenericObjectProxyT_mtsDescriptionComponent_t", "mtsDescriptionComponentProxy *|mtsGenericObjectProxy< mtsDescriptionComponent > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsDescriptionConnection_t = {"_p_mtsGenericObjectProxyT_mtsDescriptionConnection_t", "mtsGenericObjectProxy< mtsDescriptionConnection > *|mtsDescriptionConnectionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t = {"_p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t", "mtsDescriptionIntefaceFullNameProxy *|mtsGenericObjectProxy< mtsDescriptionIntefaceFullName > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsDescriptionInterface_t = {"_p_mtsGenericObjectProxyT_mtsDescriptionInterface_t", "mtsGenericObjectProxy< mtsDescriptionInterface > *|mtsDescriptionInterfaceProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t = {"_p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t", "mtsGenericObjectProxy< mtsDescriptionLoadLibrary > *|mtsDescriptionLoadLibraryProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t = {"_p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t", "mtsGenericObjectProxy< mtsEndUserInterfaceArg > *|mtsEndUserInterfaceArgProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsEventVoidDescription_t = {"_p_mtsGenericObjectProxyT_mtsEventVoidDescription_t", "mtsGenericObjectProxy< mtsEventVoidDescription > *|mtsEventVoidDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsEventWriteDescription_t = {"_p_mtsGenericObjectProxyT_mtsEventWriteDescription_t", "mtsGenericObjectProxy< mtsEventWriteDescription > *|mtsEventWriteDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsExecutionResult_t = {"_p_mtsGenericObjectProxyT_mtsExecutionResult_t", "mtsGenericObjectProxy< mtsExecutionResult > *|mtsExecutionResultProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t = {"_p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t", "mtsGenericObjectProxy< mtsInterfaceProvidedDescription > *|mtsInterfaceProvidedDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t = {"_p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t", "mtsGenericObjectProxy< mtsInterfaceRequiredDescription > *|mtsInterfaceRequiredDescriptionProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_short_t = {"_p_mtsGenericObjectProxyT_short_t", "mtsGenericObjectProxy< short > *|mtsShort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__string_t = {"_p_mtsGenericObjectProxyT_std__string_t", "mtsGenericObjectProxy< std::string > *|mtsStdString *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t = {"_p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t", "mtsGenericObjectProxy< std::vector< char,std::allocator< char > > > *|mtsStdCharVecProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t = {"_p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t", "mtsGenericObjectProxy< std::vector< double,std::allocator< double > > > *|mtsStdDoubleVecProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t = {"_p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t", "mtsGenericObjectProxy< std::vector< mtsDescriptionComponentClass,std::allocator< mtsDescriptionComponentClass > > > *|mtsDescriptionComponentClassVecProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t = {"_p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t", "mtsGenericObjectProxy< std::vector< mtsDescriptionConnection,std::allocator< mtsDescriptionConnection > > > *|mtsDescriptionConnectionVecProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t = {"_p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t", "mtsGenericObjectProxy< std::vector< std::string,std::allocator< std::string > > > *|mtsStdStringVecProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t = {"_p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t", "mtsGenericObjectProxy< std::vector< vct3,std::allocator< vct3 > > > *|mtsStdVct3VecProxy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_unsigned_char_t = {"_p_mtsGenericObjectProxyT_unsigned_char_t", "mtsGenericObjectProxy< unsigned char > *|mtsUChar *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_unsigned_int_t = {"_p_mtsGenericObjectProxyT_unsigned_int_t", "mtsUInt *|mtsGenericObjectProxy< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_unsigned_long_t = {"_p_mtsGenericObjectProxyT_unsigned_long_t", "mtsGenericObjectProxy< unsigned long > *|mtsULong *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_unsigned_short_t = {"_p_mtsGenericObjectProxyT_unsigned_short_t", "mtsGenericObjectProxy< unsigned short > *|mtsUShort *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct1_t = {"_p_mtsGenericObjectProxyT_vct1_t", "mtsGenericObjectProxy< vct1 > *|mtsVct1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct2_t = {"_p_mtsGenericObjectProxyT_vct2_t", "mtsVct2 *|mtsGenericObjectProxy< vct2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct2x2_t = {"_p_mtsGenericObjectProxyT_vct2x2_t", "mtsVct2x2 *|mtsGenericObjectProxy< vct2x2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct3_t = {"_p_mtsGenericObjectProxyT_vct3_t", "mtsGenericObjectProxy< vct3 > *|mtsVct3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct3x3_t = {"_p_mtsGenericObjectProxyT_vct3x3_t", "mtsGenericObjectProxy< vct3x3 > *|mtsVct3x3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct4_t = {"_p_mtsGenericObjectProxyT_vct4_t", "mtsGenericObjectProxy< vct4 > *|mtsVct4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct4x4_t = {"_p_mtsGenericObjectProxyT_vct4x4_t", "mtsGenericObjectProxy< vct4x4 > *|mtsVct4x4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct5_t = {"_p_mtsGenericObjectProxyT_vct5_t", "mtsVct5 *|mtsGenericObjectProxy< vct5 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct6_t = {"_p_mtsGenericObjectProxyT_vct6_t", "mtsGenericObjectProxy< vct6 > *|mtsVct6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct7_t = {"_p_mtsGenericObjectProxyT_vct7_t", "mtsVct7 *|mtsGenericObjectProxy< vct7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct8_t = {"_p_mtsGenericObjectProxyT_vct8_t", "mtsGenericObjectProxy< vct8 > *|mtsVct8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vct9_t = {"_p_mtsGenericObjectProxyT_vct9_t", "mtsVct9 *|mtsGenericObjectProxy< vct9 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool1_t = {"_p_mtsGenericObjectProxyT_vctBool1_t", "mtsGenericObjectProxy< vctBool1 > *|mtsVctBool1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool2_t = {"_p_mtsGenericObjectProxyT_vctBool2_t", "mtsGenericObjectProxy< vctBool2 > *|mtsVctBool2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool3_t = {"_p_mtsGenericObjectProxyT_vctBool3_t", "mtsGenericObjectProxy< vctBool3 > *|mtsVctBool3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool4_t = {"_p_mtsGenericObjectProxyT_vctBool4_t", "mtsVctBool4 *|mtsGenericObjectProxy< vctBool4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool5_t = {"_p_mtsGenericObjectProxyT_vctBool5_t", "mtsGenericObjectProxy< vctBool5 > *|mtsVctBool5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool6_t = {"_p_mtsGenericObjectProxyT_vctBool6_t", "mtsVctBool6 *|mtsGenericObjectProxy< vctBool6 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool7_t = {"_p_mtsGenericObjectProxyT_vctBool7_t", "mtsVctBool7 *|mtsGenericObjectProxy< vctBool7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool8_t = {"_p_mtsGenericObjectProxyT_vctBool8_t", "mtsGenericObjectProxy< vctBool8 > *|mtsVctBool8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBool9_t = {"_p_mtsGenericObjectProxyT_vctBool9_t", "mtsGenericObjectProxy< vctBool9 > *|mtsVctBool9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctBoolVec_t = {"_p_mtsGenericObjectProxyT_vctBoolVec_t", "mtsVctBoolVec *|mtsGenericObjectProxy< vctBoolVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar1_t = {"_p_mtsGenericObjectProxyT_vctChar1_t", "mtsVctChar1 *|mtsGenericObjectProxy< vctChar1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar2_t = {"_p_mtsGenericObjectProxyT_vctChar2_t", "mtsGenericObjectProxy< vctChar2 > *|mtsVctChar2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar3_t = {"_p_mtsGenericObjectProxyT_vctChar3_t", "mtsGenericObjectProxy< vctChar3 > *|mtsVctChar3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar4_t = {"_p_mtsGenericObjectProxyT_vctChar4_t", "mtsVctChar4 *|mtsGenericObjectProxy< vctChar4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar5_t = {"_p_mtsGenericObjectProxyT_vctChar5_t", "mtsGenericObjectProxy< vctChar5 > *|mtsVctChar5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar6_t = {"_p_mtsGenericObjectProxyT_vctChar6_t", "mtsGenericObjectProxy< vctChar6 > *|mtsVctChar6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar7_t = {"_p_mtsGenericObjectProxyT_vctChar7_t", "mtsVctChar7 *|mtsGenericObjectProxy< vctChar7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar8_t = {"_p_mtsGenericObjectProxyT_vctChar8_t", "mtsVctChar8 *|mtsGenericObjectProxy< vctChar8 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctChar9_t = {"_p_mtsGenericObjectProxyT_vctChar9_t", "mtsGenericObjectProxy< vctChar9 > *|mtsVctChar9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctCharVec_t = {"_p_mtsGenericObjectProxyT_vctCharVec_t", "mtsVctCharVec *|mtsGenericObjectProxy< vctCharVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctDoubleMat_t = {"_p_mtsGenericObjectProxyT_vctDoubleMat_t", "mtsGenericObjectProxy< vctDoubleMat > *|mtsVctDoubleMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctDoubleVec_t = {"_p_mtsGenericObjectProxyT_vctDoubleVec_t", "mtsGenericObjectProxy< vctDoubleVec > *|mtsVctDoubleVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t = {"_p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t", "mtsGenericObjectProxy< vctDynamicVector< svlFilterSourceVideoCaptureTypes::DeviceInfo > > *|svlFilterSourceVideoCapture_DeviceList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t = {"_p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t", "mtsGenericObjectProxy< vctDynamicVector< svlFilterSourceVideoCaptureTypes::ImageFormat > > *|svlFilterSourceVideoCapture_FormatList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat1_t = {"_p_mtsGenericObjectProxyT_vctFloat1_t", "mtsGenericObjectProxy< vctFloat1 > *|mtsVctFloat1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat2_t = {"_p_mtsGenericObjectProxyT_vctFloat2_t", "mtsVctFloat2 *|mtsGenericObjectProxy< vctFloat2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat3_t = {"_p_mtsGenericObjectProxyT_vctFloat3_t", "mtsVctFloat3 *|mtsGenericObjectProxy< vctFloat3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat4_t = {"_p_mtsGenericObjectProxyT_vctFloat4_t", "mtsGenericObjectProxy< vctFloat4 > *|mtsVctFloat4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat5_t = {"_p_mtsGenericObjectProxyT_vctFloat5_t", "mtsGenericObjectProxy< vctFloat5 > *|mtsVctFloat5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat6_t = {"_p_mtsGenericObjectProxyT_vctFloat6_t", "mtsGenericObjectProxy< vctFloat6 > *|mtsVctFloat6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat7_t = {"_p_mtsGenericObjectProxyT_vctFloat7_t", "mtsVctFloat7 *|mtsGenericObjectProxy< vctFloat7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat8_t = {"_p_mtsGenericObjectProxyT_vctFloat8_t", "mtsGenericObjectProxy< vctFloat8 > *|mtsVctFloat8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloat9_t = {"_p_mtsGenericObjectProxyT_vctFloat9_t", "mtsVctFloat9 *|mtsGenericObjectProxy< vctFloat9 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloatMat_t = {"_p_mtsGenericObjectProxyT_vctFloatMat_t", "mtsVctFloatMat *|mtsGenericObjectProxy< vctFloatMat > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFloatVec_t = {"_p_mtsGenericObjectProxyT_vctFloatVec_t", "mtsGenericObjectProxy< vctFloatVec > *|mtsVctFloatVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t = {"_p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t", "mtsGenericObjectProxy< vctFrame4x4< double,VCT_ROW_MAJOR > > *|mtsVctFrm4x4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t = {"_p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t", "mtsGenericObjectProxy< vctFrameBase< vctRot3 > > *|mtsVctFrm3 *|mtsGenericObjectProxy< vctFrameBase< vctMatrixRotation3< double,VCT_ROW_MAJOR > > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt1_t = {"_p_mtsGenericObjectProxyT_vctInt1_t", "mtsVctInt1 *|mtsGenericObjectProxy< vctInt1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt2_t = {"_p_mtsGenericObjectProxyT_vctInt2_t", "mtsGenericObjectProxy< vctInt2 > *|mtsVctInt2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt3_t = {"_p_mtsGenericObjectProxyT_vctInt3_t", "mtsGenericObjectProxy< vctInt3 > *|mtsVctInt3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt4_t = {"_p_mtsGenericObjectProxyT_vctInt4_t", "mtsGenericObjectProxy< vctInt4 > *|mtsVctInt4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt5_t = {"_p_mtsGenericObjectProxyT_vctInt5_t", "mtsVctInt5 *|mtsGenericObjectProxy< vctInt5 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt6_t = {"_p_mtsGenericObjectProxyT_vctInt6_t", "mtsGenericObjectProxy< vctInt6 > *|mtsVctInt6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt7_t = {"_p_mtsGenericObjectProxyT_vctInt7_t", "mtsVctInt7 *|mtsGenericObjectProxy< vctInt7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt8_t = {"_p_mtsGenericObjectProxyT_vctInt8_t", "mtsVctInt8 *|mtsGenericObjectProxy< vctInt8 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctInt9_t = {"_p_mtsGenericObjectProxyT_vctInt9_t", "mtsGenericObjectProxy< vctInt9 > *|mtsVctInt9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctIntMat_t = {"_p_mtsGenericObjectProxyT_vctIntMat_t", "mtsGenericObjectProxy< vctIntMat > *|mtsVctIntMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctIntVec_t = {"_p_mtsGenericObjectProxyT_vctIntVec_t", "mtsVctIntVec *|mtsGenericObjectProxy< vctIntVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong1_t = {"_p_mtsGenericObjectProxyT_vctLong1_t", "mtsVctLong1 *|mtsGenericObjectProxy< vctLong1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong2_t = {"_p_mtsGenericObjectProxyT_vctLong2_t", "mtsGenericObjectProxy< vctLong2 > *|mtsVctLong2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong3_t = {"_p_mtsGenericObjectProxyT_vctLong3_t", "mtsGenericObjectProxy< vctLong3 > *|mtsVctLong3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong4_t = {"_p_mtsGenericObjectProxyT_vctLong4_t", "mtsVctLong4 *|mtsGenericObjectProxy< vctLong4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong5_t = {"_p_mtsGenericObjectProxyT_vctLong5_t", "mtsGenericObjectProxy< vctLong5 > *|mtsVctLong5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong6_t = {"_p_mtsGenericObjectProxyT_vctLong6_t", "mtsGenericObjectProxy< vctLong6 > *|mtsVctLong6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong7_t = {"_p_mtsGenericObjectProxyT_vctLong7_t", "mtsVctLong7 *|mtsGenericObjectProxy< vctLong7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong8_t = {"_p_mtsGenericObjectProxyT_vctLong8_t", "mtsVctLong8 *|mtsGenericObjectProxy< vctLong8 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLong9_t = {"_p_mtsGenericObjectProxyT_vctLong9_t", "mtsGenericObjectProxy< vctLong9 > *|mtsVctLong9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctLongVec_t = {"_p_mtsGenericObjectProxyT_vctLongVec_t", "mtsVctLongVec *|mtsGenericObjectProxy< vctLongVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t = {"_p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t", "mtsVctMatRot3 *|mtsGenericObjectProxy< vctMatrixRotation3< double,VCT_ROW_MAJOR > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort1_t = {"_p_mtsGenericObjectProxyT_vctShort1_t", "mtsGenericObjectProxy< vctShort1 > *|mtsVctShort1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort2_t = {"_p_mtsGenericObjectProxyT_vctShort2_t", "mtsGenericObjectProxy< vctShort2 > *|mtsVctShort2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort3_t = {"_p_mtsGenericObjectProxyT_vctShort3_t", "mtsVctShort3 *|mtsGenericObjectProxy< vctShort3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort4_t = {"_p_mtsGenericObjectProxyT_vctShort4_t", "mtsGenericObjectProxy< vctShort4 > *|mtsVctShort4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort5_t = {"_p_mtsGenericObjectProxyT_vctShort5_t", "mtsVctShort5 *|mtsGenericObjectProxy< vctShort5 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort6_t = {"_p_mtsGenericObjectProxyT_vctShort6_t", "mtsGenericObjectProxy< vctShort6 > *|mtsVctShort6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort7_t = {"_p_mtsGenericObjectProxyT_vctShort7_t", "mtsVctShort7 *|mtsGenericObjectProxy< vctShort7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort8_t = {"_p_mtsGenericObjectProxyT_vctShort8_t", "mtsGenericObjectProxy< vctShort8 > *|mtsVctShort8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShort9_t = {"_p_mtsGenericObjectProxyT_vctShort9_t", "mtsGenericObjectProxy< vctShort9 > *|mtsVctShort9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctShortVec_t = {"_p_mtsGenericObjectProxyT_vctShortVec_t", "mtsVctShortVec *|mtsGenericObjectProxy< vctShortVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar1_t = {"_p_mtsGenericObjectProxyT_vctUChar1_t", "mtsVctUChar1 *|mtsGenericObjectProxy< vctUChar1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar2_t = {"_p_mtsGenericObjectProxyT_vctUChar2_t", "mtsGenericObjectProxy< vctUChar2 > *|mtsVctUChar2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar3_t = {"_p_mtsGenericObjectProxyT_vctUChar3_t", "mtsGenericObjectProxy< vctUChar3 > *|mtsVctUChar3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar4_t = {"_p_mtsGenericObjectProxyT_vctUChar4_t", "mtsVctUChar4 *|mtsGenericObjectProxy< vctUChar4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar5_t = {"_p_mtsGenericObjectProxyT_vctUChar5_t", "mtsGenericObjectProxy< vctUChar5 > *|mtsVctUChar5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar6_t = {"_p_mtsGenericObjectProxyT_vctUChar6_t", "mtsGenericObjectProxy< vctUChar6 > *|mtsVctUChar6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar7_t = {"_p_mtsGenericObjectProxyT_vctUChar7_t", "mtsVctUChar7 *|mtsGenericObjectProxy< vctUChar7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar8_t = {"_p_mtsGenericObjectProxyT_vctUChar8_t", "mtsVctUChar8 *|mtsGenericObjectProxy< vctUChar8 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUChar9_t = {"_p_mtsGenericObjectProxyT_vctUChar9_t", "mtsGenericObjectProxy< vctUChar9 > *|mtsVctUChar9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUCharVec_t = {"_p_mtsGenericObjectProxyT_vctUCharVec_t", "mtsVctUCharVec *|mtsGenericObjectProxy< vctUCharVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt1_t = {"_p_mtsGenericObjectProxyT_vctUInt1_t", "mtsGenericObjectProxy< vctUInt1 > *|mtsVctUInt1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt2_t = {"_p_mtsGenericObjectProxyT_vctUInt2_t", "mtsGenericObjectProxy< vctUInt2 > *|mtsVctUInt2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt3_t = {"_p_mtsGenericObjectProxyT_vctUInt3_t", "mtsVctUInt3 *|mtsGenericObjectProxy< vctUInt3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt4_t = {"_p_mtsGenericObjectProxyT_vctUInt4_t", "mtsGenericObjectProxy< vctUInt4 > *|mtsVctUInt4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt5_t = {"_p_mtsGenericObjectProxyT_vctUInt5_t", "mtsVctUInt5 *|mtsGenericObjectProxy< vctUInt5 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt6_t = {"_p_mtsGenericObjectProxyT_vctUInt6_t", "mtsGenericObjectProxy< vctUInt6 > *|mtsVctUInt6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt7_t = {"_p_mtsGenericObjectProxyT_vctUInt7_t", "mtsVctUInt7 *|mtsGenericObjectProxy< vctUInt7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt8_t = {"_p_mtsGenericObjectProxyT_vctUInt8_t", "mtsGenericObjectProxy< vctUInt8 > *|mtsVctUInt8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUInt9_t = {"_p_mtsGenericObjectProxyT_vctUInt9_t", "mtsGenericObjectProxy< vctUInt9 > *|mtsVctUInt9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUIntVec_t = {"_p_mtsGenericObjectProxyT_vctUIntVec_t", "mtsVctUIntVec *|mtsGenericObjectProxy< vctUIntVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong1_t = {"_p_mtsGenericObjectProxyT_vctULong1_t", "mtsVctULong1 *|mtsGenericObjectProxy< vctULong1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong2_t = {"_p_mtsGenericObjectProxyT_vctULong2_t", "mtsGenericObjectProxy< vctULong2 > *|mtsVctULong2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong3_t = {"_p_mtsGenericObjectProxyT_vctULong3_t", "mtsGenericObjectProxy< vctULong3 > *|mtsVctULong3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong4_t = {"_p_mtsGenericObjectProxyT_vctULong4_t", "mtsVctULong4 *|mtsGenericObjectProxy< vctULong4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong5_t = {"_p_mtsGenericObjectProxyT_vctULong5_t", "mtsGenericObjectProxy< vctULong5 > *|mtsVctULong5 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong6_t = {"_p_mtsGenericObjectProxyT_vctULong6_t", "mtsGenericObjectProxy< vctULong6 > *|mtsVctULong6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong7_t = {"_p_mtsGenericObjectProxyT_vctULong7_t", "mtsVctULong7 *|mtsGenericObjectProxy< vctULong7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong8_t = {"_p_mtsGenericObjectProxyT_vctULong8_t", "mtsVctULong8 *|mtsGenericObjectProxy< vctULong8 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULong9_t = {"_p_mtsGenericObjectProxyT_vctULong9_t", "mtsGenericObjectProxy< vctULong9 > *|mtsVctULong9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctULongVec_t = {"_p_mtsGenericObjectProxyT_vctULongVec_t", "mtsVctULongVec *|mtsGenericObjectProxy< vctULongVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort1_t = {"_p_mtsGenericObjectProxyT_vctUShort1_t", "mtsGenericObjectProxy< vctUShort1 > *|mtsVctUShort1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort2_t = {"_p_mtsGenericObjectProxyT_vctUShort2_t", "mtsGenericObjectProxy< vctUShort2 > *|mtsVctUShort2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort3_t = {"_p_mtsGenericObjectProxyT_vctUShort3_t", "mtsVctUShort3 *|mtsGenericObjectProxy< vctUShort3 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort4_t = {"_p_mtsGenericObjectProxyT_vctUShort4_t", "mtsGenericObjectProxy< vctUShort4 > *|mtsVctUShort4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort5_t = {"_p_mtsGenericObjectProxyT_vctUShort5_t", "mtsVctUShort5 *|mtsGenericObjectProxy< vctUShort5 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort6_t = {"_p_mtsGenericObjectProxyT_vctUShort6_t", "mtsGenericObjectProxy< vctUShort6 > *|mtsVctUShort6 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort7_t = {"_p_mtsGenericObjectProxyT_vctUShort7_t", "mtsVctUShort7 *|mtsGenericObjectProxy< vctUShort7 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort8_t = {"_p_mtsGenericObjectProxyT_vctUShort8_t", "mtsGenericObjectProxy< vctUShort8 > *|mtsVctUShort8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShort9_t = {"_p_mtsGenericObjectProxyT_vctUShort9_t", "mtsGenericObjectProxy< vctUShort9 > *|mtsVctUShort9 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsGenericObjectProxyT_vctUShortVec_t = {"_p_mtsGenericObjectProxyT_vctUShortVec_t", "mtsVctUShortVec *|mtsGenericObjectProxy< vctUShortVec > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsInterfaceQueueingPolicy = {"_p_mtsInterfaceQueueingPolicy", "enum mtsInterfaceQueueingPolicy *|mtsInterfaceQueueingPolicy *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_bool_t = {"_p_mtsMatrixT_bool_t", "mtsMatrix< bool > *|mtsBoolMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_char_t = {"_p_mtsMatrixT_char_t", "mtsMatrix< char > *|mtsCharMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_double_t = {"_p_mtsMatrixT_double_t", "mtsMatrix< double > *|mtsDoubleMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_float_t = {"_p_mtsMatrixT_float_t", "mtsFloatMat *|mtsMatrix< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_int_t = {"_p_mtsMatrixT_int_t", "mtsIntMat *|mtsMatrix< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_long_t = {"_p_mtsMatrixT_long_t", "mtsMatrix< long > *|mtsLongMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_short_t = {"_p_mtsMatrixT_short_t", "mtsMatrix< short > *|mtsShortMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_unsigned_char_t = {"_p_mtsMatrixT_unsigned_char_t", "mtsMatrix< unsigned char > *|mtsUCharMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_unsigned_int_t = {"_p_mtsMatrixT_unsigned_int_t", "mtsUIntMat *|mtsMatrix< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_unsigned_long_t = {"_p_mtsMatrixT_unsigned_long_t", "mtsMatrix< unsigned long > *|mtsULongMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsMatrixT_unsigned_short_t = {"_p_mtsMatrixT_unsigned_short_t", "mtsMatrix< unsigned short > *|mtsUShortMat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsRequiredType = {"_p_mtsRequiredType", "enum mtsRequiredType *|mtsRequiredType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_bool_t = {"_p_mtsVectorT_bool_t", "mtsVector< bool > *|mtsBoolVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_char_t = {"_p_mtsVectorT_char_t", "mtsVector< char > *|mtsCharVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_double_t = {"_p_mtsVectorT_double_t", "mtsDoubleVec *|mtsVector< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_float_t = {"_p_mtsVectorT_float_t", "mtsVector< float > *|mtsFloatVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_int_t = {"_p_mtsVectorT_int_t", "mtsIntVec *|mtsVector< int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_long_t = {"_p_mtsVectorT_long_t", "mtsLongVec *|mtsVector< long > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_short_t = {"_p_mtsVectorT_short_t", "mtsVector< short > *|mtsShortVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_std__string_t = {"_p_mtsVectorT_std__string_t", "mtsStdStringVec *|mtsVector< std::string > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_unsigned_char_t = {"_p_mtsVectorT_unsigned_char_t", "mtsVector< unsigned char > *|mtsUCharVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_unsigned_int_t = {"_p_mtsVectorT_unsigned_int_t", "mtsUIntVec *|mtsVector< unsigned int > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_unsigned_long_t = {"_p_mtsVectorT_unsigned_long_t", "mtsULongVec *|mtsVector< unsigned long > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_mtsVectorT_unsigned_short_t = {"_p_mtsVectorT_unsigned_short_t", "mtsVector< unsigned short > *|mtsUShortVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndimension_type = {"_p_ndimension_type", "ndimension_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_nindex_type = {"_p_nindex_type", "nindex_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_nsize_type = {"_p_nsize_type", "nsize_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_nstride_type = {"_p_nstride_type", "nstride_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_off_type = {"_p_off_type", "off_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_openmode = {"_p_openmode", "openmode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo = {"_p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo", "svlFilterSourceVideoCaptureTypes::DeviceInfo **|svlFilterSourceVideoCapture::DeviceInfo **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_svlFilterSourceVideoCaptureTypes__ImageFormat = {"_p_p_svlFilterSourceVideoCaptureTypes__ImageFormat", "svlFilterSourceVideoCaptureTypes::ImageFormat **|svlFilterSourceVideoCapture::ImageFormat **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_svlVideoIO__Compression = {"_p_p_svlVideoIO__Compression", "svlVideoIO::Compression **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pos_type = {"_p_pos_type", "pos_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ptrdiff_t = {"_p_ptrdiff_t", "ptrdiff_t *|vct::difference_type *|vct::stride_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_seekdir = {"_p_seekdir", "seekdir *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *|cmnLogMask *|cmnLogLevel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_t = {"_p_size_t", "std::streamsize *|vct::size_type *|vct::index_type *|size_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_size_type = {"_p_size_type", "size_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_state_type = {"_p_state_type", "state_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t = {"_p_std__basic_iosT_char_std__char_traitsT_char_t_t", "std::basic_ios< char > *|std::basic_ios< char,std::char_traits< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t = {"_p_std__basic_iostreamT_char_std__char_traitsT_char_t_t", "std::basic_iostream< char,std::char_traits< char > > *|std::basic_iostream< char > *|std::iostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t = {"_p_std__basic_istreamT_char_std__char_traitsT_char_t_t", "std::basic_istream< char > *|std::basic_istream< char,std::char_traits< char > > *|std::istream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t = {"_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t", "std::basic_ostream< char > *|std::basic_ostream< char,std::char_traits< char > > *|std::ostream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t = {"_p_std__basic_streambufT_char_std__char_traitsT_char_t_t", "std::basic_streambuf< char,std::char_traits< char > > *|std::basic_streambuf< char > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t = {"_p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t = {"_p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t", 0, 0, 0, 0, 0};
static swig_type_info _swigt__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t = {"_p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t", "std::basic_string< char,std::char_traits< char >,std::allocator< char > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__invalid_argument = {"_p_std__invalid_argument", "std::invalid_argument *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ios_base = {"_p_std__ios_base", "std::ios_base *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__locale = {"_p_std__locale", "std::locale *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_char_std__allocatorT_char_t_t = {"_p_std__vectorT_char_std__allocatorT_char_t_t", "std::vector< char,std::allocator< char > > *|stdCharVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_double_std__allocatorT_double_t_t = {"_p_std__vectorT_double_std__allocatorT_double_t_t", "std::vector< double,std::allocator< double > > *|stdDoubleVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t = {"_p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t", "mtsCommandsQualifiedReadDescription *|std::vector< mtsCommandQualifiedReadDescription,std::allocator< mtsCommandQualifiedReadDescription > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t = {"_p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t", "mtsCommandsReadDescription *|std::vector< mtsCommandReadDescription,std::allocator< mtsCommandReadDescription > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t = {"_p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t", "mtsCommandsVoidDescription *|mtsEventHandlersVoidDescription *|std::vector< mtsCommandVoidDescription,std::allocator< mtsCommandVoidDescription > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t = {"_p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t", "mtsCommandsVoidReturnDescription *|std::vector< mtsCommandVoidReturnDescription,std::allocator< mtsCommandVoidReturnDescription > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t = {"_p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t", "mtsCommandsWriteDescription *|mtsEventHandlersWriteDescription *|std::vector< mtsCommandWriteDescription,std::allocator< mtsCommandWriteDescription > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t = {"_p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t", "std::vector< mtsCommandWriteReturnDescription,std::allocator< mtsCommandWriteReturnDescription > > *|mtsCommandsWriteReturnDescription *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t = {"_p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t", "std::vector< mtsDescriptionComponentClass,std::allocator< mtsDescriptionComponentClass > > *|mtsDescriptionComponentClassVec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t = {"_p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t", "mtsDescriptionConnectionVec *|std::vector< mtsDescriptionConnection,std::allocator< mtsDescriptionConnection > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t = {"_p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t", "std::vector< mtsEventVoidDescription,std::allocator< mtsEventVoidDescription > > *|mtsEventsVoidDescription *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t = {"_p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t", "std::vector< mtsEventWriteDescription,std::allocator< mtsEventWriteDescription > > *|mtsEventsWriteDescription *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t = {"_p_std__vectorT_std__string_std__allocatorT_std__string_t_t", "stdStringVec *|mtsCommandPointerNames *|std::vector< std::string,std::allocator< std::string > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t = {"_p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t", "std::vector< svlSampleImageRGB,std::allocator< svlSampleImageRGB > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_vct3_std__allocatorT_vct3_t_t = {"_p_std__vectorT_vct3_std__allocatorT_vct3_t_t", "std::vector< vct3,std::allocator< vct3 > > *|stdVct3Vec *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_streamoff = {"_p_streamoff", "std::basic_streambuf< char >::off_type *|std::basic_ostream< char >::off_type *|std::basic_istream< char >::off_type *|streamoff *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_streampos = {"_p_streampos", "std::basic_streambuf< char >::pos_type *|std::basic_ostream< char >::pos_type *|std::basic_istream< char >::pos_type *|streampos *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_streamsize = {"_p_streamsize", "streamsize *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_stride_type = {"_p_stride_type", "stride_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlBufferSample = {"_p_svlBufferSample", "svlBufferSample *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlCameraGeometry = {"_p_svlCameraGeometry", "svlCameraGeometry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterBase = {"_p_svlFilterBase", "svlFilterBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterImageCameraCalibrationOpenCV = {"_p_svlFilterImageCameraCalibrationOpenCV", "svlFilterImageCameraCalibrationOpenCV *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterImageChannelSwapper = {"_p_svlFilterImageChannelSwapper", "svlFilterImageChannelSwapper *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterImageFileWriter = {"_p_svlFilterImageFileWriter", "svlFilterImageFileWriter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterImageRectifier = {"_p_svlFilterImageRectifier", "svlFilterImageRectifier *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterImageResizer = {"_p_svlFilterImageResizer", "svlFilterImageResizer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterImageWindow = {"_p_svlFilterImageWindow", "svlFilterImageWindow *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterInput = {"_p_svlFilterInput", "svlFilterInput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterOutput = {"_p_svlFilterOutput", "svlFilterOutput *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceBase = {"_p_svlFilterSourceBase", "svlFilterSourceBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceBuffer = {"_p_svlFilterSourceBuffer", "svlFilterSourceBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCapture = {"_p_svlFilterSourceVideoCapture", "svlFilterSourceVideoCapture *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__DeviceInfo = {"_p_svlFilterSourceVideoCaptureTypes__DeviceInfo", "svlFilterSourceVideoCaptureTypes::DeviceInfo *|svlFilterSourceVideoCapture::DeviceInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__ExternalTrigger = {"_p_svlFilterSourceVideoCaptureTypes__ExternalTrigger", "svlFilterSourceVideoCapture::ExternalTrigger *|svlFilterSourceVideoCaptureTypes::ExternalTrigger *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__ImageFormat = {"_p_svlFilterSourceVideoCaptureTypes__ImageFormat", "svlFilterSourceVideoCaptureTypes::ImageFormat *|svlFilterSourceVideoCapture::ImageFormat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__ImageProperties = {"_p_svlFilterSourceVideoCaptureTypes__ImageProperties", "svlFilterSourceVideoCapture::ImageProperties *|svlFilterSourceVideoCaptureTypes::ImageProperties *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__PatternType = {"_p_svlFilterSourceVideoCaptureTypes__PatternType", "svlFilterSourceVideoCaptureTypes::PatternType *|svlFilterSourceVideoCapture::PatternType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__PixelType = {"_p_svlFilterSourceVideoCaptureTypes__PixelType", "svlFilterSourceVideoCaptureTypes::PixelType *|svlFilterSourceVideoCapture::PixelType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoCaptureTypes__PlatformType = {"_p_svlFilterSourceVideoCaptureTypes__PlatformType", "svlFilterSourceVideoCaptureTypes::PlatformType *|svlFilterSourceVideoCapture::PlatformType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterSourceVideoFile = {"_p_svlFilterSourceVideoFile", "svlFilterSourceVideoFile *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlFilterVideoFileWriter = {"_p_svlFilterVideoFileWriter", "svlFilterVideoFileWriter *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageProcessingHelper__BlobDetectorInternals = {"_p_svlImageProcessingHelper__BlobDetectorInternals", "svlImageProcessingHelper::BlobDetectorInternals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageProcessingHelper__EllipseFitterInternals = {"_p_svlImageProcessingHelper__EllipseFitterInternals", "svlImageProcessingHelper::EllipseFitterInternals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageProcessingHelper__ExposureInternals = {"_p_svlImageProcessingHelper__ExposureInternals", "svlImageProcessingHelper::ExposureInternals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageProcessingHelper__RectificationInternals = {"_p_svlImageProcessingHelper__RectificationInternals", "svlImageProcessingHelper::RectificationInternals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageProcessingInternals = {"_p_svlImageProcessingInternals", "svlImageProcessingInternals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageProcessing__Internals = {"_p_svlImageProcessing__Internals", "svlImageProcessing::Internals *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlImageRGB = {"_p_svlImageRGB", "svlImageRGB *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlPixelType = {"_p_svlPixelType", "svlPixelType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlProcInfo = {"_p_svlProcInfo", "svlProcInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlRect = {"_p_svlRect", "svlRect *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSample = {"_p_svlSample", "svlSample *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleBlobs = {"_p_svlSampleBlobs", "svlSampleBlobs *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleCameraGeometry = {"_p_svlSampleCameraGeometry", "svlSampleCameraGeometry *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImage = {"_p_svlSampleImage", "svlSampleImage *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImage3DMap = {"_p_svlSampleImage3DMap", "svlSampleImage3DMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImageCustomT_unsigned_char_3_1_t = {"_p_svlSampleImageCustomT_unsigned_char_3_1_t", "svlSampleImageCustom< unsigned char,3,1 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImageMono32 = {"_p_svlSampleImageMono32", "svlSampleImageMono32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImageMono32Stereo = {"_p_svlSampleImageMono32Stereo", "svlSampleImageMono32Stereo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImageMono8 = {"_p_svlSampleImageMono8", "svlSampleImageMono8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleImageMono8Stereo = {"_p_svlSampleImageMono8Stereo", "svlSampleImageMono8Stereo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleMatrix = {"_p_svlSampleMatrix", "svlSampleMatrix *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlSampleMatrixFloat = {"_p_svlSampleMatrixFloat", "svlSampleMatrixFloat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlStreamManager = {"_p_svlStreamManager", "svlStreamManager *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlStreamType = {"_p_svlStreamType", "svlStreamType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlVidCapSrcBase = {"_p_svlVidCapSrcBase", "svlVidCapSrcBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlVidCapSrcDialogThread = {"_p_svlVidCapSrcDialogThread", "svlVidCapSrcDialogThread *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlVideoCodecCVI = {"_p_svlVideoCodecCVI", "svlVideoCodecCVI *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlVideoIO__Compression = {"_p_svlVideoIO__Compression", "svlVideoIO::Compression *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_svlWindowEventHandlerBase = {"_p_svlWindowEventHandlerBase", "svlWindowEventHandlerBase *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_swig__SwigPyIterator = {"_p_swig__SwigPyIterator", "swig::SwigPyIterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_traits_type = {"_p_traits_type", "traits_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_int = {"_p_unsigned_int", "ConnectionIDType *|unsigned int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long = {"_p_unsigned_long", "unsigned long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_long_long = {"_p_unsigned_long_long", "unsigned long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_short = {"_p_unsigned_short", "unsigned short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_value_type = {"_p_value_type", "value_type *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vct3x3 = {"_p_vct3x3", "vct3x3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctAngleRotation2 = {"_p_vctAngleRotation2", "vctAngleRotation2 *|vctAnRot2 *|vctFloatAnRot2 *|vctDoubleAnRot2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctAxisAngleRotation3T_double_t = {"_p_vctAxisAngleRotation3T_double_t", "vctDoubleAxAnRot3 *|vctAxAnRot3 *|vctAxisAngleRotation3< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctAxisAngleRotation3T_float_t = {"_p_vctAxisAngleRotation3T_float_t", "vctFloatAxAnRot3 *|vctAxisAngleRotation3< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctBarycentricVectorT_double_1_t = {"_p_vctBarycentricVectorT_double_1_t", "vctBarycentricVector< double,1 > *|vctBarycentric1 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctBarycentricVectorT_double_2_t = {"_p_vctBarycentricVectorT_double_2_t", "vctBarycentric2 *|vctBarycentricVector< double,2 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctBarycentricVectorT_double_3_t = {"_p_vctBarycentricVectorT_double_3_t", "vctBarycentricVector< double,3 > *|vctBarycentric3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctBarycentricVectorT_double_4_t = {"_p_vctBarycentricVectorT_double_4_t", "vctBarycentric4 *|vctBarycentricVector< double,4 > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctDynamicMatrixT_double_t = {"_p_vctDynamicMatrixT_double_t", "vctDynamicMatrix< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t = {"_p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t", "vctFixedSizeVector< svlImageProcessing::Internals,SVL_MAX_CHANNELS > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrame4x4T_double_VCT_ROW_MAJOR_t = {"_p_vctFrame4x4T_double_VCT_ROW_MAJOR_t", "vctFrame4x4< double,VCT_ROW_MAJOR > *|vctFrm4x4 *|vctDoubleFrm4x4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrame4x4T_float_VCT_ROW_MAJOR_t = {"_p_vctFrame4x4T_float_VCT_ROW_MAJOR_t", "vctFrame4x4< float,VCT_ROW_MAJOR > *|vctFloatFrm4x4 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrameBaseT_vctMatrixRotation2T_double_t_t = {"_p_vctFrameBaseT_vctMatrixRotation2T_double_t_t", "vctFrameBase< vctMatrixRotation2< double > > *|vctFrm2 *|vctDoubleMatFrm2 *|vctMatFrm2 *|vctDoubleFrm2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrameBaseT_vctMatrixRotation2T_float_t_t = {"_p_vctFrameBaseT_vctMatrixRotation2T_float_t_t", "vctFloatMatFrm2 *|vctFloatFrm2 *|vctFrameBase< vctMatrixRotation2< float > > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t = {"_p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t", "vctFrameBase< vctMatrixRotation3< double,VCT_ROW_MAJOR > > *|vctFrm3 *|vctDoubleMatFrm3 *|vctMatFrm3 *|vctDoubleFrm3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t = {"_p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t", "vctFrameBase< vctMatrixRotation3< float,VCT_ROW_MAJOR > > *|vctFloatMatFrm3 *|vctFloatFrm3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t = {"_p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t", "vctFrameBase< vctQuaternionRotation3< double > > *|vctDoubleQuatFrm3 *|vctQuatFrm3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t = {"_p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t", "vctFrameBase< vctQuaternionRotation3< float > > *|vctFloatQuatFrm3 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctMatrixRotation2T_double_t = {"_p_vctMatrixRotation2T_double_t", "vctRot2 *|vctDoubleMatRot2 *|vctMatRot2 *|vctMatrixRotation2< double > *|vctDoubleRot2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctMatrixRotation2T_float_t = {"_p_vctMatrixRotation2T_float_t", "vctMatrixRotation2< float > *|vctFloatMatRot2 *|vctFloatRot2 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t = {"_p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t", "vctRot3 *|vctDoubleMatRot3 *|vctMatRot3 *|vctDoubleRot3 *|vctMatrixRotation3< double,VCT_ROW_MAJOR > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t = {"_p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t", "vctFloatMatRot3 *|vctFloatRot3 *|vctMatrixRotation3< float,VCT_ROW_MAJOR > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctQuaternionRotation3T_double_t = {"_p_vctQuaternionRotation3T_double_t", "vctDoubleQuatRot3 *|vctQuatRot3 *|vctQuaternionRotation3< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctQuaternionRotation3T_float_t = {"_p_vctQuaternionRotation3T_float_t", "vctFloatQuatRot3 *|vctQuaternionRotation3< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctQuaternionT_double_t = {"_p_vctQuaternionT_double_t", "vctQuat *|vctDoubleQuat *|vctQuaternion< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctQuaternionT_float_t = {"_p_vctQuaternionT_float_t", "vctFloatQuat *|vctQuaternion< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctRodriguezRotation3T_double_t = {"_p_vctRodriguezRotation3T_double_t", "vctDoubleRodRot3 *|vctRodRot3 *|vctRodriguezRotation3< double > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_vctRodriguezRotation3T_float_t = {"_p_vctRodriguezRotation3T_float_t", "vctFloatRodRot3 *|vctRodriguezRotation3< float > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_ActionType,
  &_swigt__p_AngleType,
  &_swigt__p_BaseClassType,
  &_swigt__p_BaseType,
  &_swigt__p_BoolType,
  &_swigt__p_CISSTNETLIB_DOUBLE,
  &_swigt__p_CISSTNETLIB_INTEGER,
  &_swigt__p_CallableType,
  &_swigt__p_ChannelContainerType,
  &_swigt__p_ChannelType,
  &_swigt__p_CollectorFileFloatingNotation,
  &_swigt__p_CollectorFileFormat,
  &_swigt__p_CommandInternalMapType,
  &_swigt__p_CommandQualifiedReadMapType,
  &_swigt__p_CommandReadMapType,
  &_swigt__p_CommandType,
  &_swigt__p_CommandVoidMapType,
  &_swigt__p_CommandVoidReturnMapType,
  &_swigt__p_CommandWriteMapType,
  &_swigt__p_CommandWriteReturnMapType,
  &_swigt__p_CompressionData,
  &_swigt__p_Config,
  &_swigt__p_ConstIteratorType,
  &_swigt__p_ContainerType,
  &_swigt__p_DeRefType,
  &_swigt__p_DeviceInfo,
  &_swigt__p_DeviceInfoListType,
  &_swigt__p_ElementType,
  &_swigt__p_EntryType,
  &_swigt__p_EventVoidMapType,
  &_swigt__p_EventWriteMapType,
  &_swigt__p_ExternalTrigger,
  &_swigt__p_FormatListType,
  &_swigt__p_ImageFormat,
  &_swigt__p_ImageProperties,
  &_swigt__p_ImagePropertiesMask,
  &_swigt__p_IplImage,
  &_swigt__p_IteratorType,
  &_swigt__p_MatrixType,
  &_swigt__p_MultiplexerConstIteratorType,
  &_swigt__p_MultiplexerContainerType,
  &_swigt__p_MultiplexerIteratorType,
  &_swigt__p_NormType,
  &_swigt__p_PatternType,
  &_swigt__p_PixelType,
  &_swigt__p_PlatformType,
  &_swigt__p_RefType,
  &_swigt__p_RotationType,
  &_swigt__p_ServicesContainerType,
  &_swigt__p_StreamBufType,
  &_swigt__p_ThisType,
  &_swigt__p_TimeTicksType,
  &_swigt__p_TranslationType,
  &_swigt__p_Type,
  &_swigt__p_TypeTraits,
  &_swigt__p_VaArgPromotion,
  &_swigt__p_VectorType,
  &_swigt__p_allocator_type,
  &_swigt__p_bool,
  &_swigt__p_char,
  &_swigt__p_char_type,
  &_swigt__p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_cmnClassServicesBase,
  &_swigt__p_cmnGenericObject,
  &_swigt__p_cmnGenericObjectProxyT_bool_t,
  &_swigt__p_cmnGenericObjectProxyT_char_t,
  &_swigt__p_cmnGenericObjectProxyT_double_t,
  &_swigt__p_cmnGenericObjectProxyT_int_t,
  &_swigt__p_cmnGenericObjectProxyT_long_long_t,
  &_swigt__p_cmnGenericObjectProxyT_long_t,
  &_swigt__p_cmnGenericObjectProxyT_short_t,
  &_swigt__p_cmnGenericObjectProxyT_unsigned_char_t,
  &_swigt__p_cmnGenericObjectProxyT_unsigned_int_t,
  &_swigt__p_cmnGenericObjectProxyT_unsigned_long_long_t,
  &_swigt__p_cmnGenericObjectProxyT_unsigned_long_t,
  &_swigt__p_cmnGenericObjectProxyT_unsigned_short_t,
  &_swigt__p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_cmnPath,
  &_swigt__p_const_iterator,
  &_swigt__p_const_reverse_iterator,
  &_swigt__p_cv__Mat,
  &_swigt__p_difference_type,
  &_swigt__p_dimension_type,
  &_swigt__p_double,
  &_swigt__p_f_enum_std__ios_base__event_r_std__ios_base_int__void,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_f_r_std__ios_base__r_std__ios_base,
  &_swigt__p_first_type,
  &_swigt__p_float,
  &_swigt__p_fmtflags,
  &_swigt__p_index_type,
  &_swigt__p_int,
  &_swigt__p_int_type,
  &_swigt__p_ios_base__openmode,
  &_swigt__p_ios_base__seekdir,
  &_swigt__p_iostate,
  &_swigt__p_iterator,
  &_swigt__p_key_type,
  &_swigt__p_long,
  &_swigt__p_long_double,
  &_swigt__p_long_long,
  &_swigt__p_mapped_type,
  &_swigt__p_mtsBlockingType,
  &_swigt__p_mtsCollectorBase,
  &_swigt__p_mtsCollectorState,
  &_swigt__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t,
  &_swigt__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t,
  &_swigt__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t,
  &_swigt__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t,
  &_swigt__p_mtsCommandQueueingPolicy,
  &_swigt__p_mtsComponent,
  &_swigt__p_mtsComponentConstructorNameAndArgT_double_t,
  &_swigt__p_mtsComponentConstructorNameAndArgT_int_t,
  &_swigt__p_mtsComponentConstructorNameAndArgT_long_t,
  &_swigt__p_mtsComponentConstructorNameAndArgT_std__string_t,
  &_swigt__p_mtsComponentConstructorNameAndArgT_unsigned_int_t,
  &_swigt__p_mtsComponentConstructorNameAndArgT_unsigned_long_t,
  &_swigt__p_mtsComponentWithManagement,
  &_swigt__p_mtsDoubleAnRot2,
  &_swigt__p_mtsDoubleAxAnRot3,
  &_swigt__p_mtsDoubleFrm4x4,
  &_swigt__p_mtsDoubleMatFrm3,
  &_swigt__p_mtsDoubleMatRot2,
  &_swigt__p_mtsDoubleMatRot3,
  &_swigt__p_mtsDoubleQuat,
  &_swigt__p_mtsDoubleQuatFrm3,
  &_swigt__p_mtsDoubleQuatRot3,
  &_swigt__p_mtsDoubleRodRot3,
  &_swigt__p_mtsEventQueueingPolicy,
  &_swigt__p_mtsFloatAnRot2,
  &_swigt__p_mtsFloatAxAnRot3,
  &_swigt__p_mtsFloatFrm4x4,
  &_swigt__p_mtsFloatMatFrm3,
  &_swigt__p_mtsFloatMatRot2,
  &_swigt__p_mtsFloatMatRot3,
  &_swigt__p_mtsFloatQuat,
  &_swigt__p_mtsFloatQuatFrm3,
  &_swigt__p_mtsFloatQuatRot3,
  &_swigt__p_mtsFloatRodRot3,
  &_swigt__p_mtsGenericObject,
  &_swigt__p_mtsGenericObjectProxyBaseT_bool_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_double_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_float_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_int_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_long_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_mtsComponentState_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_short_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_std__string_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_unsigned_int_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_unsigned_long_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_unsigned_short_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct2x2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct3x3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct4x4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vct9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBool9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctBoolVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctChar9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctCharVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctDoubleMat_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctDoubleVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloat9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloatMat_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFloatVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctInt9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctIntMat_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctIntVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLong9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctLongVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShort9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctShortVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUChar9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUCharVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUInt9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUIntVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULong9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctULongVec_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort1_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort2_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort3_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort4_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort5_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort6_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort7_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort8_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShort9_t,
  &_swigt__p_mtsGenericObjectProxyBaseT_vctUShortVec_t,
  &_swigt__p_mtsGenericObjectProxyT_bool_t,
  &_swigt__p_mtsGenericObjectProxyT_char_t,
  &_swigt__p_mtsGenericObjectProxyT_double_t,
  &_swigt__p_mtsGenericObjectProxyT_float_t,
  &_swigt__p_mtsGenericObjectProxyT_int_t,
  &_swigt__p_mtsGenericObjectProxyT_long_long_t,
  &_swigt__p_mtsGenericObjectProxyT_long_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsCommandReadDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsComponentStateChange_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsComponentState_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsComponentStatusControl_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsDescriptionComponent_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsDescriptionConnection_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsDescriptionInterface_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsEventVoidDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsEventWriteDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsExecutionResult_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t,
  &_swigt__p_mtsGenericObjectProxyT_short_t,
  &_swigt__p_mtsGenericObjectProxyT_std__string_t,
  &_swigt__p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t,
  &_swigt__p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t,
  &_swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t,
  &_swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t,
  &_swigt__p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t,
  &_swigt__p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t,
  &_swigt__p_mtsGenericObjectProxyT_unsigned_char_t,
  &_swigt__p_mtsGenericObjectProxyT_unsigned_int_t,
  &_swigt__p_mtsGenericObjectProxyT_unsigned_long_t,
  &_swigt__p_mtsGenericObjectProxyT_unsigned_short_t,
  &_swigt__p_mtsGenericObjectProxyT_vct1_t,
  &_swigt__p_mtsGenericObjectProxyT_vct2_t,
  &_swigt__p_mtsGenericObjectProxyT_vct2x2_t,
  &_swigt__p_mtsGenericObjectProxyT_vct3_t,
  &_swigt__p_mtsGenericObjectProxyT_vct3x3_t,
  &_swigt__p_mtsGenericObjectProxyT_vct4_t,
  &_swigt__p_mtsGenericObjectProxyT_vct4x4_t,
  &_swigt__p_mtsGenericObjectProxyT_vct5_t,
  &_swigt__p_mtsGenericObjectProxyT_vct6_t,
  &_swigt__p_mtsGenericObjectProxyT_vct7_t,
  &_swigt__p_mtsGenericObjectProxyT_vct8_t,
  &_swigt__p_mtsGenericObjectProxyT_vct9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBool9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctBoolVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctChar9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctCharVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctDoubleMat_t,
  &_swigt__p_mtsGenericObjectProxyT_vctDoubleVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t,
  &_swigt__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloat9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloatMat_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFloatVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t,
  &_swigt__p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctInt9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctIntMat_t,
  &_swigt__p_mtsGenericObjectProxyT_vctIntVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLong9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctLongVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShort9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctShortVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUChar9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUCharVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUInt9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUIntVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULong9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctULongVec_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort1_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort2_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort3_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort4_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort5_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort6_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort7_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort8_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShort9_t,
  &_swigt__p_mtsGenericObjectProxyT_vctUShortVec_t,
  &_swigt__p_mtsInterface,
  &_swigt__p_mtsInterfaceProvided,
  &_swigt__p_mtsInterfaceQueueingPolicy,
  &_swigt__p_mtsInterfaceRequired,
  &_swigt__p_mtsIntervalStatistics,
  &_swigt__p_mtsManagerComponentServices,
  &_swigt__p_mtsManagerLocal,
  &_swigt__p_mtsManagerLocalInterface,
  &_swigt__p_mtsMatrixT_bool_t,
  &_swigt__p_mtsMatrixT_char_t,
  &_swigt__p_mtsMatrixT_double_t,
  &_swigt__p_mtsMatrixT_float_t,
  &_swigt__p_mtsMatrixT_int_t,
  &_swigt__p_mtsMatrixT_long_t,
  &_swigt__p_mtsMatrixT_short_t,
  &_swigt__p_mtsMatrixT_unsigned_char_t,
  &_swigt__p_mtsMatrixT_unsigned_int_t,
  &_swigt__p_mtsMatrixT_unsigned_long_t,
  &_swigt__p_mtsMatrixT_unsigned_short_t,
  &_swigt__p_mtsRequiredType,
  &_swigt__p_mtsStateIndex,
  &_swigt__p_mtsTask,
  &_swigt__p_mtsTaskContinuous,
  &_swigt__p_mtsTaskContinuousConstructorArg,
  &_swigt__p_mtsTaskFromSignal,
  &_swigt__p_mtsTaskMain,
  &_swigt__p_mtsTaskPeriodic,
  &_swigt__p_mtsTaskPeriodicConstructorArg,
  &_swigt__p_mtsVectorT_bool_t,
  &_swigt__p_mtsVectorT_char_t,
  &_swigt__p_mtsVectorT_double_t,
  &_swigt__p_mtsVectorT_float_t,
  &_swigt__p_mtsVectorT_int_t,
  &_swigt__p_mtsVectorT_long_t,
  &_swigt__p_mtsVectorT_short_t,
  &_swigt__p_mtsVectorT_std__string_t,
  &_swigt__p_mtsVectorT_unsigned_char_t,
  &_swigt__p_mtsVectorT_unsigned_int_t,
  &_swigt__p_mtsVectorT_unsigned_long_t,
  &_swigt__p_mtsVectorT_unsigned_short_t,
  &_swigt__p_ndimension_type,
  &_swigt__p_nindex_type,
  &_swigt__p_nsize_type,
  &_swigt__p_nstride_type,
  &_swigt__p_off_type,
  &_swigt__p_openmode,
  &_swigt__p_osaSerialPort,
  &_swigt__p_osaTimeServer,
  &_swigt__p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo,
  &_swigt__p_p_svlFilterSourceVideoCaptureTypes__ImageFormat,
  &_swigt__p_p_svlVideoIO__Compression,
  &_swigt__p_p_void,
  &_swigt__p_pos_type,
  &_swigt__p_ptrdiff_t,
  &_swigt__p_seekdir,
  &_swigt__p_short,
  &_swigt__p_size_t,
  &_swigt__p_size_type,
  &_swigt__p_state_type,
  &_swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t,
  &_swigt__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  &_swigt__p_std__invalid_argument,
  &_swigt__p_std__ios_base,
  &_swigt__p_std__locale,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_char_std__allocatorT_char_t_t,
  &_swigt__p_std__vectorT_double_std__allocatorT_double_t_t,
  &_swigt__p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t,
  &_swigt__p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t,
  &_swigt__p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t,
  &_swigt__p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t,
  &_swigt__p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t,
  &_swigt__p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t,
  &_swigt__p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t,
  &_swigt__p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t,
  &_swigt__p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t,
  &_swigt__p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t,
  &_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  &_swigt__p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t,
  &_swigt__p_std__vectorT_vct3_std__allocatorT_vct3_t_t,
  &_swigt__p_streamoff,
  &_swigt__p_streampos,
  &_swigt__p_streamsize,
  &_swigt__p_stride_type,
  &_swigt__p_svlBufferSample,
  &_swigt__p_svlCameraGeometry,
  &_swigt__p_svlFilterBase,
  &_swigt__p_svlFilterImageCameraCalibrationOpenCV,
  &_swigt__p_svlFilterImageChannelSwapper,
  &_swigt__p_svlFilterImageFileWriter,
  &_swigt__p_svlFilterImageRectifier,
  &_swigt__p_svlFilterImageResizer,
  &_swigt__p_svlFilterImageWindow,
  &_swigt__p_svlFilterInput,
  &_swigt__p_svlFilterOutput,
  &_swigt__p_svlFilterSourceBase,
  &_swigt__p_svlFilterSourceBuffer,
  &_swigt__p_svlFilterSourceVideoCapture,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__DeviceInfo,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__ImageFormat,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__ImageProperties,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__PatternType,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__PixelType,
  &_swigt__p_svlFilterSourceVideoCaptureTypes__PlatformType,
  &_swigt__p_svlFilterSourceVideoFile,
  &_swigt__p_svlFilterVideoFileWriter,
  &_swigt__p_svlImageProcessingHelper__BlobDetectorInternals,
  &_swigt__p_svlImageProcessingHelper__EllipseFitterInternals,
  &_swigt__p_svlImageProcessingHelper__ExposureInternals,
  &_swigt__p_svlImageProcessingHelper__RectificationInternals,
  &_swigt__p_svlImageProcessingInternals,
  &_swigt__p_svlImageProcessing__Internals,
  &_swigt__p_svlImageRGB,
  &_swigt__p_svlPixelType,
  &_swigt__p_svlProcInfo,
  &_swigt__p_svlRect,
  &_swigt__p_svlSample,
  &_swigt__p_svlSampleBlobs,
  &_swigt__p_svlSampleCameraGeometry,
  &_swigt__p_svlSampleImage,
  &_swigt__p_svlSampleImage3DMap,
  &_swigt__p_svlSampleImageCustomT_unsigned_char_3_1_t,
  &_swigt__p_svlSampleImageMono32,
  &_swigt__p_svlSampleImageMono32Stereo,
  &_swigt__p_svlSampleImageMono8,
  &_swigt__p_svlSampleImageMono8Stereo,
  &_swigt__p_svlSampleMatrix,
  &_swigt__p_svlSampleMatrixFloat,
  &_swigt__p_svlStreamManager,
  &_swigt__p_svlStreamType,
  &_swigt__p_svlVidCapSrcBase,
  &_swigt__p_svlVidCapSrcDialogThread,
  &_swigt__p_svlVideoCodecCVI,
  &_swigt__p_svlVideoIO__Compression,
  &_swigt__p_svlWindowEventHandlerBase,
  &_swigt__p_swig__SwigPyIterator,
  &_swigt__p_traits_type,
  &_swigt__p_unsigned_char,
  &_swigt__p_unsigned_int,
  &_swigt__p_unsigned_long,
  &_swigt__p_unsigned_long_long,
  &_swigt__p_unsigned_short,
  &_swigt__p_value_type,
  &_swigt__p_vct3x3,
  &_swigt__p_vctAngleRotation2,
  &_swigt__p_vctAxisAngleRotation3T_double_t,
  &_swigt__p_vctAxisAngleRotation3T_float_t,
  &_swigt__p_vctBarycentricVectorT_double_1_t,
  &_swigt__p_vctBarycentricVectorT_double_2_t,
  &_swigt__p_vctBarycentricVectorT_double_3_t,
  &_swigt__p_vctBarycentricVectorT_double_4_t,
  &_swigt__p_vctDynamicMatrixT_double_t,
  &_swigt__p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t,
  &_swigt__p_vctFrame4x4T_double_VCT_ROW_MAJOR_t,
  &_swigt__p_vctFrame4x4T_float_VCT_ROW_MAJOR_t,
  &_swigt__p_vctFrameBaseT_vctMatrixRotation2T_double_t_t,
  &_swigt__p_vctFrameBaseT_vctMatrixRotation2T_float_t_t,
  &_swigt__p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t,
  &_swigt__p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t,
  &_swigt__p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t,
  &_swigt__p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t,
  &_swigt__p_vctMatrixRotation2T_double_t,
  &_swigt__p_vctMatrixRotation2T_float_t,
  &_swigt__p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t,
  &_swigt__p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t,
  &_swigt__p_vctQuaternionRotation3T_double_t,
  &_swigt__p_vctQuaternionRotation3T_float_t,
  &_swigt__p_vctQuaternionT_double_t,
  &_swigt__p_vctQuaternionT_float_t,
  &_swigt__p_vctRodriguezRotation3T_double_t,
  &_swigt__p_vctRodriguezRotation3T_float_t,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_ActionType[] = {  {&_swigt__p_ActionType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_AngleType[] = {  {&_swigt__p_AngleType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BaseClassType[] = {  {&_swigt__p_BaseClassType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BaseType[] = {  {&_swigt__p_BaseType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_BoolType[] = {  {&_swigt__p_BoolType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CISSTNETLIB_DOUBLE[] = {  {&_swigt__p_CISSTNETLIB_DOUBLE, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CISSTNETLIB_INTEGER[] = {  {&_swigt__p_CISSTNETLIB_INTEGER, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CallableType[] = {  {&_swigt__p_CallableType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChannelContainerType[] = {  {&_swigt__p_ChannelContainerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ChannelType[] = {  {&_swigt__p_ChannelType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CollectorFileFloatingNotation[] = {  {&_swigt__p_CollectorFileFloatingNotation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CollectorFileFormat[] = {  {&_swigt__p_CollectorFileFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandInternalMapType[] = {  {&_swigt__p_CommandInternalMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandQualifiedReadMapType[] = {  {&_swigt__p_CommandQualifiedReadMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandReadMapType[] = {  {&_swigt__p_CommandReadMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandType[] = {  {&_swigt__p_CommandType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandVoidMapType[] = {  {&_swigt__p_CommandVoidMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandVoidReturnMapType[] = {  {&_swigt__p_CommandVoidReturnMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandWriteMapType[] = {  {&_swigt__p_CommandWriteMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CommandWriteReturnMapType[] = {  {&_swigt__p_CommandWriteReturnMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_CompressionData[] = {  {&_swigt__p_CompressionData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Config[] = {  {&_swigt__p_Config, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ConstIteratorType[] = {  {&_swigt__p_ConstIteratorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ContainerType[] = {  {&_swigt__p_ContainerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DeRefType[] = {  {&_swigt__p_DeRefType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DeviceInfo[] = {  {&_swigt__p_DeviceInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_DeviceInfoListType[] = {  {&_swigt__p_DeviceInfoListType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ElementType[] = {  {&_swigt__p_ElementType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EntryType[] = {  {&_swigt__p_EntryType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EventVoidMapType[] = {  {&_swigt__p_EventVoidMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_EventWriteMapType[] = {  {&_swigt__p_EventWriteMapType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ExternalTrigger[] = {  {&_swigt__p_ExternalTrigger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_FormatListType[] = {  {&_swigt__p_FormatListType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ImageFormat[] = {  {&_swigt__p_ImageFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ImageProperties[] = {  {&_swigt__p_ImageProperties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ImagePropertiesMask[] = {  {&_swigt__p_ImagePropertiesMask, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IplImage[] = {  {&_swigt__p_IplImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_IteratorType[] = {  {&_swigt__p_IteratorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MatrixType[] = {  {&_swigt__p_MatrixType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MultiplexerConstIteratorType[] = {  {&_swigt__p_MultiplexerConstIteratorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MultiplexerContainerType[] = {  {&_swigt__p_MultiplexerContainerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_MultiplexerIteratorType[] = {  {&_swigt__p_MultiplexerIteratorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_NormType[] = {  {&_swigt__p_NormType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PatternType[] = {  {&_swigt__p_PatternType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PixelType[] = {  {&_swigt__p_PixelType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PlatformType[] = {  {&_swigt__p_PlatformType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RefType[] = {  {&_swigt__p_RefType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_RotationType[] = {  {&_swigt__p_RotationType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ServicesContainerType[] = {  {&_swigt__p_ServicesContainerType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_StreamBufType[] = {  {&_swigt__p_StreamBufType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ThisType[] = {  {&_swigt__p_ThisType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TimeTicksType[] = {  {&_swigt__p_TimeTicksType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TranslationType[] = {  {&_swigt__p_TranslationType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Type[] = {  {&_swigt__p_Type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TypeTraits[] = {  {&_swigt__p_TypeTraits, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VaArgPromotion[] = {  {&_swigt__p_VaArgPromotion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_VectorType[] = {  {&_swigt__p_VectorType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_allocator_type[] = {  {&_swigt__p_allocator_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool[] = {  {&_swigt__p_bool, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char_type[] = {  {&_swigt__p_char_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnClassServicesBase[] = {  {&_swigt__p_cmnClassServicesBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_unsigned_int_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_int_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_std__string_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBoolVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBoolVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatQuat[] = {{&_swigt__p_mtsFloatQuat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct4x4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct4x4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct3x3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct3x3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct2x2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct2x2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsInterface[] = {{&_swigt__p_mtsInterface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsManagerLocalInterface[] = {{&_swigt__p_mtsManagerLocalInterface, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObject[] = {{&_swigt__p_mtsGenericObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctDoubleMat_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctDoubleMat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatMatRot2[] = {{&_swigt__p_mtsFloatMatRot2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleMatRot2[] = {{&_swigt__p_mtsDoubleMatRot2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatQuatRot3[] = {{&_swigt__p_mtsFloatQuatRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatMatRot3[] = {{&_swigt__p_mtsFloatMatRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTaskMain[] = {{&_swigt__p_mtsTaskMain, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTaskContinuous[] = {{&_swigt__p_mtsTaskContinuous, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_double_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_float_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_osaTimeServer[] = {{&_swigt__p_osaTimeServer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTask[] = {{&_swigt__p_mtsTask, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsInterfaceProvided[] = {{&_swigt__p_mtsInterfaceProvided, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloatVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloatVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShortVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShortVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShortVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShortVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUIntVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUIntVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctIntVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctIntVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_mtsComponentState_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_mtsComponentState_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_bool_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsIntervalStatistics[] = {{&_swigt__p_mtsIntervalStatistics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatRodRot3[] = {{&_swigt__p_mtsFloatRodRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTaskContinuousConstructorArg[] = {{&_swigt__p_mtsTaskContinuousConstructorArg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTaskPeriodicConstructorArg[] = {{&_swigt__p_mtsTaskPeriodicConstructorArg, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUCharVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUCharVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctCharVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctCharVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnPath[] = {{&_swigt__p_cmnPath, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsInterfaceRequired[] = {{&_swigt__p_mtsInterfaceRequired, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULongVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULongVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLongVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLongVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCollectorState[] = {{&_swigt__p_mtsCollectorState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_unsigned_short_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_short_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsManagerLocal[] = {{&_swigt__p_mtsManagerLocal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsStateIndex[] = {{&_swigt__p_mtsStateIndex, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTaskPeriodic[] = {{&_swigt__p_mtsTaskPeriodic, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentWithManagement[] = {{&_swigt__p_mtsComponentWithManagement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatFrm4x4[] = {{&_swigt__p_mtsFloatFrm4x4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctDoubleVec_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctDoubleVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort5_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsTaskFromSignal[] = {{&_swigt__p_mtsTaskFromSignal, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatAnRot2[] = {{&_swigt__p_mtsFloatAnRot2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloatMat_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloatMat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatAxAnRot3[] = {{&_swigt__p_mtsFloatAxAnRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctIntMat_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctIntMat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort6_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatQuatFrm3[] = {{&_swigt__p_mtsFloatQuatFrm3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsFloatMatFrm3[] = {{&_swigt__p_mtsFloatMatFrm3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong2_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCollectorBase[] = {{&_swigt__p_mtsCollectorBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vct9_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vct9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctShort7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctShort7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUShort7_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctChar4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctChar4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUChar4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctBool4_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctBool4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctInt8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctInt8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctUInt8_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctULong3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctULong3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctLong3_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctLong3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsManagerComponentServices[] = {{&_swigt__p_mtsManagerComponentServices, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_osaSerialPort[] = {{&_swigt__p_osaSerialPort, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_long_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_unsigned_long_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_unsigned_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyBaseT_vctFloat1_t[] = {{&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObject[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort8_t, _p_mtsGenericObjectProxyT_vctUShort8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort8_t, _p_mtsGenericObjectProxyBaseT_vctUShort8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort8_t, _p_mtsGenericObjectProxyT_vctShort8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort8_t, _p_mtsGenericObjectProxyBaseT_vctShort8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterSourceVideoCapture, _p_svlFilterSourceVideoCaptureTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_unsigned_int_t, _p_mtsGenericObjectProxyBaseT_unsigned_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_unsigned_int_t, _p_cmnGenericObjectProxyT_unsigned_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsMatrixT_int_t, _p_mtsMatrixT_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_int_t, _p_mtsVectorT_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_int_t, _p_mtsGenericObjectProxyT_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_int_t, _p_mtsGenericObjectProxyBaseT_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentConstructorNameAndArgT_int_t, _p_mtsComponentConstructorNameAndArgT_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_int_t, _p_cmnGenericObjectProxyT_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_unsigned_int_t, _p_mtsGenericObjectProxyT_unsigned_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_unsigned_int_t, _p_mtsVectorT_unsigned_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_std__string_t, _p_mtsGenericObjectProxyBaseT_std__string_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_std__string_t, _p_mtsGenericObjectProxyT_std__string_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_std__string_t, _p_mtsVectorT_std__string_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar5_t, _p_mtsGenericObjectProxyBaseT_vctChar5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar5_t, _p_mtsGenericObjectProxyT_vctChar5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar5_t, _p_mtsGenericObjectProxyBaseT_vctUChar5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar5_t, _p_mtsGenericObjectProxyT_vctUChar5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool5_t, _p_mtsGenericObjectProxyBaseT_vctBool5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool5_t, _p_mtsGenericObjectProxyT_vctBool5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt9_t, _p_mtsGenericObjectProxyT_vctInt9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt9_t, _p_mtsGenericObjectProxyBaseT_vctInt9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt9_t, _p_mtsGenericObjectProxyBaseT_vctUInt9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt9_t, _p_mtsGenericObjectProxyT_vctUInt9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlVidCapSrcBase, _p_svlVidCapSrcBaseTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong4_t, _p_mtsGenericObjectProxyT_vctULong4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong4_t, _p_mtsGenericObjectProxyBaseT_vctULong4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong4_t, _p_mtsGenericObjectProxyT_vctLong4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong4_t, _p_mtsGenericObjectProxyBaseT_vctLong4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBoolVec_t, _p_mtsGenericObjectProxyT_vctBoolVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBoolVec_t, _p_mtsGenericObjectProxyBaseT_vctBoolVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t, _p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat2_t, _p_mtsGenericObjectProxyBaseT_vctFloat2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat2_t, _p_mtsGenericObjectProxyT_vctFloat2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort9_t, _p_mtsGenericObjectProxyT_vctUShort9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort9_t, _p_mtsGenericObjectProxyBaseT_vctUShort9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort9_t, _p_mtsGenericObjectProxyT_vctShort9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort9_t, _p_mtsGenericObjectProxyBaseT_vctShort9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar6_t, _p_mtsGenericObjectProxyT_vctUChar6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar6_t, _p_mtsGenericObjectProxyBaseT_vctUChar6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar6_t, _p_mtsGenericObjectProxyT_vctChar6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar6_t, _p_mtsGenericObjectProxyBaseT_vctChar6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatQuat, _p_mtsFloatQuatTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool6_t, _p_mtsGenericObjectProxyT_vctBool6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool6_t, _p_mtsGenericObjectProxyBaseT_vctBool6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct4x4_t, _p_mtsGenericObjectProxyT_vct4x4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct4x4_t, _p_mtsGenericObjectProxyBaseT_vct4x4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct1_t, _p_mtsGenericObjectProxyT_vct1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct1_t, _p_mtsGenericObjectProxyBaseT_vct1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct3x3_t, _p_mtsGenericObjectProxyT_vct3x3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct3x3_t, _p_mtsGenericObjectProxyBaseT_vct3x3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct2x2_t, _p_mtsGenericObjectProxyT_vct2x2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct2x2_t, _p_mtsGenericObjectProxyBaseT_vct2x2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong5_t, _p_mtsGenericObjectProxyBaseT_vctLong5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong5_t, _p_mtsGenericObjectProxyT_vctLong5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong5_t, _p_mtsGenericObjectProxyBaseT_vctULong5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong5_t, _p_mtsGenericObjectProxyT_vctULong5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t, _p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsInterface, _p_mtsInterfaceTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsManagerLocalInterface, _p_mtsManagerLocalInterfaceTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterSourceVideoFile, _p_svlFilterSourceVideoFileTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat3_t, _p_mtsGenericObjectProxyBaseT_vctFloat3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat3_t, _p_mtsGenericObjectProxyT_vctFloat3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObject, _p_mtsGenericObjectTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObject, 0, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctDoubleMat_t, _p_mtsGenericObjectProxyT_vctDoubleMat_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctDoubleMat_t, _p_mtsGenericObjectProxyBaseT_vctDoubleMat_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatMatRot2, _p_mtsFloatMatRot2To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleMatRot2, _p_mtsDoubleMatRot2To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleQuatRot3, _p_mtsDoubleQuatRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatQuatRot3, _p_mtsFloatQuatRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleMatRot3, _p_mtsDoubleMatRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatMatRot3, _p_mtsFloatMatRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTaskMain, _p_mtsTaskMainTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar7_t, _p_mtsGenericObjectProxyBaseT_vctChar7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar7_t, _p_mtsGenericObjectProxyT_vctChar7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar7_t, _p_mtsGenericObjectProxyBaseT_vctUChar7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar7_t, _p_mtsGenericObjectProxyT_vctUChar7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool7_t, _p_mtsGenericObjectProxyBaseT_vctBool7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool7_t, _p_mtsGenericObjectProxyT_vctBool7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTaskContinuous, _p_mtsTaskContinuousTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentConstructorNameAndArgT_double_t, _p_mtsComponentConstructorNameAndArgT_double_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_double_t, _p_cmnGenericObjectProxyT_double_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_double_t, _p_mtsGenericObjectProxyBaseT_double_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_double_t, _p_mtsGenericObjectProxyT_double_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_double_t, _p_mtsVectorT_double_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsMatrixT_double_t, _p_mtsMatrixT_double_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct2_t, _p_mtsGenericObjectProxyBaseT_vct2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct2_t, _p_mtsGenericObjectProxyT_vct2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong6_t, _p_mtsGenericObjectProxyT_vctULong6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong6_t, _p_mtsGenericObjectProxyBaseT_vctULong6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong6_t, _p_mtsGenericObjectProxyT_vctLong6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong6_t, _p_mtsGenericObjectProxyBaseT_vctLong6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_float_t, _p_mtsGenericObjectProxyBaseT_float_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_float_t, _p_mtsGenericObjectProxyT_float_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_float_t, _p_mtsVectorT_float_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterSourceBase, _p_svlFilterSourceBaseTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_osaTimeServer, _p_osaTimeServerTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat4_t, _p_mtsGenericObjectProxyT_vctFloat4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat4_t, _p_mtsGenericObjectProxyBaseT_vctFloat4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t, _p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTask, _p_mtsTaskTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt1_t, _p_mtsGenericObjectProxyBaseT_vctInt1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt1_t, _p_mtsGenericObjectProxyT_vctInt1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt1_t, _p_mtsGenericObjectProxyBaseT_vctUInt1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt1_t, _p_mtsGenericObjectProxyT_vctUInt1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t, _p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsInterfaceProvided, _p_mtsInterfaceProvidedTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar8_t, _p_mtsGenericObjectProxyT_vctUChar8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar8_t, _p_mtsGenericObjectProxyBaseT_vctUChar8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar8_t, _p_mtsGenericObjectProxyT_vctChar8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar8_t, _p_mtsGenericObjectProxyBaseT_vctChar8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloatVec_t, _p_mtsGenericObjectProxyT_vctFloatVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloatVec_t, _p_mtsGenericObjectProxyBaseT_vctFloatVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t, _p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t, _p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShortVec_t, _p_mtsGenericObjectProxyT_vctUShortVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShortVec_t, _p_mtsGenericObjectProxyBaseT_vctUShortVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShortVec_t, _p_mtsGenericObjectProxyT_vctShortVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShortVec_t, _p_mtsGenericObjectProxyBaseT_vctShortVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUIntVec_t, _p_mtsGenericObjectProxyT_vctUIntVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUIntVec_t, _p_mtsGenericObjectProxyBaseT_vctUIntVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctIntVec_t, _p_mtsGenericObjectProxyT_vctIntVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctIntVec_t, _p_mtsGenericObjectProxyBaseT_vctIntVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool8_t, _p_mtsGenericObjectProxyT_vctBool8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool8_t, _p_mtsGenericObjectProxyBaseT_vctBool8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct3_t, _p_mtsGenericObjectProxyT_vct3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct3_t, _p_mtsGenericObjectProxyBaseT_vct3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentConstructorNameAndArgT_std__string_t, _p_mtsComponentConstructorNameAndArgT_std__string_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong7_t, _p_mtsGenericObjectProxyBaseT_vctLong7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong7_t, _p_mtsGenericObjectProxyT_vctLong7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong7_t, _p_mtsGenericObjectProxyBaseT_vctULong7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong7_t, _p_mtsGenericObjectProxyT_vctULong7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort1_t, _p_mtsGenericObjectProxyT_vctUShort1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort1_t, _p_mtsGenericObjectProxyBaseT_vctUShort1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort1_t, _p_mtsGenericObjectProxyT_vctShort1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort1_t, _p_mtsGenericObjectProxyBaseT_vctShort1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat5_t, _p_mtsGenericObjectProxyBaseT_vctFloat5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat5_t, _p_mtsGenericObjectProxyT_vctFloat5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt2_t, _p_mtsGenericObjectProxyT_vctInt2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt2_t, _p_mtsGenericObjectProxyBaseT_vctInt2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt2_t, _p_mtsGenericObjectProxyT_vctUInt2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt2_t, _p_mtsGenericObjectProxyBaseT_vctUInt2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_mtsComponentState_t, _p_mtsGenericObjectProxyBaseT_mtsComponentState_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_mtsComponentState_t, _p_mtsGenericObjectProxyT_mtsComponentState_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_bool_t, _p_cmnGenericObjectProxyT_bool_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_bool_t, _p_mtsGenericObjectProxyBaseT_bool_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_bool_t, _p_mtsGenericObjectProxyT_bool_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_bool_t, _p_mtsVectorT_bool_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentConstructorNameAndArgT_unsigned_int_t, _p_mtsComponentConstructorNameAndArgT_unsigned_int_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar9_t, _p_mtsGenericObjectProxyBaseT_vctChar9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar9_t, _p_mtsGenericObjectProxyT_vctUChar9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar9_t, _p_mtsGenericObjectProxyBaseT_vctUChar9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar9_t, _p_mtsGenericObjectProxyT_vctChar9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool9_t, _p_mtsGenericObjectProxyBaseT_vctBool9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool9_t, _p_mtsGenericObjectProxyT_vctBool9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct4_t, _p_mtsGenericObjectProxyBaseT_vct4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct4_t, _p_mtsGenericObjectProxyT_vct4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong8_t, _p_mtsGenericObjectProxyT_vctULong8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong8_t, _p_mtsGenericObjectProxyBaseT_vctULong8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong8_t, _p_mtsGenericObjectProxyT_vctLong8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong8_t, _p_mtsGenericObjectProxyBaseT_vctLong8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t, _p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort2_t, _p_mtsGenericObjectProxyBaseT_vctShort2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort2_t, _p_mtsGenericObjectProxyT_vctShort2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort2_t, _p_mtsGenericObjectProxyBaseT_vctUShort2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort2_t, _p_mtsGenericObjectProxyT_vctUShort2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsIntervalStatistics, _p_mtsIntervalStatisticsTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatRodRot3, _p_mtsFloatRodRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleRodRot3, _p_mtsDoubleRodRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat6_t, _p_mtsGenericObjectProxyT_vctFloat6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat6_t, _p_mtsGenericObjectProxyBaseT_vctFloat6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTaskContinuousConstructorArg, _p_mtsTaskContinuousConstructorArgTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTaskPeriodicConstructorArg, _p_mtsTaskPeriodicConstructorArgTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterImageFileWriter, _p_svlFilterImageFileWriterTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterVideoFileWriter, _p_svlFilterVideoFileWriterTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt3_t, _p_mtsGenericObjectProxyBaseT_vctInt3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt3_t, _p_mtsGenericObjectProxyT_vctInt3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt3_t, _p_mtsGenericObjectProxyBaseT_vctUInt3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt3_t, _p_mtsGenericObjectProxyT_vctUInt3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterImageCameraCalibrationOpenCV, _p_svlFilterImageCameraCalibrationOpenCVTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUCharVec_t, _p_mtsGenericObjectProxyT_vctUCharVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUCharVec_t, _p_mtsGenericObjectProxyBaseT_vctUCharVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctCharVec_t, _p_mtsGenericObjectProxyT_vctCharVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctCharVec_t, _p_mtsGenericObjectProxyBaseT_vctCharVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct5_t, _p_mtsGenericObjectProxyT_vct5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct5_t, _p_mtsGenericObjectProxyBaseT_vct5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnPath, _p_cmnPathTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsInterfaceRequired, _p_mtsInterfaceRequiredTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t, _p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong9_t, _p_mtsGenericObjectProxyBaseT_vctLong9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong9_t, _p_mtsGenericObjectProxyT_vctLong9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong9_t, _p_mtsGenericObjectProxyBaseT_vctULong9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong9_t, _p_mtsGenericObjectProxyT_vctULong9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULongVec_t, _p_mtsGenericObjectProxyT_vctULongVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULongVec_t, _p_mtsGenericObjectProxyBaseT_vctULongVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLongVec_t, _p_mtsGenericObjectProxyT_vctLongVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLongVec_t, _p_mtsGenericObjectProxyBaseT_vctLongVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort3_t, _p_mtsGenericObjectProxyT_vctUShort3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort3_t, _p_mtsGenericObjectProxyBaseT_vctUShort3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort3_t, _p_mtsGenericObjectProxyT_vctShort3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort3_t, _p_mtsGenericObjectProxyBaseT_vctShort3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t, _p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t, _p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t, _p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsCollectorState, _p_mtsCollectorStateTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat7_t, _p_mtsGenericObjectProxyBaseT_vctFloat7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat7_t, _p_mtsGenericObjectProxyT_vctFloat7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleQuat, _p_mtsDoubleQuatTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsMatrixT_short_t, _p_mtsMatrixT_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_unsigned_short_t, _p_mtsVectorT_unsigned_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_short_t, _p_mtsVectorT_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_unsigned_short_t, _p_mtsGenericObjectProxyT_unsigned_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_unsigned_short_t, _p_mtsGenericObjectProxyBaseT_unsigned_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_short_t, _p_mtsGenericObjectProxyT_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_short_t, _p_mtsGenericObjectProxyBaseT_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_unsigned_short_t, _p_cmnGenericObjectProxyT_unsigned_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_short_t, _p_cmnGenericObjectProxyT_short_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt4_t, _p_mtsGenericObjectProxyBaseT_vctInt4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt4_t, _p_mtsGenericObjectProxyT_vctInt4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt4_t, _p_mtsGenericObjectProxyBaseT_vctUInt4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt4_t, _p_mtsGenericObjectProxyT_vctUInt4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_char_t, _p_mtsVectorT_char_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_unsigned_char_t, _p_mtsVectorT_unsigned_char_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsManagerLocal, _p_mtsManagerLocalTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterImageRectifier, _p_svlFilterImageRectifierTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct6_t, _p_mtsGenericObjectProxyBaseT_vct6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct6_t, _p_mtsGenericObjectProxyT_vct6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t, _p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort4_t, _p_mtsGenericObjectProxyBaseT_vctShort4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort4_t, _p_mtsGenericObjectProxyT_vctShort4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort4_t, _p_mtsGenericObjectProxyBaseT_vctUShort4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort4_t, _p_mtsGenericObjectProxyT_vctUShort4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterImageResizer, _p_svlFilterImageResizerTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsStateIndex, _p_mtsStateIndexTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTaskPeriodic, _p_mtsTaskPeriodicTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t, _p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat8_t, _p_mtsGenericObjectProxyT_vctFloat8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat8_t, _p_mtsGenericObjectProxyBaseT_vctFloat8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar1_t, _p_mtsGenericObjectProxyBaseT_vctChar1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar1_t, _p_mtsGenericObjectProxyT_vctChar1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar1_t, _p_mtsGenericObjectProxyBaseT_vctUChar1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar1_t, _p_mtsGenericObjectProxyT_vctUChar1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool1_t, _p_mtsGenericObjectProxyBaseT_vctBool1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool1_t, _p_mtsGenericObjectProxyT_vctBool1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt5_t, _p_mtsGenericObjectProxyT_vctInt5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt5_t, _p_mtsGenericObjectProxyBaseT_vctInt5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt5_t, _p_mtsGenericObjectProxyBaseT_vctUInt5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt5_t, _p_mtsGenericObjectProxyT_vctUInt5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t, _p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t, _p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentWithManagement, _p_mtsComponentWithManagementTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct7_t, _p_mtsGenericObjectProxyT_vct7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct7_t, _p_mtsGenericObjectProxyBaseT_vct7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatFrm4x4, _p_mtsFloatFrm4x4To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleFrm4x4, _p_mtsDoubleFrm4x4To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctDoubleVec_t, _p_mtsGenericObjectProxyBaseT_vctDoubleVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctDoubleVec_t, _p_mtsGenericObjectProxyT_vctDoubleVec_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort5_t, _p_mtsGenericObjectProxyBaseT_vctShort5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort5_t, _p_mtsGenericObjectProxyT_vctShort5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort5_t, _p_mtsGenericObjectProxyBaseT_vctUShort5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort5_t, _p_mtsGenericObjectProxyT_vctUShort5_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterImageChannelSwapper, _p_svlFilterImageChannelSwapperTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlStreamManager, _p_svlStreamManagerTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat9_t, _p_mtsGenericObjectProxyT_vctFloat9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat9_t, _p_mtsGenericObjectProxyBaseT_vctFloat9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar2_t, _p_mtsGenericObjectProxyBaseT_vctChar2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar2_t, _p_mtsGenericObjectProxyT_vctChar2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar2_t, _p_mtsGenericObjectProxyBaseT_vctUChar2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar2_t, _p_mtsGenericObjectProxyT_vctUChar2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentConstructorNameAndArgT_unsigned_long_t, _p_mtsComponentConstructorNameAndArgT_unsigned_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool2_t, _p_mtsGenericObjectProxyBaseT_vctBool2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool2_t, _p_mtsGenericObjectProxyT_vctBool2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt6_t, _p_mtsGenericObjectProxyT_vctInt6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt6_t, _p_mtsGenericObjectProxyBaseT_vctInt6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt6_t, _p_mtsGenericObjectProxyBaseT_vctUInt6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt6_t, _p_mtsGenericObjectProxyT_vctUInt6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsTaskFromSignal, _p_mtsTaskFromSignalTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong1_t, _p_mtsGenericObjectProxyT_vctULong1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong1_t, _p_mtsGenericObjectProxyBaseT_vctULong1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong1_t, _p_mtsGenericObjectProxyT_vctLong1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong1_t, _p_mtsGenericObjectProxyBaseT_vctLong1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t, _p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatAnRot2, _p_mtsFloatAnRot2To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloatMat_t, _p_mtsGenericObjectProxyBaseT_vctFloatMat_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloatMat_t, _p_mtsGenericObjectProxyT_vctFloatMat_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleAnRot2, _p_mtsDoubleAnRot2To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleAxAnRot3, _p_mtsDoubleAxAnRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatAxAnRot3, _p_mtsFloatAxAnRot3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctIntMat_t, _p_mtsGenericObjectProxyBaseT_vctIntMat_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctIntMat_t, _p_mtsGenericObjectProxyT_vctIntMat_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct8_t, _p_mtsGenericObjectProxyT_vct8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct8_t, _p_mtsGenericObjectProxyBaseT_vct8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort6_t, _p_mtsGenericObjectProxyBaseT_vctShort6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort6_t, _p_mtsGenericObjectProxyT_vctShort6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort6_t, _p_mtsGenericObjectProxyBaseT_vctUShort6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort6_t, _p_mtsGenericObjectProxyT_vctUShort6_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t, _p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterImageWindow, _p_svlFilterImageWindowTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterBase, _p_svlFilterBaseTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar3_t, _p_mtsGenericObjectProxyBaseT_vctChar3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar3_t, _p_mtsGenericObjectProxyT_vctChar3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar3_t, _p_mtsGenericObjectProxyBaseT_vctUChar3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar3_t, _p_mtsGenericObjectProxyT_vctUChar3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleQuatFrm3, _p_mtsDoubleQuatFrm3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatQuatFrm3, _p_mtsFloatQuatFrm3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsDoubleMatFrm3, _p_mtsDoubleMatFrm3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsFloatMatFrm3, _p_mtsFloatMatFrm3To_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool3_t, _p_mtsGenericObjectProxyT_vctBool3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool3_t, _p_mtsGenericObjectProxyBaseT_vctBool3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_svlFilterSourceBuffer, _p_svlFilterSourceBufferTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt7_t, _p_mtsGenericObjectProxyBaseT_vctInt7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt7_t, _p_mtsGenericObjectProxyT_vctInt7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt7_t, _p_mtsGenericObjectProxyT_vctUInt7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt7_t, _p_mtsGenericObjectProxyBaseT_vctUInt7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong2_t, _p_mtsGenericObjectProxyBaseT_vctLong2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong2_t, _p_mtsGenericObjectProxyT_vctLong2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong2_t, _p_mtsGenericObjectProxyBaseT_vctULong2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong2_t, _p_mtsGenericObjectProxyT_vctULong2_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponent, _p_mtsComponentTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsCollectorBase, _p_mtsCollectorBaseTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vct9_t, _p_mtsGenericObjectProxyT_vct9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vct9_t, _p_mtsGenericObjectProxyBaseT_vct9_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t, _p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctShort7_t, _p_mtsGenericObjectProxyBaseT_vctShort7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctShort7_t, _p_mtsGenericObjectProxyT_vctShort7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUShort7_t, _p_mtsGenericObjectProxyBaseT_vctUShort7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUShort7_t, _p_mtsGenericObjectProxyT_vctUShort7_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctChar4_t, _p_mtsGenericObjectProxyBaseT_vctChar4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctChar4_t, _p_mtsGenericObjectProxyT_vctChar4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUChar4_t, _p_mtsGenericObjectProxyBaseT_vctUChar4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUChar4_t, _p_mtsGenericObjectProxyT_vctUChar4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctBool4_t, _p_mtsGenericObjectProxyBaseT_vctBool4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctBool4_t, _p_mtsGenericObjectProxyT_vctBool4_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctInt8_t, _p_mtsGenericObjectProxyT_vctInt8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctInt8_t, _p_mtsGenericObjectProxyBaseT_vctInt8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctUInt8_t, _p_mtsGenericObjectProxyBaseT_vctUInt8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctUInt8_t, _p_mtsGenericObjectProxyT_vctUInt8_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctULong3_t, _p_mtsGenericObjectProxyT_vctULong3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctULong3_t, _p_mtsGenericObjectProxyBaseT_vctULong3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctLong3_t, _p_mtsGenericObjectProxyT_vctLong3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctLong3_t, _p_mtsGenericObjectProxyBaseT_vctLong3_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsManagerComponentServices, _p_mtsManagerComponentServicesTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_osaSerialPort, _p_osaSerialPortTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsComponentConstructorNameAndArgT_long_t, _p_mtsComponentConstructorNameAndArgT_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_long_t, _p_cmnGenericObjectProxyT_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_cmnGenericObjectProxyT_unsigned_long_t, _p_cmnGenericObjectProxyT_unsigned_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_long_t, _p_mtsGenericObjectProxyBaseT_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_long_t, _p_mtsGenericObjectProxyT_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_unsigned_long_t, _p_mtsGenericObjectProxyBaseT_unsigned_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_unsigned_long_t, _p_mtsGenericObjectProxyT_unsigned_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_long_t, _p_mtsVectorT_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsVectorT_unsigned_long_t, _p_mtsVectorT_unsigned_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsMatrixT_long_t, _p_mtsMatrixT_long_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyT_vctFloat1_t, _p_mtsGenericObjectProxyT_vctFloat1_tTo_p_cmnGenericObject, 0, 0},  {&_swigt__p_mtsGenericObjectProxyBaseT_vctFloat1_t, _p_mtsGenericObjectProxyBaseT_vctFloat1_tTo_p_cmnGenericObject, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_bool_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_char_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_double_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_int_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_long_long_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_long_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_short_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_unsigned_char_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_unsigned_int_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_unsigned_long_long_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_unsigned_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_unsigned_long_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_unsigned_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnGenericObjectProxyT_unsigned_short_t[] = {  {&_swigt__p_cmnGenericObjectProxyT_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_iterator[] = {  {&_swigt__p_const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_const_reverse_iterator[] = {  {&_swigt__p_const_reverse_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cv__Mat[] = {  {&_swigt__p_cv__Mat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_difference_type[] = {  {&_swigt__p_difference_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dimension_type[] = {  {&_swigt__p_dimension_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_enum_std__ios_base__event_r_std__ios_base_int__void[] = {  {&_swigt__p_f_enum_std__ios_base__event_r_std__ios_base_int__void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_std__ios_base__r_std__ios_base[] = {  {&_swigt__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__ios_base, 0, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},  {&_swigt__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_f_r_std__ios_base__r_std__ios_base, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_first_type[] = {  {&_swigt__p_first_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_fmtflags[] = {  {&_swigt__p_fmtflags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_index_type[] = {  {&_swigt__p_index_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int_type[] = {  {&_swigt__p_int_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ios_base__openmode[] = {  {&_swigt__p_ios_base__openmode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ios_base__seekdir[] = {  {&_swigt__p_ios_base__seekdir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iostate[] = {  {&_swigt__p_iostate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_iterator[] = {  {&_swigt__p_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_key_type[] = {  {&_swigt__p_key_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long[] = {  {&_swigt__p_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_double[] = {  {&_swigt__p_long_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapped_type[] = {  {&_swigt__p_mapped_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsBlockingType[] = {  {&_swigt__p_mtsBlockingType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t[] = {  {&_swigt__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t[] = {  {&_swigt__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t[] = {  {&_swigt__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t[] = {  {&_swigt__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsCommandQueueingPolicy[] = {  {&_swigt__p_mtsCommandQueueingPolicy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponent[] = {  {&_swigt__p_mtsCollectorBase, _p_mtsCollectorBaseTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterSourceVideoCapture, _p_svlFilterSourceVideoCaptureTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterImageWindow, _p_svlFilterImageWindowTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlStreamManager, _p_svlStreamManagerTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsTaskFromSignal, _p_mtsTaskFromSignalTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsComponentWithManagement, _p_mtsComponentWithManagementTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsComponent, 0, 0, 0},  {&_swigt__p_svlFilterSourceBase, _p_svlFilterSourceBaseTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsTaskContinuous, _p_mtsTaskContinuousTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterImageFileWriter, _p_svlFilterImageFileWriterTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterVideoFileWriter, _p_svlFilterVideoFileWriterTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterImageChannelSwapper, _p_svlFilterImageChannelSwapperTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsTask, _p_mtsTaskTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsTaskMain, _p_mtsTaskMainTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsTaskPeriodic, _p_mtsTaskPeriodicTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterImageRectifier, _p_svlFilterImageRectifierTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterImageResizer, _p_svlFilterImageResizerTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterImageCameraCalibrationOpenCV, _p_svlFilterImageCameraCalibrationOpenCVTo_p_mtsComponent, 0, 0},  {&_swigt__p_mtsCollectorState, _p_mtsCollectorStateTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterSourceVideoFile, _p_svlFilterSourceVideoFileTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterBase, _p_svlFilterBaseTo_p_mtsComponent, 0, 0},  {&_swigt__p_svlFilterSourceBuffer, _p_svlFilterSourceBufferTo_p_mtsComponent, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentConstructorNameAndArgT_double_t[] = {  {&_swigt__p_mtsComponentConstructorNameAndArgT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentConstructorNameAndArgT_int_t[] = {  {&_swigt__p_mtsComponentConstructorNameAndArgT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentConstructorNameAndArgT_long_t[] = {  {&_swigt__p_mtsComponentConstructorNameAndArgT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentConstructorNameAndArgT_std__string_t[] = {  {&_swigt__p_mtsComponentConstructorNameAndArgT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentConstructorNameAndArgT_unsigned_int_t[] = {  {&_swigt__p_mtsComponentConstructorNameAndArgT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsComponentConstructorNameAndArgT_unsigned_long_t[] = {  {&_swigt__p_mtsComponentConstructorNameAndArgT_unsigned_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleAnRot2[] = {  {&_swigt__p_mtsDoubleAnRot2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleAxAnRot3[] = {  {&_swigt__p_mtsDoubleAxAnRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleFrm4x4[] = {  {&_swigt__p_mtsDoubleFrm4x4, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleMatFrm3[] = {  {&_swigt__p_mtsDoubleMatFrm3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleMatRot3[] = {  {&_swigt__p_mtsDoubleMatRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleQuat[] = {  {&_swigt__p_mtsDoubleQuat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleQuatFrm3[] = {  {&_swigt__p_mtsDoubleQuatFrm3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleQuatRot3[] = {  {&_swigt__p_mtsDoubleQuatRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsDoubleRodRot3[] = {  {&_swigt__p_mtsDoubleRodRot3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsEventQueueingPolicy[] = {  {&_swigt__p_mtsEventQueueingPolicy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_bool_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_char_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_double_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_float_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_int_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_long_long_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_long_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_long_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsCommandReadDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsCommandReadDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsComponentStateChange_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsComponentStateChange_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsComponentState_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsComponentState_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsComponentStatusControl_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsComponentStatusControl_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsDescriptionComponent_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsDescriptionComponent_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsDescriptionConnection_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsDescriptionConnection_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsDescriptionInterface_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsDescriptionInterface_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsEventVoidDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsEventVoidDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsEventWriteDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsEventWriteDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsExecutionResult_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsExecutionResult_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_short_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__string_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_unsigned_char_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_unsigned_int_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_unsigned_long_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_unsigned_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_unsigned_short_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct2x2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct2x2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct3x3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct3x3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct4x4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct4x4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vct9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vct9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBool9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBool9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctBoolVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctBoolVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctChar9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctChar9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctCharVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctCharVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctDoubleMat_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctDoubleMat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctDoubleVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctDoubleVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloat9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloat9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloatMat_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloatMat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFloatVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFloatVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctInt9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctInt9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctIntMat_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctIntMat_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctIntVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctIntVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLong9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLong9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctLongVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctLongVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShort9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShort9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctShortVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctShortVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUChar9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUChar9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUCharVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUCharVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUInt9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUInt9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUIntVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUIntVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULong9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULong9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctULongVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctULongVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort1_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort2_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort3_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort4_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort5_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort5_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort6_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort6_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort7_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort7_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort8_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShort9_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShort9_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsGenericObjectProxyT_vctUShortVec_t[] = {  {&_swigt__p_mtsGenericObjectProxyT_vctUShortVec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsInterfaceQueueingPolicy[] = {  {&_swigt__p_mtsInterfaceQueueingPolicy, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_bool_t[] = {  {&_swigt__p_mtsMatrixT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_char_t[] = {  {&_swigt__p_mtsMatrixT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_double_t[] = {  {&_swigt__p_mtsMatrixT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_float_t[] = {  {&_swigt__p_mtsMatrixT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_int_t[] = {  {&_swigt__p_mtsMatrixT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_long_t[] = {  {&_swigt__p_mtsMatrixT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_short_t[] = {  {&_swigt__p_mtsMatrixT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_unsigned_char_t[] = {  {&_swigt__p_mtsMatrixT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_unsigned_int_t[] = {  {&_swigt__p_mtsMatrixT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_unsigned_long_t[] = {  {&_swigt__p_mtsMatrixT_unsigned_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsMatrixT_unsigned_short_t[] = {  {&_swigt__p_mtsMatrixT_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsRequiredType[] = {  {&_swigt__p_mtsRequiredType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_bool_t[] = {  {&_swigt__p_mtsVectorT_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_char_t[] = {  {&_swigt__p_mtsVectorT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_double_t[] = {  {&_swigt__p_mtsVectorT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_float_t[] = {  {&_swigt__p_mtsVectorT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_int_t[] = {  {&_swigt__p_mtsVectorT_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_long_t[] = {  {&_swigt__p_mtsVectorT_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_short_t[] = {  {&_swigt__p_mtsVectorT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_std__string_t[] = {  {&_swigt__p_mtsVectorT_std__string_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_unsigned_char_t[] = {  {&_swigt__p_mtsVectorT_unsigned_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_unsigned_int_t[] = {  {&_swigt__p_mtsVectorT_unsigned_int_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_unsigned_long_t[] = {  {&_swigt__p_mtsVectorT_unsigned_long_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mtsVectorT_unsigned_short_t[] = {  {&_swigt__p_mtsVectorT_unsigned_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndimension_type[] = {  {&_swigt__p_ndimension_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_nindex_type[] = {  {&_swigt__p_nindex_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_nsize_type[] = {  {&_swigt__p_nsize_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_nstride_type[] = {  {&_swigt__p_nstride_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_off_type[] = {  {&_swigt__p_off_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_openmode[] = {  {&_swigt__p_openmode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo[] = {  {&_swigt__p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_svlFilterSourceVideoCaptureTypes__ImageFormat[] = {  {&_swigt__p_p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_svlVideoIO__Compression[] = {  {&_swigt__p_p_svlVideoIO__Compression, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pos_type[] = {  {&_swigt__p_pos_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ptrdiff_t[] = {  {&_swigt__p_ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_seekdir[] = {  {&_swigt__p_seekdir, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_t[] = {  {&_swigt__p_size_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_size_type[] = {  {&_swigt__p_size_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_state_type[] = {  {&_swigt__p_state_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_iosT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_iosT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_istreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_istreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t[] = {{&_swigt__p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_streambufT_char_std__char_traitsT_char_t_t[] = {  {&_swigt__p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0, 0, 0},  {&_swigt__p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t, _p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_tTo_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0, 0},  {&_swigt__p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t, _p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_tTo_p_std__basic_streambufT_char_std__char_traitsT_char_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t[] = {  {&_swigt__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__invalid_argument[] = {  {&_swigt__p_std__invalid_argument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ios_base[] = {  {&_swigt__p_std__basic_iosT_char_std__char_traitsT_char_t_t, _p_std__basic_iosT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},  {&_swigt__p_std__ios_base, 0, 0, 0},  {&_swigt__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_ostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},  {&_swigt__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t, _p_std__basic_iostreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},  {&_swigt__p_std__basic_istreamT_char_std__char_traitsT_char_t_t, _p_std__basic_istreamT_char_std__char_traitsT_char_t_tTo_p_std__ios_base, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__locale[] = {  {&_swigt__p_std__locale, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_char_std__allocatorT_char_t_t[] = {  {&_swigt__p_std__vectorT_char_std__allocatorT_char_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_double_std__allocatorT_double_t_t[] = {  {&_swigt__p_std__vectorT_double_std__allocatorT_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t[] = {  {&_swigt__p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t[] = {  {&_swigt__p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t[] = {  {&_swigt__p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t[] = {  {&_swigt__p_std__vectorT_std__string_std__allocatorT_std__string_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t[] = {  {&_swigt__p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_vct3_std__allocatorT_vct3_t_t[] = {  {&_swigt__p_std__vectorT_vct3_std__allocatorT_vct3_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_streamoff[] = {  {&_swigt__p_streamoff, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_streampos[] = {  {&_swigt__p_streampos, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_streamsize[] = {  {&_swigt__p_streamsize, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_stride_type[] = {  {&_swigt__p_stride_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlBufferSample[] = {  {&_swigt__p_svlBufferSample, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlCameraGeometry[] = {  {&_swigt__p_svlCameraGeometry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterBase[] = {  {&_swigt__p_svlFilterBase, 0, 0, 0},  {&_swigt__p_svlFilterImageFileWriter, _p_svlFilterImageFileWriterTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterSourceBase, _p_svlFilterSourceBaseTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterVideoFileWriter, _p_svlFilterVideoFileWriterTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterImageChannelSwapper, _p_svlFilterImageChannelSwapperTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterSourceVideoFile, _p_svlFilterSourceVideoFileTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterImageResizer, _p_svlFilterImageResizerTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterSourceBuffer, _p_svlFilterSourceBufferTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterImageRectifier, _p_svlFilterImageRectifierTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterImageWindow, _p_svlFilterImageWindowTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterImageCameraCalibrationOpenCV, _p_svlFilterImageCameraCalibrationOpenCVTo_p_svlFilterBase, 0, 0},  {&_swigt__p_svlFilterSourceVideoCapture, _p_svlFilterSourceVideoCaptureTo_p_svlFilterBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterImageCameraCalibrationOpenCV[] = {  {&_swigt__p_svlFilterImageCameraCalibrationOpenCV, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterImageChannelSwapper[] = {  {&_swigt__p_svlFilterImageChannelSwapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterImageFileWriter[] = {  {&_swigt__p_svlFilterImageFileWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterImageRectifier[] = {  {&_swigt__p_svlFilterImageRectifier, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterImageResizer[] = {  {&_swigt__p_svlFilterImageResizer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterImageWindow[] = {  {&_swigt__p_svlFilterImageWindow, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterInput[] = {  {&_swigt__p_svlFilterInput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterOutput[] = {  {&_swigt__p_svlFilterOutput, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceBase[] = {  {&_swigt__p_svlFilterSourceBase, 0, 0, 0},  {&_swigt__p_svlFilterSourceVideoFile, _p_svlFilterSourceVideoFileTo_p_svlFilterSourceBase, 0, 0},  {&_swigt__p_svlFilterSourceBuffer, _p_svlFilterSourceBufferTo_p_svlFilterSourceBase, 0, 0},  {&_swigt__p_svlFilterSourceVideoCapture, _p_svlFilterSourceVideoCaptureTo_p_svlFilterSourceBase, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceBuffer[] = {  {&_swigt__p_svlFilterSourceBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCapture[] = {  {&_swigt__p_svlFilterSourceVideoCapture, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__DeviceInfo[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__DeviceInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__ExternalTrigger[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__ExternalTrigger, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__ImageFormat[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__ImageFormat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__ImageProperties[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__ImageProperties, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__PatternType[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__PatternType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__PixelType[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__PixelType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoCaptureTypes__PlatformType[] = {  {&_swigt__p_svlFilterSourceVideoCaptureTypes__PlatformType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterSourceVideoFile[] = {  {&_swigt__p_svlFilterSourceVideoFile, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlFilterVideoFileWriter[] = {  {&_swigt__p_svlFilterVideoFileWriter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageProcessingHelper__BlobDetectorInternals[] = {  {&_swigt__p_svlImageProcessingHelper__BlobDetectorInternals, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageProcessingHelper__EllipseFitterInternals[] = {  {&_swigt__p_svlImageProcessingHelper__EllipseFitterInternals, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageProcessingHelper__ExposureInternals[] = {  {&_swigt__p_svlImageProcessingHelper__ExposureInternals, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageProcessingHelper__RectificationInternals[] = {  {&_swigt__p_svlImageProcessingHelper__RectificationInternals, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageProcessingInternals[] = {  {&_swigt__p_svlImageProcessingHelper__RectificationInternals, _p_svlImageProcessingHelper__RectificationInternalsTo_p_svlImageProcessingInternals, 0, 0},  {&_swigt__p_svlImageProcessingHelper__EllipseFitterInternals, _p_svlImageProcessingHelper__EllipseFitterInternalsTo_p_svlImageProcessingInternals, 0, 0},  {&_swigt__p_svlImageProcessingInternals, 0, 0, 0},  {&_swigt__p_svlImageProcessingHelper__ExposureInternals, _p_svlImageProcessingHelper__ExposureInternalsTo_p_svlImageProcessingInternals, 0, 0},  {&_swigt__p_svlImageProcessingHelper__BlobDetectorInternals, _p_svlImageProcessingHelper__BlobDetectorInternalsTo_p_svlImageProcessingInternals, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageProcessing__Internals[] = {  {&_swigt__p_svlImageProcessing__Internals, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlImageRGB[] = {  {&_swigt__p_svlImageRGB, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlPixelType[] = {  {&_swigt__p_svlPixelType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlProcInfo[] = {  {&_swigt__p_svlProcInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlRect[] = {  {&_swigt__p_svlRect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSample[] = {  {&_swigt__p_svlSampleImageCustomT_unsigned_char_3_1_t, _p_svlSampleImageCustomT_unsigned_char_3_1_tTo_p_svlSample, 0, 0},  {&_swigt__p_svlSample, 0, 0, 0},  {&_swigt__p_svlSampleImage, _p_svlSampleImageTo_p_svlSample, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleBlobs[] = {  {&_swigt__p_svlSampleBlobs, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleCameraGeometry[] = {  {&_swigt__p_svlSampleCameraGeometry, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImage[] = {  {&_swigt__p_svlSampleImageCustomT_unsigned_char_3_1_t, _p_svlSampleImageCustomT_unsigned_char_3_1_tTo_p_svlSampleImage, 0, 0},  {&_swigt__p_svlSampleImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImage3DMap[] = {  {&_swigt__p_svlSampleImage3DMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImageCustomT_unsigned_char_3_1_t[] = {  {&_swigt__p_svlSampleImageCustomT_unsigned_char_3_1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImageMono32[] = {  {&_swigt__p_svlSampleImageMono32, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImageMono32Stereo[] = {  {&_swigt__p_svlSampleImageMono32Stereo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImageMono8[] = {  {&_swigt__p_svlSampleImageMono8, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleImageMono8Stereo[] = {  {&_swigt__p_svlSampleImageMono8Stereo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleMatrix[] = {  {&_swigt__p_svlSampleMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlSampleMatrixFloat[] = {  {&_swigt__p_svlSampleMatrixFloat, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlStreamManager[] = {  {&_swigt__p_svlStreamManager, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlStreamType[] = {  {&_swigt__p_svlStreamType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlVidCapSrcBase[] = {  {&_swigt__p_svlVidCapSrcBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlVidCapSrcDialogThread[] = {  {&_swigt__p_svlVidCapSrcDialogThread, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlVideoCodecCVI[] = {  {&_swigt__p_svlVideoCodecCVI, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlVideoIO__Compression[] = {  {&_swigt__p_svlVideoIO__Compression, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_svlWindowEventHandlerBase[] = {  {&_swigt__p_svlWindowEventHandlerBase, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_swig__SwigPyIterator[] = {  {&_swigt__p_swig__SwigPyIterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_traits_type[] = {  {&_swigt__p_traits_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_int[] = {  {&_swigt__p_unsigned_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long[] = {  {&_swigt__p_unsigned_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_long_long[] = {  {&_swigt__p_unsigned_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_short[] = {  {&_swigt__p_unsigned_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_value_type[] = {  {&_swigt__p_value_type, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vct3x3[] = {  {&_swigt__p_vct3x3, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctAngleRotation2[] = {  {&_swigt__p_vctAngleRotation2, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctAxisAngleRotation3T_double_t[] = {  {&_swigt__p_vctAxisAngleRotation3T_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctAxisAngleRotation3T_float_t[] = {  {&_swigt__p_vctAxisAngleRotation3T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctBarycentricVectorT_double_1_t[] = {  {&_swigt__p_vctBarycentricVectorT_double_1_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctBarycentricVectorT_double_2_t[] = {  {&_swigt__p_vctBarycentricVectorT_double_2_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctBarycentricVectorT_double_3_t[] = {  {&_swigt__p_vctBarycentricVectorT_double_3_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctBarycentricVectorT_double_4_t[] = {  {&_swigt__p_vctBarycentricVectorT_double_4_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctDynamicMatrixT_double_t[] = {  {&_swigt__p_vctDynamicMatrixT_double_t, 0, 0, 0},  {&_swigt__p_mtsMatrixT_double_t, _p_mtsMatrixT_double_tTo_p_vctDynamicMatrixT_double_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t[] = {  {&_swigt__p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrame4x4T_double_VCT_ROW_MAJOR_t[] = {  {&_swigt__p_vctFrame4x4T_double_VCT_ROW_MAJOR_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrame4x4T_float_VCT_ROW_MAJOR_t[] = {  {&_swigt__p_vctFrame4x4T_float_VCT_ROW_MAJOR_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrameBaseT_vctMatrixRotation2T_double_t_t[] = {  {&_swigt__p_vctFrameBaseT_vctMatrixRotation2T_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrameBaseT_vctMatrixRotation2T_float_t_t[] = {  {&_swigt__p_vctFrameBaseT_vctMatrixRotation2T_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t[] = {  {&_swigt__p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t, 0, 0, 0},  {&_swigt__p_mtsDoubleMatFrm3, _p_mtsDoubleMatFrm3To_p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t[] = {  {&_swigt__p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t[] = {  {&_swigt__p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t[] = {  {&_swigt__p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctMatrixRotation2T_double_t[] = {  {&_swigt__p_vctMatrixRotation2T_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctMatrixRotation2T_float_t[] = {  {&_swigt__p_vctMatrixRotation2T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t[] = {  {&_swigt__p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t[] = {  {&_swigt__p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctQuaternionRotation3T_double_t[] = {  {&_swigt__p_vctQuaternionRotation3T_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctQuaternionRotation3T_float_t[] = {  {&_swigt__p_vctQuaternionRotation3T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctQuaternionT_double_t[] = {  {&_swigt__p_vctQuaternionT_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctQuaternionT_float_t[] = {  {&_swigt__p_vctQuaternionT_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctRodriguezRotation3T_double_t[] = {  {&_swigt__p_vctRodriguezRotation3T_double_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_vctRodriguezRotation3T_float_t[] = {  {&_swigt__p_vctRodriguezRotation3T_float_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_ActionType,
  _swigc__p_AngleType,
  _swigc__p_BaseClassType,
  _swigc__p_BaseType,
  _swigc__p_BoolType,
  _swigc__p_CISSTNETLIB_DOUBLE,
  _swigc__p_CISSTNETLIB_INTEGER,
  _swigc__p_CallableType,
  _swigc__p_ChannelContainerType,
  _swigc__p_ChannelType,
  _swigc__p_CollectorFileFloatingNotation,
  _swigc__p_CollectorFileFormat,
  _swigc__p_CommandInternalMapType,
  _swigc__p_CommandQualifiedReadMapType,
  _swigc__p_CommandReadMapType,
  _swigc__p_CommandType,
  _swigc__p_CommandVoidMapType,
  _swigc__p_CommandVoidReturnMapType,
  _swigc__p_CommandWriteMapType,
  _swigc__p_CommandWriteReturnMapType,
  _swigc__p_CompressionData,
  _swigc__p_Config,
  _swigc__p_ConstIteratorType,
  _swigc__p_ContainerType,
  _swigc__p_DeRefType,
  _swigc__p_DeviceInfo,
  _swigc__p_DeviceInfoListType,
  _swigc__p_ElementType,
  _swigc__p_EntryType,
  _swigc__p_EventVoidMapType,
  _swigc__p_EventWriteMapType,
  _swigc__p_ExternalTrigger,
  _swigc__p_FormatListType,
  _swigc__p_ImageFormat,
  _swigc__p_ImageProperties,
  _swigc__p_ImagePropertiesMask,
  _swigc__p_IplImage,
  _swigc__p_IteratorType,
  _swigc__p_MatrixType,
  _swigc__p_MultiplexerConstIteratorType,
  _swigc__p_MultiplexerContainerType,
  _swigc__p_MultiplexerIteratorType,
  _swigc__p_NormType,
  _swigc__p_PatternType,
  _swigc__p_PixelType,
  _swigc__p_PlatformType,
  _swigc__p_RefType,
  _swigc__p_RotationType,
  _swigc__p_ServicesContainerType,
  _swigc__p_StreamBufType,
  _swigc__p_ThisType,
  _swigc__p_TimeTicksType,
  _swigc__p_TranslationType,
  _swigc__p_Type,
  _swigc__p_TypeTraits,
  _swigc__p_VaArgPromotion,
  _swigc__p_VectorType,
  _swigc__p_allocator_type,
  _swigc__p_bool,
  _swigc__p_char,
  _swigc__p_char_type,
  _swigc__p_cmnCallbackStreambufT_char_std__char_traitsT_char_t_t,
  _swigc__p_cmnClassServicesBase,
  _swigc__p_cmnGenericObject,
  _swigc__p_cmnGenericObjectProxyT_bool_t,
  _swigc__p_cmnGenericObjectProxyT_char_t,
  _swigc__p_cmnGenericObjectProxyT_double_t,
  _swigc__p_cmnGenericObjectProxyT_int_t,
  _swigc__p_cmnGenericObjectProxyT_long_long_t,
  _swigc__p_cmnGenericObjectProxyT_long_t,
  _swigc__p_cmnGenericObjectProxyT_short_t,
  _swigc__p_cmnGenericObjectProxyT_unsigned_char_t,
  _swigc__p_cmnGenericObjectProxyT_unsigned_int_t,
  _swigc__p_cmnGenericObjectProxyT_unsigned_long_long_t,
  _swigc__p_cmnGenericObjectProxyT_unsigned_long_t,
  _swigc__p_cmnGenericObjectProxyT_unsigned_short_t,
  _swigc__p_cmnLODMultiplexerStreambufT_char_std__char_traitsT_char_t_t,
  _swigc__p_cmnPath,
  _swigc__p_const_iterator,
  _swigc__p_const_reverse_iterator,
  _swigc__p_cv__Mat,
  _swigc__p_difference_type,
  _swigc__p_dimension_type,
  _swigc__p_double,
  _swigc__p_f_enum_std__ios_base__event_r_std__ios_base_int__void,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ios__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_istream__char_std__char_traits__char______r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_iosT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_f_r_std__ios_base__r_std__ios_base,
  _swigc__p_first_type,
  _swigc__p_float,
  _swigc__p_fmtflags,
  _swigc__p_index_type,
  _swigc__p_int,
  _swigc__p_int_type,
  _swigc__p_ios_base__openmode,
  _swigc__p_ios_base__seekdir,
  _swigc__p_iostate,
  _swigc__p_iterator,
  _swigc__p_key_type,
  _swigc__p_long,
  _swigc__p_long_double,
  _swigc__p_long_long,
  _swigc__p_mapped_type,
  _swigc__p_mtsBlockingType,
  _swigc__p_mtsCollectorBase,
  _swigc__p_mtsCollectorState,
  _swigc__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandRead_t,
  _swigc__p_mtsCommandQueuedVoidReturnBaseT_mtsCommandVoidReturn_t,
  _swigc__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandQualifiedRead_t,
  _swigc__p_mtsCommandQueuedWriteReturnBaseT_mtsCommandWriteReturn_t,
  _swigc__p_mtsCommandQueueingPolicy,
  _swigc__p_mtsComponent,
  _swigc__p_mtsComponentConstructorNameAndArgT_double_t,
  _swigc__p_mtsComponentConstructorNameAndArgT_int_t,
  _swigc__p_mtsComponentConstructorNameAndArgT_long_t,
  _swigc__p_mtsComponentConstructorNameAndArgT_std__string_t,
  _swigc__p_mtsComponentConstructorNameAndArgT_unsigned_int_t,
  _swigc__p_mtsComponentConstructorNameAndArgT_unsigned_long_t,
  _swigc__p_mtsComponentWithManagement,
  _swigc__p_mtsDoubleAnRot2,
  _swigc__p_mtsDoubleAxAnRot3,
  _swigc__p_mtsDoubleFrm4x4,
  _swigc__p_mtsDoubleMatFrm3,
  _swigc__p_mtsDoubleMatRot2,
  _swigc__p_mtsDoubleMatRot3,
  _swigc__p_mtsDoubleQuat,
  _swigc__p_mtsDoubleQuatFrm3,
  _swigc__p_mtsDoubleQuatRot3,
  _swigc__p_mtsDoubleRodRot3,
  _swigc__p_mtsEventQueueingPolicy,
  _swigc__p_mtsFloatAnRot2,
  _swigc__p_mtsFloatAxAnRot3,
  _swigc__p_mtsFloatFrm4x4,
  _swigc__p_mtsFloatMatFrm3,
  _swigc__p_mtsFloatMatRot2,
  _swigc__p_mtsFloatMatRot3,
  _swigc__p_mtsFloatQuat,
  _swigc__p_mtsFloatQuatFrm3,
  _swigc__p_mtsFloatQuatRot3,
  _swigc__p_mtsFloatRodRot3,
  _swigc__p_mtsGenericObject,
  _swigc__p_mtsGenericObjectProxyBaseT_bool_t,
  _swigc__p_mtsGenericObjectProxyBaseT_double_t,
  _swigc__p_mtsGenericObjectProxyBaseT_float_t,
  _swigc__p_mtsGenericObjectProxyBaseT_int_t,
  _swigc__p_mtsGenericObjectProxyBaseT_long_t,
  _swigc__p_mtsGenericObjectProxyBaseT_mtsComponentState_t,
  _swigc__p_mtsGenericObjectProxyBaseT_mtsInterfaceProvidedDescription_t,
  _swigc__p_mtsGenericObjectProxyBaseT_mtsInterfaceRequiredDescription_t,
  _swigc__p_mtsGenericObjectProxyBaseT_short_t,
  _swigc__p_mtsGenericObjectProxyBaseT_std__string_t,
  _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_char_std__allocatorT_char_t_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_double_std__allocatorT_double_t_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_unsigned_int_t,
  _swigc__p_mtsGenericObjectProxyBaseT_unsigned_long_t,
  _swigc__p_mtsGenericObjectProxyBaseT_unsigned_short_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct2x2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct3x3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct4x4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vct9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBool9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctBoolVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctChar9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctCharVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctDoubleMat_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctDoubleVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloat9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloatMat_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFloatVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctFrameBaseT_vctRot3_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctInt9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctIntMat_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctIntVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLong9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctLongVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShort9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctShortVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUChar9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUCharVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUInt9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUIntVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULong9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctULongVec_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort1_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort2_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort3_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort4_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort5_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort6_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort7_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort8_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShort9_t,
  _swigc__p_mtsGenericObjectProxyBaseT_vctUShortVec_t,
  _swigc__p_mtsGenericObjectProxyT_bool_t,
  _swigc__p_mtsGenericObjectProxyT_char_t,
  _swigc__p_mtsGenericObjectProxyT_double_t,
  _swigc__p_mtsGenericObjectProxyT_float_t,
  _swigc__p_mtsGenericObjectProxyT_int_t,
  _swigc__p_mtsGenericObjectProxyT_long_long_t,
  _swigc__p_mtsGenericObjectProxyT_long_t,
  _swigc__p_mtsGenericObjectProxyT_mtsCommandQualifiedReadDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsCommandReadDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsCommandVoidDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsCommandVoidReturnDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsCommandWriteDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsCommandWriteReturnDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsComponentStateChange_t,
  _swigc__p_mtsGenericObjectProxyT_mtsComponentState_t,
  _swigc__p_mtsGenericObjectProxyT_mtsComponentStatusControl_t,
  _swigc__p_mtsGenericObjectProxyT_mtsDescriptionComponentClass_t,
  _swigc__p_mtsGenericObjectProxyT_mtsDescriptionComponent_t,
  _swigc__p_mtsGenericObjectProxyT_mtsDescriptionConnection_t,
  _swigc__p_mtsGenericObjectProxyT_mtsDescriptionIntefaceFullName_t,
  _swigc__p_mtsGenericObjectProxyT_mtsDescriptionInterface_t,
  _swigc__p_mtsGenericObjectProxyT_mtsDescriptionLoadLibrary_t,
  _swigc__p_mtsGenericObjectProxyT_mtsEndUserInterfaceArg_t,
  _swigc__p_mtsGenericObjectProxyT_mtsEventVoidDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsEventWriteDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsExecutionResult_t,
  _swigc__p_mtsGenericObjectProxyT_mtsInterfaceProvidedDescription_t,
  _swigc__p_mtsGenericObjectProxyT_mtsInterfaceRequiredDescription_t,
  _swigc__p_mtsGenericObjectProxyT_short_t,
  _swigc__p_mtsGenericObjectProxyT_std__string_t,
  _swigc__p_mtsGenericObjectProxyT_std__vectorT_char_std__allocatorT_char_t_t_t,
  _swigc__p_mtsGenericObjectProxyT_std__vectorT_double_std__allocatorT_double_t_t_t,
  _swigc__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t_t,
  _swigc__p_mtsGenericObjectProxyT_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t_t,
  _swigc__p_mtsGenericObjectProxyT_std__vectorT_std__string_std__allocatorT_std__string_t_t_t,
  _swigc__p_mtsGenericObjectProxyT_std__vectorT_vct3_std__allocatorT_vct3_t_t_t,
  _swigc__p_mtsGenericObjectProxyT_unsigned_char_t,
  _swigc__p_mtsGenericObjectProxyT_unsigned_int_t,
  _swigc__p_mtsGenericObjectProxyT_unsigned_long_t,
  _swigc__p_mtsGenericObjectProxyT_unsigned_short_t,
  _swigc__p_mtsGenericObjectProxyT_vct1_t,
  _swigc__p_mtsGenericObjectProxyT_vct2_t,
  _swigc__p_mtsGenericObjectProxyT_vct2x2_t,
  _swigc__p_mtsGenericObjectProxyT_vct3_t,
  _swigc__p_mtsGenericObjectProxyT_vct3x3_t,
  _swigc__p_mtsGenericObjectProxyT_vct4_t,
  _swigc__p_mtsGenericObjectProxyT_vct4x4_t,
  _swigc__p_mtsGenericObjectProxyT_vct5_t,
  _swigc__p_mtsGenericObjectProxyT_vct6_t,
  _swigc__p_mtsGenericObjectProxyT_vct7_t,
  _swigc__p_mtsGenericObjectProxyT_vct8_t,
  _swigc__p_mtsGenericObjectProxyT_vct9_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool1_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool2_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool3_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool4_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool5_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool6_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool7_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool8_t,
  _swigc__p_mtsGenericObjectProxyT_vctBool9_t,
  _swigc__p_mtsGenericObjectProxyT_vctBoolVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar1_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar2_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar3_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar4_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar5_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar6_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar7_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar8_t,
  _swigc__p_mtsGenericObjectProxyT_vctChar9_t,
  _swigc__p_mtsGenericObjectProxyT_vctCharVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctDoubleMat_t,
  _swigc__p_mtsGenericObjectProxyT_vctDoubleVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__DeviceInfo_t_t,
  _swigc__p_mtsGenericObjectProxyT_vctDynamicVectorT_svlFilterSourceVideoCaptureTypes__ImageFormat_t_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat1_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat2_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat3_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat4_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat5_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat6_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat7_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat8_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloat9_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloatMat_t,
  _swigc__p_mtsGenericObjectProxyT_vctFloatVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctFrame4x4T_double_VCT_ROW_MAJOR_t_t,
  _swigc__p_mtsGenericObjectProxyT_vctFrameBaseT_vctRot3_t_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt1_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt2_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt3_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt4_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt5_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt6_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt7_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt8_t,
  _swigc__p_mtsGenericObjectProxyT_vctInt9_t,
  _swigc__p_mtsGenericObjectProxyT_vctIntMat_t,
  _swigc__p_mtsGenericObjectProxyT_vctIntVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong1_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong2_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong3_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong4_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong5_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong6_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong7_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong8_t,
  _swigc__p_mtsGenericObjectProxyT_vctLong9_t,
  _swigc__p_mtsGenericObjectProxyT_vctLongVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort1_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort2_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort3_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort4_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort5_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort6_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort7_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort8_t,
  _swigc__p_mtsGenericObjectProxyT_vctShort9_t,
  _swigc__p_mtsGenericObjectProxyT_vctShortVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar1_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar2_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar3_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar4_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar5_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar6_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar7_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar8_t,
  _swigc__p_mtsGenericObjectProxyT_vctUChar9_t,
  _swigc__p_mtsGenericObjectProxyT_vctUCharVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt1_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt2_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt3_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt4_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt5_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt6_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt7_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt8_t,
  _swigc__p_mtsGenericObjectProxyT_vctUInt9_t,
  _swigc__p_mtsGenericObjectProxyT_vctUIntVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong1_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong2_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong3_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong4_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong5_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong6_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong7_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong8_t,
  _swigc__p_mtsGenericObjectProxyT_vctULong9_t,
  _swigc__p_mtsGenericObjectProxyT_vctULongVec_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort1_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort2_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort3_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort4_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort5_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort6_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort7_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort8_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShort9_t,
  _swigc__p_mtsGenericObjectProxyT_vctUShortVec_t,
  _swigc__p_mtsInterface,
  _swigc__p_mtsInterfaceProvided,
  _swigc__p_mtsInterfaceQueueingPolicy,
  _swigc__p_mtsInterfaceRequired,
  _swigc__p_mtsIntervalStatistics,
  _swigc__p_mtsManagerComponentServices,
  _swigc__p_mtsManagerLocal,
  _swigc__p_mtsManagerLocalInterface,
  _swigc__p_mtsMatrixT_bool_t,
  _swigc__p_mtsMatrixT_char_t,
  _swigc__p_mtsMatrixT_double_t,
  _swigc__p_mtsMatrixT_float_t,
  _swigc__p_mtsMatrixT_int_t,
  _swigc__p_mtsMatrixT_long_t,
  _swigc__p_mtsMatrixT_short_t,
  _swigc__p_mtsMatrixT_unsigned_char_t,
  _swigc__p_mtsMatrixT_unsigned_int_t,
  _swigc__p_mtsMatrixT_unsigned_long_t,
  _swigc__p_mtsMatrixT_unsigned_short_t,
  _swigc__p_mtsRequiredType,
  _swigc__p_mtsStateIndex,
  _swigc__p_mtsTask,
  _swigc__p_mtsTaskContinuous,
  _swigc__p_mtsTaskContinuousConstructorArg,
  _swigc__p_mtsTaskFromSignal,
  _swigc__p_mtsTaskMain,
  _swigc__p_mtsTaskPeriodic,
  _swigc__p_mtsTaskPeriodicConstructorArg,
  _swigc__p_mtsVectorT_bool_t,
  _swigc__p_mtsVectorT_char_t,
  _swigc__p_mtsVectorT_double_t,
  _swigc__p_mtsVectorT_float_t,
  _swigc__p_mtsVectorT_int_t,
  _swigc__p_mtsVectorT_long_t,
  _swigc__p_mtsVectorT_short_t,
  _swigc__p_mtsVectorT_std__string_t,
  _swigc__p_mtsVectorT_unsigned_char_t,
  _swigc__p_mtsVectorT_unsigned_int_t,
  _swigc__p_mtsVectorT_unsigned_long_t,
  _swigc__p_mtsVectorT_unsigned_short_t,
  _swigc__p_ndimension_type,
  _swigc__p_nindex_type,
  _swigc__p_nsize_type,
  _swigc__p_nstride_type,
  _swigc__p_off_type,
  _swigc__p_openmode,
  _swigc__p_osaSerialPort,
  _swigc__p_osaTimeServer,
  _swigc__p_p_svlFilterSourceVideoCaptureTypes__DeviceInfo,
  _swigc__p_p_svlFilterSourceVideoCaptureTypes__ImageFormat,
  _swigc__p_p_svlVideoIO__Compression,
  _swigc__p_p_void,
  _swigc__p_pos_type,
  _swigc__p_ptrdiff_t,
  _swigc__p_seekdir,
  _swigc__p_short,
  _swigc__p_size_t,
  _swigc__p_size_type,
  _swigc__p_state_type,
  _swigc__p_std__basic_iosT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_iostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_istreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_ostreamT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_streambufT_char_std__char_traitsT_char_t_t,
  _swigc__p_std__basic_stringT_char_std__char_traitsT_char_t_std__allocatorT_char_t_t,
  _swigc__p_std__invalid_argument,
  _swigc__p_std__ios_base,
  _swigc__p_std__locale,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_char_std__allocatorT_char_t_t,
  _swigc__p_std__vectorT_double_std__allocatorT_double_t_t,
  _swigc__p_std__vectorT_mtsCommandQualifiedReadDescription_std__allocatorT_mtsCommandQualifiedReadDescription_t_t,
  _swigc__p_std__vectorT_mtsCommandReadDescription_std__allocatorT_mtsCommandReadDescription_t_t,
  _swigc__p_std__vectorT_mtsCommandVoidDescription_std__allocatorT_mtsCommandVoidDescription_t_t,
  _swigc__p_std__vectorT_mtsCommandVoidReturnDescription_std__allocatorT_mtsCommandVoidReturnDescription_t_t,
  _swigc__p_std__vectorT_mtsCommandWriteDescription_std__allocatorT_mtsCommandWriteDescription_t_t,
  _swigc__p_std__vectorT_mtsCommandWriteReturnDescription_std__allocatorT_mtsCommandWriteReturnDescription_t_t,
  _swigc__p_std__vectorT_mtsDescriptionComponentClass_std__allocatorT_mtsDescriptionComponentClass_t_t,
  _swigc__p_std__vectorT_mtsDescriptionConnection_std__allocatorT_mtsDescriptionConnection_t_t,
  _swigc__p_std__vectorT_mtsEventVoidDescription_std__allocatorT_mtsEventVoidDescription_t_t,
  _swigc__p_std__vectorT_mtsEventWriteDescription_std__allocatorT_mtsEventWriteDescription_t_t,
  _swigc__p_std__vectorT_std__string_std__allocatorT_std__string_t_t,
  _swigc__p_std__vectorT_svlSampleImageRGB_std__allocatorT_svlSampleImageRGB_t_t,
  _swigc__p_std__vectorT_vct3_std__allocatorT_vct3_t_t,
  _swigc__p_streamoff,
  _swigc__p_streampos,
  _swigc__p_streamsize,
  _swigc__p_stride_type,
  _swigc__p_svlBufferSample,
  _swigc__p_svlCameraGeometry,
  _swigc__p_svlFilterBase,
  _swigc__p_svlFilterImageCameraCalibrationOpenCV,
  _swigc__p_svlFilterImageChannelSwapper,
  _swigc__p_svlFilterImageFileWriter,
  _swigc__p_svlFilterImageRectifier,
  _swigc__p_svlFilterImageResizer,
  _swigc__p_svlFilterImageWindow,
  _swigc__p_svlFilterInput,
  _swigc__p_svlFilterOutput,
  _swigc__p_svlFilterSourceBase,
  _swigc__p_svlFilterSourceBuffer,
  _swigc__p_svlFilterSourceVideoCapture,
  _swigc__p_svlFilterSourceVideoCaptureTypes__DeviceInfo,
  _swigc__p_svlFilterSourceVideoCaptureTypes__ExternalTrigger,
  _swigc__p_svlFilterSourceVideoCaptureTypes__ImageFormat,
  _swigc__p_svlFilterSourceVideoCaptureTypes__ImageProperties,
  _swigc__p_svlFilterSourceVideoCaptureTypes__PatternType,
  _swigc__p_svlFilterSourceVideoCaptureTypes__PixelType,
  _swigc__p_svlFilterSourceVideoCaptureTypes__PlatformType,
  _swigc__p_svlFilterSourceVideoFile,
  _swigc__p_svlFilterVideoFileWriter,
  _swigc__p_svlImageProcessingHelper__BlobDetectorInternals,
  _swigc__p_svlImageProcessingHelper__EllipseFitterInternals,
  _swigc__p_svlImageProcessingHelper__ExposureInternals,
  _swigc__p_svlImageProcessingHelper__RectificationInternals,
  _swigc__p_svlImageProcessingInternals,
  _swigc__p_svlImageProcessing__Internals,
  _swigc__p_svlImageRGB,
  _swigc__p_svlPixelType,
  _swigc__p_svlProcInfo,
  _swigc__p_svlRect,
  _swigc__p_svlSample,
  _swigc__p_svlSampleBlobs,
  _swigc__p_svlSampleCameraGeometry,
  _swigc__p_svlSampleImage,
  _swigc__p_svlSampleImage3DMap,
  _swigc__p_svlSampleImageCustomT_unsigned_char_3_1_t,
  _swigc__p_svlSampleImageMono32,
  _swigc__p_svlSampleImageMono32Stereo,
  _swigc__p_svlSampleImageMono8,
  _swigc__p_svlSampleImageMono8Stereo,
  _swigc__p_svlSampleMatrix,
  _swigc__p_svlSampleMatrixFloat,
  _swigc__p_svlStreamManager,
  _swigc__p_svlStreamType,
  _swigc__p_svlVidCapSrcBase,
  _swigc__p_svlVidCapSrcDialogThread,
  _swigc__p_svlVideoCodecCVI,
  _swigc__p_svlVideoIO__Compression,
  _swigc__p_svlWindowEventHandlerBase,
  _swigc__p_swig__SwigPyIterator,
  _swigc__p_traits_type,
  _swigc__p_unsigned_char,
  _swigc__p_unsigned_int,
  _swigc__p_unsigned_long,
  _swigc__p_unsigned_long_long,
  _swigc__p_unsigned_short,
  _swigc__p_value_type,
  _swigc__p_vct3x3,
  _swigc__p_vctAngleRotation2,
  _swigc__p_vctAxisAngleRotation3T_double_t,
  _swigc__p_vctAxisAngleRotation3T_float_t,
  _swigc__p_vctBarycentricVectorT_double_1_t,
  _swigc__p_vctBarycentricVectorT_double_2_t,
  _swigc__p_vctBarycentricVectorT_double_3_t,
  _swigc__p_vctBarycentricVectorT_double_4_t,
  _swigc__p_vctDynamicMatrixT_double_t,
  _swigc__p_vctFixedSizeVectorT_svlImageProcessing__Internals_SVL_MAX_CHANNELS_t,
  _swigc__p_vctFrame4x4T_double_VCT_ROW_MAJOR_t,
  _swigc__p_vctFrame4x4T_float_VCT_ROW_MAJOR_t,
  _swigc__p_vctFrameBaseT_vctMatrixRotation2T_double_t_t,
  _swigc__p_vctFrameBaseT_vctMatrixRotation2T_float_t_t,
  _swigc__p_vctFrameBaseT_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t_t,
  _swigc__p_vctFrameBaseT_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t_t,
  _swigc__p_vctFrameBaseT_vctQuaternionRotation3T_double_t_t,
  _swigc__p_vctFrameBaseT_vctQuaternionRotation3T_float_t_t,
  _swigc__p_vctMatrixRotation2T_double_t,
  _swigc__p_vctMatrixRotation2T_float_t,
  _swigc__p_vctMatrixRotation3T_double_VCT_ROW_MAJOR_t,
  _swigc__p_vctMatrixRotation3T_float_VCT_ROW_MAJOR_t,
  _swigc__p_vctQuaternionRotation3T_double_t,
  _swigc__p_vctQuaternionRotation3T_float_t,
  _swigc__p_vctQuaternionT_double_t,
  _swigc__p_vctQuaternionT_float_t,
  _swigc__p_vctRodriguezRotation3T_double_t,
  _swigc__p_vctRodriguezRotation3T_float_t,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_POINTER, (char*)"endl_cb_ptr", 0, 0, (void *)((std::basic_ostream< char,std::char_traits< char > > & (*)(std::basic_ostream< char,std::char_traits< char > > &))(std::endl< char,std::char_traits< char > >)), &SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t },
{ SWIG_PY_POINTER, (char*)"ends_cb_ptr", 0, 0, (void *)((std::basic_ostream< char,std::char_traits< char > > & (*)(std::basic_ostream< char,std::char_traits< char > > &))(std::ends< char,std::char_traits< char > >)), &SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t },
{ SWIG_PY_POINTER, (char*)"flush_cb_ptr", 0, 0, (void *)((std::basic_ostream< char,std::char_traits< char > > & (*)(std::basic_ostream< char,std::char_traits< char > > &))(std::flush< char,std::char_traits< char > >)), &SWIGTYPE_p_f_r_std__basic_ostream__char_std__char_traits__char______r_std__basic_ostreamT_char_std__char_traitsT_char_t_t },
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN int
  swig_varlink_print(swig_varlinkobject *v, FILE *fp, int SWIGUNUSEDPARM(flags)) {
    char *tmp;
    PyObject *str = swig_varlink_str(v);
    fprintf(fp,"Swig global variables ");
    fprintf(fp,"%s\n", tmp = SWIG_Python_str_AsChar(str));
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(str);
    return 0;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_SetString(PyExc_NameError,"Unknown C global variable");
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
        /* PyObject header changed in Python 3 */
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        (char *)"swigvarlink",              /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        (printfunc) swig_varlink_print,     /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
#if PY_VERSION_HEX >= 0x02020000
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
#endif
#if PY_VERSION_HEX >= 0x02030000
        0,                                  /* tp_del */
#endif
#if PY_VERSION_HEX >= 0x02060000
        0,                                  /* tp_version */
#endif
#ifdef COUNT_ALLOCS
        0,0,0,0                             /* tp_alloc -> tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
#if PY_VERSION_HEX < 0x02020000
      varlink_type.ob_type = &PyType_Type;
#else
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
#endif
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        strncpy(gv->name,name,size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *_SWIG_globals = 0; 
    if (!_SWIG_globals) _SWIG_globals = SWIG_newvarlink();  
    return _SWIG_globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (c && (c = strstr(c, "swig_ptr: "))) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              strncpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              strncpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md;
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
# if PY_VERSION_HEX >= 0x03020000
    PyModuleDef_HEAD_INIT,
# else
    {
      PyObject_HEAD_INIT(NULL)
      NULL, /* m_init */
      0,    /* m_index */
      NULL, /* m_copy */
    },
# endif
    (char *) SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    (PyCFunction) SwigPyObject_own,
    (PyCFunction) SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyObject *metatype_args;
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  
  /* metatype is used to implement static member variables. */
  metatype_args = Py_BuildValue("(s(O){})", "SwigPyObjectType", &PyType_Type);
  assert(metatype_args);
  metatype = (PyTypeObject *) PyType_Type.tp_call((PyObject *) &PyType_Type, metatype_args, NULL);
  assert(metatype);
  Py_DECREF(metatype_args);
  metatype->tp_setattro = (setattrofunc) &SwigPyObjectType_setattro;
  assert(PyType_Ready(metatype) >= 0);
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule((char *) SWIG_name, SwigMethods);
#endif
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = SwigPyObject_TypeOnce();
  } else if (SwigPyObject_TypeOnce()->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  PyDict_SetItemString(md,(char*)"cvar", SWIG_globals());
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_boolalpha",Swig_var_ios_base_boolalpha_get, Swig_var_ios_base_boolalpha_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_dec",Swig_var_ios_base_dec_get, Swig_var_ios_base_dec_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_fixed",Swig_var_ios_base_fixed_get, Swig_var_ios_base_fixed_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_hex",Swig_var_ios_base_hex_get, Swig_var_ios_base_hex_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_internal",Swig_var_ios_base_internal_get, Swig_var_ios_base_internal_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_left",Swig_var_ios_base_left_get, Swig_var_ios_base_left_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_oct",Swig_var_ios_base_oct_get, Swig_var_ios_base_oct_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_right",Swig_var_ios_base_right_get, Swig_var_ios_base_right_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_scientific",Swig_var_ios_base_scientific_get, Swig_var_ios_base_scientific_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_showbase",Swig_var_ios_base_showbase_get, Swig_var_ios_base_showbase_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_showpoint",Swig_var_ios_base_showpoint_get, Swig_var_ios_base_showpoint_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_showpos",Swig_var_ios_base_showpos_get, Swig_var_ios_base_showpos_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_skipws",Swig_var_ios_base_skipws_get, Swig_var_ios_base_skipws_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_unitbuf",Swig_var_ios_base_unitbuf_get, Swig_var_ios_base_unitbuf_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_uppercase",Swig_var_ios_base_uppercase_get, Swig_var_ios_base_uppercase_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_adjustfield",Swig_var_ios_base_adjustfield_get, Swig_var_ios_base_adjustfield_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_basefield",Swig_var_ios_base_basefield_get, Swig_var_ios_base_basefield_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_floatfield",Swig_var_ios_base_floatfield_get, Swig_var_ios_base_floatfield_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_badbit",Swig_var_ios_base_badbit_get, Swig_var_ios_base_badbit_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_eofbit",Swig_var_ios_base_eofbit_get, Swig_var_ios_base_eofbit_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_failbit",Swig_var_ios_base_failbit_get, Swig_var_ios_base_failbit_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_goodbit",Swig_var_ios_base_goodbit_get, Swig_var_ios_base_goodbit_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_app",Swig_var_ios_base_app_get, Swig_var_ios_base_app_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_ate",Swig_var_ios_base_ate_get, Swig_var_ios_base_ate_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_binary",Swig_var_ios_base_binary_get, Swig_var_ios_base_binary_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_ios_base_in",Swig_var_ios_base_ios_base_in_get, Swig_var_ios_base_ios_base_in_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_out",Swig_var_ios_base_out_get, Swig_var_ios_base_out_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_trunc",Swig_var_ios_base_trunc_get, Swig_var_ios_base_trunc_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_beg",Swig_var_ios_base_beg_get, Swig_var_ios_base_beg_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_cur",Swig_var_ios_base_cur_get, Swig_var_ios_base_cur_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"ios_base_end",Swig_var_ios_base_end_get, Swig_var_ios_base_end_set);
  SWIG_Python_SetConstant(d, "ios_base_erase_event",SWIG_From_int(static_cast< int >(std::ios_base::erase_event)));
  SWIG_Python_SetConstant(d, "ios_base_imbue_event",SWIG_From_int(static_cast< int >(std::ios_base::imbue_event)));
  SWIG_Python_SetConstant(d, "ios_base_copyfmt_event",SWIG_From_int(static_cast< int >(std::ios_base::copyfmt_event)));
  SWIG_addvarlink(SWIG_globals(),(char*)"cin",Swig_var_cin_get, Swig_var_cin_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"cout",Swig_var_cout_get, Swig_var_cout_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"cerr",Swig_var_cerr_get, Swig_var_cerr_set);
  SWIG_addvarlink(SWIG_globals(),(char*)"clog",Swig_var_clog_get, Swig_var_clog_set);
  
  
  
  
  import_array() // numpy initialization
  
  SWIG_Python_SetConstant(d, "svlStreamManager_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlStreamManager::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlStreamManager_InitialLoD",SWIG_From_int(static_cast< int >(svlStreamManager::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterBase_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterBase::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterBase_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterBase::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterImageFileWriter_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterImageFileWriter::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterImageFileWriter_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterImageFileWriter::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterImageRectifier_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterImageRectifier::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterImageRectifier_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterImageRectifier::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterImageResizer_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterImageResizer::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterImageResizer_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterImageResizer::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterSourceBase_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterSourceBase::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterSourceBase_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterSourceBase::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoFile_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterSourceVideoFile::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoFile_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterSourceVideoFile::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterVideoFileWriter_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterVideoFileWriter::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterVideoFileWriter_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterVideoFileWriter::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterSourceBuffer_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterSourceBuffer::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterSourceBuffer_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterSourceBuffer::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterImageChannelSwapper_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterImageChannelSwapper::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterImageChannelSwapper_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterImageChannelSwapper::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlSampleImageRGB_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlSampleImageCustom< unsigned char,3,1 >::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlSampleImageRGB_InitialLoD",SWIG_From_int(static_cast< int >(svlSampleImageCustom< unsigned char,3,1 >::InitialLoD)));
  SWIG_Python_SetConstant(d, "DI_None",SWIG_From_int(static_cast< int >(svlImageProcessing::DI_None)));
  SWIG_Python_SetConstant(d, "DI_Blending",SWIG_From_int(static_cast< int >(svlImageProcessing::DI_Blending)));
  SWIG_Python_SetConstant(d, "DI_Discarding",SWIG_From_int(static_cast< int >(svlImageProcessing::DI_Discarding)));
  SWIG_Python_SetConstant(d, "DI_AdaptiveBlending",SWIG_From_int(static_cast< int >(svlImageProcessing::DI_AdaptiveBlending)));
  SWIG_Python_SetConstant(d, "DI_AdaptiveDiscarding",SWIG_From_int(static_cast< int >(svlImageProcessing::DI_AdaptiveDiscarding)));
  SWIG_Python_SetConstant(d, "svlVideoCodecCVI_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlVideoCodecCVI::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlVideoCodecCVI_InitialLoD",SWIG_From_int(static_cast< int >(svlVideoCodecCVI::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterImageWindow_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterImageWindow::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterImageWindow_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterImageWindow::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterImageCameraCalibrationOpenCV_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterImageCameraCalibrationOpenCV::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterImageCameraCalibrationOpenCV_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterImageCameraCalibrationOpenCV::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_propShutter",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::propShutter)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_propGain",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::propGain)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_propWhiteBalance",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::propWhiteBalance)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_propBrightness",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::propBrightness)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_propGamma",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::propGamma)));
  SWIG_Python_SetConstant(d, "svlFilterSourceVideoCapture_propSaturation",SWIG_From_int(static_cast< int >(svlFilterSourceVideoCapture::propSaturation)));
  SWIG_Python_SetConstant(d, "svlVidCapSrcBase_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlVidCapSrcBase::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlVidCapSrcBase_InitialLoD",SWIG_From_int(static_cast< int >(svlVidCapSrcBase::InitialLoD)));
  SWIG_Python_SetConstant(d, "svlFilterOutput_HAS_DYNAMIC_CREATION",SWIG_From_int(static_cast< int >(svlFilterOutput::HAS_DYNAMIC_CREATION)));
  SWIG_Python_SetConstant(d, "svlFilterOutput_InitialLoD",SWIG_From_int(static_cast< int >(svlFilterOutput::InitialLoD)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

